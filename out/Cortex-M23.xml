<!-- version for debug hardware connections -->
<core_definition xmlns="http://www.arm.com/core_definition" xmlns:cr="http://www.arm.com/core_reg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:tcf="http://com.arm.targetconfigurationeditor" xsi:schemaLocation="http://www.arm.com/core_definition ../Schemas/core_definition.xsd" architecture="ARMv8M">
  <name>Cortex-M23</name>
  <internal_name>Cortex-M23</internal_name>
  <series>M</series>

  <cr:register_list xmlns:cr="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" display_by_default="true" name="Core">

    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R0" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 0</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R1" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 1</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R2" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 2</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R3" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 3</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R4" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 4</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R5" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 5</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R6" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 6</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R7" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 7</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R8" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 8</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R9" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 9</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R10" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 10</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R11" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 11</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R12" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">General-Purpose Register 12</gui_name>
      <description language="en">General-purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Current Stack Pointer Register</gui_name>
      <device_name type="cadi">R13</device_name>
      <description language="en">Exception and procedure stack pointer register</description>
      <bitField conditional="false" name="VALUE">
        <gui_name language="en">VALUE</gui_name>
        <description language="en">Stack pointer</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="LR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Link Register</gui_name>
      <device_name type="cadi">R14</device_name>
      <description language="en">Exception and procedure call link register</description>
      <bitField conditional="false" name="VALUE">
        <gui_name language="en">VALUE</gui_name>
        <description language="en">Link register</description>
        <definition>[31:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PC" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Program Counter</gui_name>
      <device_name type="cadi">R15</device_name>
      <description language="en">Holds the current program counter value</description>
      <bitField conditional="false" name="VALUE">
        <gui_name language="en">VALUE</gui_name>
        <description language="en">Program counter</description>
        <definition>[31:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="XPSR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Combined Program Status Registers</gui_name>
      <description language="en">Provides access to a combination of the APSR, EPSR and IPSR</description>
      <bitField conditional="false" name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Saturate flag</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 state</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater-than or equal flag</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField conditional="false" name="IT">
        <gui_name language="en">IT</gui_name>
        <description language="en">If-then flags</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField conditional="false" name="ICI">
        <gui_name language="en">ICI</gui_name>
        <description language="en">Interrupt continuation flags</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField conditional="false" name="Exception">
        <gui_name language="en">Exception</gui_name>
        <description language="en">Exception number</description>
        <definition>[8:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="APSR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Application Program Status Register</gui_name>
      <description language="en">Provides privileged and unprivileged access to the PE Execution state fields</description>
      <bitField conditional="false" enumerationId="APSR_N" name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative condition flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="APSR_Z" name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero condition flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="APSR_C" name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry Condition flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="APSR_V" name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow condition flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="APSR_Q" name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Sticky saturation flag</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or equal flags</description>
        <definition>[19:16]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="BASEPRI" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Base Priority Mask Register</gui_name>
      <description language="en">Changes the priority level required for exception preemption</description>
      <bitField conditional="false" enumerationId="BASEPRI_BASEPRI" name="BASEPRI">
        <gui_name language="en">BASEPRI</gui_name>
        <description language="en">Base priority mask</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="BASEPRI_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Base Priority Mask Register</gui_name>
      <description language="en">Changes the priority level required for exception preemption</description>
      <bitField conditional="false" enumerationId="BASEPRI_BASEPRI" name="BASEPRI">
        <gui_name language="en">BASEPRI</gui_name>
        <description language="en">Base priority mask</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="BASEPRI_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Base Priority Mask Register</gui_name>
      <description language="en">Changes the priority level required for exception preemption</description>
      <bitField conditional="false" enumerationId="BASEPRI_BASEPRI" name="BASEPRI">
        <gui_name language="en">BASEPRI</gui_name>
        <description language="en">Base priority mask</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="CONTROL" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Control Register</gui_name>
      <description language="en">Provides access to the PE control fields</description>
      <bitField conditional="false" enumerationId="CONTROL_SFPA" name="SFPA">
        <gui_name language="en">SFPA</gui_name>
        <description language="en">Secure floating-point active</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_FPCA" name="FPCA">
        <gui_name language="en">FPCA</gui_name>
        <description language="en">Floating-point context active</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_SPSEL" name="SPSEL">
        <gui_name language="en">SPSEL</gui_name>
        <description language="en">Stack-pointer select</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_nPRIV" name="nPRIV">
        <gui_name language="en">nPRIV</gui_name>
        <description language="en">Not privileged</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="CONTROL_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Control Register</gui_name>
      <description language="en">Provides access to the PE control fields</description>
      <bitField conditional="false" enumerationId="CONTROL_SFPA" name="SFPA">
        <gui_name language="en">SFPA</gui_name>
        <description language="en">Secure floating-point active</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_FPCA" name="FPCA">
        <gui_name language="en">FPCA</gui_name>
        <description language="en">Floating-point context active</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_SPSEL" name="SPSEL">
        <gui_name language="en">SPSEL</gui_name>
        <description language="en">Stack-pointer select</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_nPRIV" name="nPRIV">
        <gui_name language="en">nPRIV</gui_name>
        <description language="en">Not privileged</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="CONTROL_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Control Register</gui_name>
      <description language="en">Provides access to the PE control fields</description>
      <bitField conditional="false" enumerationId="CONTROL_SFPA" name="SFPA">
        <gui_name language="en">SFPA</gui_name>
        <description language="en">Secure floating-point active</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_FPCA" name="FPCA">
        <gui_name language="en">FPCA</gui_name>
        <description language="en">Floating-point context active</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_SPSEL" name="SPSEL">
        <gui_name language="en">SPSEL</gui_name>
        <description language="en">Stack-pointer select</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="CONTROL_nPRIV" name="nPRIV">
        <gui_name language="en">nPRIV</gui_name>
        <description language="en">Not privileged</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="EPSR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Execution Program Status Register</gui_name>
      <description language="en">Holds Execution state bits</description>
      <bitField conditional="false" enumerationId="EPSR_T" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 state bit</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="IT_ICI">
        <gui_name language="en">IT_ICI</gui_name>
        <description language="en">If-then and interrupt continuation</description>
        <definition>[15:10]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="EXC_RETURN" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Exception Return Payload</gui_name>
      <description language="en">Value provided in LR on entry to an exception, and used with a BX or load to PC to perform an exception return</description>
      <bitField conditional="false" name="PREFIX">
        <gui_name language="en">PREFIX</gui_name>
        <description language="en">Prefix</description>
        <definition>[31:24]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Secure or Non-secure stack</description>
        <definition>[6]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_DCRS" name="DCRS">
        <gui_name language="en">DCRS</gui_name>
        <description language="en">Default callee register stacking</description>
        <definition>[5]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_FType" name="FType">
        <gui_name language="en">FType</gui_name>
        <description language="en">Stack frame type</description>
        <definition>[4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_Mode" name="Mode">
        <gui_name language="en">Mode</gui_name>
        <description language="en">Mode</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_SPSEL" name="SPSEL">
        <gui_name language="en">SPSEL</gui_name>
        <description language="en">Stack pointer selection</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="EXC_RETURN_ES" name="ES">
        <gui_name language="en">ES</gui_name>
        <description language="en">Exception Secure</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="FAULTMASK" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Fault Mask Register</gui_name>
      <description language="en">Provides access to the PE FAULTMASK register</description>
      <bitField conditional="false" enumerationId="FAULTMASK_FM" name="FM">
        <gui_name language="en">FM</gui_name>
        <description language="en">Fault mask enable</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="FAULTMASK_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Fault Mask Register</gui_name>
      <description language="en">Provides access to the PE FAULTMASK register</description>
      <bitField conditional="false" enumerationId="FAULTMASK_FM" name="FM">
        <gui_name language="en">FM</gui_name>
        <description language="en">Fault mask enable</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="FAULTMASK_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Fault Mask Register</gui_name>
      <description language="en">Provides access to the PE FAULTMASK register</description>
      <bitField conditional="false" enumerationId="FAULTMASK_FM" name="FM">
        <gui_name language="en">FM</gui_name>
        <description language="en">Fault mask enable</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="FNC_RETURN" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Function Return Payload</gui_name>
      <description language="en">Value provided in LR on entry to Non-secure state from a Secure BL or BLX</description>
      <bitField conditional="false" name="PREFIX">
        <gui_name language="en">PREFIX</gui_name>
        <description language="en"/>
        <definition>[31:24]</definition>
      </bitField>
      <bitField conditional="false" name="ONES">
        <gui_name language="en">ONES</gui_name>
        <description language="en"/>
        <definition>[23:1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FNC_RETURN_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Secure</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="FPSCR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Floating-point Status and Control Register</gui_name>
      <description language="en">Provides control of the floating-point system</description>
      <bitField conditional="false" enumerationId="FPSCR_N" name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative condition flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_Z" name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero condition flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_C" name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry condition flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_V" name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow condition flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_AHP" name="AHP">
        <gui_name language="en">AHP</gui_name>
        <description language="en">Alternative half-precision control bit</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_DN" name="DN">
        <gui_name language="en">DN</gui_name>
        <description language="en">Default NaN mode control bit</description>
        <definition>[25]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_FZ" name="FZ">
        <gui_name language="en">FZ</gui_name>
        <description language="en">Flush-to-zero mode control</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_RMode" name="RMode">
        <gui_name language="en">RMode</gui_name>
        <description language="en">Rounding mode control field</description>
        <definition>[23:22]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_IDC" name="IDC">
        <gui_name language="en">IDC</gui_name>
        <description language="en">Input Denormal cumulative exception bit</description>
        <definition>[7]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_IXC" name="IXC">
        <gui_name language="en">IXC</gui_name>
        <description language="en">Inexact cumulative exception bit</description>
        <definition>[4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_UFC" name="UFC">
        <gui_name language="en">UFC</gui_name>
        <description language="en">Underflow cumulative exception bit</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_OFC" name="OFC">
        <gui_name language="en">OFC</gui_name>
        <description language="en">Overflow cumulative exception bit</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_DZC" name="DZC">
        <gui_name language="en">DZC</gui_name>
        <description language="en">Divide by Zero cumulative exception bit</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPSCR_IOC" name="IOC">
        <gui_name language="en">IOC</gui_name>
        <description language="en">Invalid Operation cumulative exception bit</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="IPSR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Interrupt Program Status Register</gui_name>
      <description language="en">Provides privileged access to the current exception number field</description>
      <bitField conditional="false" enumerationId="IPSR_Exception" name="Exception">
        <gui_name language="en">Exception</gui_name>
        <description language="en">Exception number</description>
        <definition>[8:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MAIR_ATTR" size="1" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Memory Attribute Indirection Register Attributes</gui_name>
      <description language="en">Defines the memory attribute encoding for use in the MPU_MAIR0 and MPU_MAIR1</description>
      <bitField conditional="false" enumerationId="MAIR_ATTR_Outer" name="Outer">
        <gui_name language="en">Outer</gui_name>
        <description language="en">Outer attributes</description>
        <definition>[7:4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MAIR_ATTR_Device" name="Device">
        <gui_name language="en">Device</gui_name>
        <description language="en">Device attributes</description>
        <definition>[3:2]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSP" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">MSP</gui_name>
      <description language="en">MSP</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSP_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">MSP_NS</gui_name>
      <description language="en">MSP_NS</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSP_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">MSP_S</gui_name>
      <description language="en">MSP_S</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSPLIM" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Main Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit of the Main stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSPLIM_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Main Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit of the Main stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="MSPLIM_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Main Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit of the Main stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PRIMASK" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Exception Mask Register</gui_name>
      <description language="en">Provides access to the PE PRIMASK register</description>
      <bitField conditional="false" enumerationId="PRIMASK_PM" name="PM">
        <gui_name language="en">PM</gui_name>
        <description language="en">Exception mask register</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PRIMASK_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Exception Mask Register</gui_name>
      <description language="en">Provides access to the PE PRIMASK register</description>
      <bitField conditional="false" enumerationId="PRIMASK_PM" name="PM">
        <gui_name language="en">PM</gui_name>
        <description language="en">Exception mask register</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PRIMASK_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Exception Mask Register</gui_name>
      <description language="en">Provides access to the PE PRIMASK register</description>
      <bitField conditional="false" enumerationId="PRIMASK_PM" name="PM">
        <gui_name language="en">PM</gui_name>
        <description language="en">Exception mask register</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSP" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">PSP</gui_name>
      <description language="en">PSP</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSP_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">PSP_NS</gui_name>
      <description language="en">PSP_NS</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSP_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">PSP_S</gui_name>
      <description language="en">PSP_S</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSPLIM" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Process Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit for the Process stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSPLIM_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Process Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit for the Process stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PSPLIM_S" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Process Stack Pointer Limit Register</gui_name>
      <description language="en">Holds the lower limit for the Process stack pointer</description>
      <bitField conditional="false" name="LIMIT">
        <gui_name language="en">LIMIT</gui_name>
        <description language="en">Stack limit</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="RETPSR" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Combined Exception Return Program Status Registers</gui_name>
      <description language="en">Value pushed to the stack on exception entry. On exception return this is used to restore the flags and other architectural state. This payload is also used for FNC_RETURN stacking, however in this case only some of the fields are used. See FunctionReturn() for details.</description>
      <bitField conditional="false" name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Saturate flag</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 state</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="SFPA">
        <gui_name language="en">SFPA</gui_name>
        <description language="en">Secure floating-point active</description>
        <definition>[20]</definition>
      </bitField>
      <bitField conditional="false" name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater-than or equal flag</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField conditional="false" name="IT">
        <gui_name language="en">IT</gui_name>
        <description language="en">If-then flags</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField conditional="false" name="ICI">
        <gui_name language="en">ICI</gui_name>
        <description language="en">Interrupt continuation flags</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="RETPSR_SPREALIGN" name="SPREALIGN">
        <gui_name language="en">SPREALIGN</gui_name>
        <description language="en">Stack-pointer re-align</description>
        <definition>[9]</definition>
      </bitField>
      <bitField conditional="false" name="Exception">
        <gui_name language="en">Exception</gui_name>
        <description language="en">Exception number</description>
        <definition>[8:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP_NS" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Stack Pointer (Non-secure)</gui_name>
      <description language="en">Provides access to the current Non-secure stack pointer</description>
      <bitField conditional="false" name="VALUE">
        <gui_name language="en">VALUE</gui_name>
        <description language="en">Stack pointer</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="TT_RESP" size="4" xml:base="Registers/V8-M_CORE.xml">
      <gui_name language="en">Test Target Response Payload</gui_name>
      <description language="en">Provides the response information from a TT, TTA, TTT, or TTAT instruction</description>
      <bitField conditional="false" name="IREGION">
        <gui_name language="en">IREGION</gui_name>
        <description language="en">IDAU region number</description>
        <definition>[31:24]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="TT_RESP_IRVALID" name="IRVALID">
        <gui_name language="en">IRVALID</gui_name>
        <description language="en">IREGION valid flag</description>
        <definition>[23]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="TT_RESP_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Security</description>
        <definition>[22]</definition>
      </bitField>
      <bitField conditional="false" name="NSRW">
        <gui_name language="en">NSRW</gui_name>
        <description language="en">Non-secure read and writeable</description>
        <definition>[21]</definition>
      </bitField>
      <bitField conditional="false" name="NSR">
        <gui_name language="en">NSR</gui_name>
        <description language="en">Non-secure readable</description>
        <definition>[20]</definition>
      </bitField>
      <bitField conditional="false" name="RW">
        <gui_name language="en">RW</gui_name>
        <description language="en">Read and writeable</description>
        <definition>[19]</definition>
      </bitField>
      <bitField conditional="false" name="R">
        <gui_name language="en">R</gui_name>
        <description language="en">Readable</description>
        <definition>[18]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="TT_RESP_SRVALID" name="SRVALID">
        <gui_name language="en">SRVALID</gui_name>
        <description language="en">SREGION valid flag</description>
        <definition>[17]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="TT_RESP_MRVALID" name="MRVALID">
        <gui_name language="en">MRVALID</gui_name>
        <description language="en">MREGION valid flag</description>
        <definition>[16]</definition>
      </bitField>
      <bitField conditional="false" name="SREGION">
        <gui_name language="en">SREGION</gui_name>
        <description language="en">SAU region number</description>
        <definition>[15:8]</definition>
      </bitField>
      <bitField conditional="false" name="MREGION">
        <gui_name language="en">MREGION</gui_name>
        <description language="en">MPU region number</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>

    <xi:include href="Registers/V8-M_CORE.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
  </cr:register_list>

  <cr:register_list name="FP">

    <register_group xmlns="http://www.arm.com/core_reg" name="Single" xml:base="Registers/VFP/FP_V8M.xml">
      <gui_name language="en">Single</gui_name>
      <description language="en">Single-precision registers</description>
      <register name="S0" size="4" access="RW" format="Float">
        <gui_name language="en">S0</gui_name>
        <description language="en">S0</description>
      </register>
      <register name="S1" size="4" access="RW" format="Float">
        <gui_name language="en">S1</gui_name>
        <description language="en">S1</description>
      </register>
      <register name="S2" size="4" access="RW" format="Float">
        <gui_name language="en">S2</gui_name>
        <description language="en">S2</description>
      </register>
      <register name="S3" size="4" access="RW" format="Float">
        <gui_name language="en">S3</gui_name>
        <description language="en">S3</description>
      </register>
      <register name="S4" size="4" access="RW" format="Float">
        <gui_name language="en">S4</gui_name>
        <description language="en">S4</description>
      </register>
      <register name="S5" size="4" access="RW" format="Float">
        <gui_name language="en">S5</gui_name>
        <description language="en">S5</description>
      </register>
      <register name="S6" size="4" access="RW" format="Float">
        <gui_name language="en">S6</gui_name>
        <description language="en">S6</description>
      </register>
      <register name="S7" size="4" access="RW" format="Float">
        <gui_name language="en">S7</gui_name>
        <description language="en">S7</description>
      </register>
      <register name="S8" size="4" access="RW" format="Float">
        <gui_name language="en">S8</gui_name>
        <description language="en">S8</description>
      </register>
      <register name="S9" size="4" access="RW" format="Float">
        <gui_name language="en">S9</gui_name>
        <description language="en">S9</description>
      </register>
      <register name="S10" size="4" access="RW" format="Float">
        <gui_name language="en">S10</gui_name>
        <description language="en">S10</description>
      </register>
      <register name="S11" size="4" access="RW" format="Float">
        <gui_name language="en">S11</gui_name>
        <description language="en">S11</description>
      </register>
      <register name="S12" size="4" access="RW" format="Float">
        <gui_name language="en">S12</gui_name>
        <description language="en">S12</description>
      </register>
      <register name="S13" size="4" access="RW" format="Float">
        <gui_name language="en">S13</gui_name>
        <description language="en">S13</description>
      </register>
      <register name="S14" size="4" access="RW" format="Float">
        <gui_name language="en">S14</gui_name>
        <description language="en">S14</description>
      </register>
      <register name="S15" size="4" access="RW" format="Float">
        <gui_name language="en">S15</gui_name>
        <description language="en">S15</description>
      </register>
      <register name="S16" size="4" access="RW" format="Float">
        <gui_name language="en">S16</gui_name>
        <description language="en">S16</description>
      </register>
      <register name="S17" size="4" access="RW" format="Float">
        <gui_name language="en">S17</gui_name>
        <description language="en">S17</description>
      </register>
      <register name="S18" size="4" access="RW" format="Float">
        <gui_name language="en">S18</gui_name>
        <description language="en">S18</description>
      </register>
      <register name="S19" size="4" access="RW" format="Float">
        <gui_name language="en">S19</gui_name>
        <description language="en">S19</description>
      </register>
      <register name="S20" size="4" access="RW" format="Float">
        <gui_name language="en">S20</gui_name>
        <description language="en">S20</description>
      </register>
      <register name="S21" size="4" access="RW" format="Float">
        <gui_name language="en">S21</gui_name>
        <description language="en">S21</description>
      </register>
      <register name="S22" size="4" access="RW" format="Float">
        <gui_name language="en">S22</gui_name>
        <description language="en">S22</description>
      </register>
      <register name="S23" size="4" access="RW" format="Float">
        <gui_name language="en">S23</gui_name>
        <description language="en">S23</description>
      </register>
      <register name="S24" size="4" access="RW" format="Float">
        <gui_name language="en">S24</gui_name>
        <description language="en">S24</description>
      </register>
      <register name="S25" size="4" access="RW" format="Float">
        <gui_name language="en">S25</gui_name>
        <description language="en">S25</description>
      </register>
      <register name="S26" size="4" access="RW" format="Float">
        <gui_name language="en">S26</gui_name>
        <description language="en">S26</description>
      </register>
      <register name="S27" size="4" access="RW" format="Float">
        <gui_name language="en">S27</gui_name>
        <description language="en">S27</description>
      </register>
      <register name="S28" size="4" access="RW" format="Float">
        <gui_name language="en">S28</gui_name>
        <description language="en">S28</description>
      </register>
      <register name="S29" size="4" access="RW" format="Float">
        <gui_name language="en">S29</gui_name>
        <description language="en">S29</description>
      </register>
      <register name="S30" size="4" access="RW" format="Float">
        <gui_name language="en">S30</gui_name>
        <description language="en">S30</description>
      </register>
      <register name="S31" size="4" access="RW" format="Float">
        <gui_name language="en">S31</gui_name>
        <description language="en">S31</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Double" xml:base="Registers/VFP/FP_V8M.xml">
      <gui_name language="en">Double</gui_name>
      <description language="en">Double-precision registers</description>
      <register name="D0" size="8" access="RW" format="Float">
        <gui_name language="en">D0</gui_name>
        <description language="en">D0</description>
      </register>
      <register name="D1" size="8" access="RW" format="Float">
        <gui_name language="en">D1</gui_name>
        <description language="en">D1</description>
      </register>
      <register name="D2" size="8" access="RW" format="Float">
        <gui_name language="en">D2</gui_name>
        <description language="en">D2</description>
      </register>
      <register name="D3" size="8" access="RW" format="Float">
        <gui_name language="en">D3</gui_name>
        <description language="en">D3</description>
      </register>
      <register name="D4" size="8" access="RW" format="Float">
        <gui_name language="en">D4</gui_name>
        <description language="en">D4</description>
      </register>
      <register name="D5" size="8" access="RW" format="Float">
        <gui_name language="en">D5</gui_name>
        <description language="en">D5</description>
      </register>
      <register name="D6" size="8" access="RW" format="Float">
        <gui_name language="en">D6</gui_name>
        <description language="en">D6</description>
      </register>
      <register name="D7" size="8" access="RW" format="Float">
        <gui_name language="en">D7</gui_name>
        <description language="en">D7</description>
      </register>
      <register name="D8" size="8" access="RW" format="Float">
        <gui_name language="en">D8</gui_name>
        <description language="en">D8</description>
      </register>
      <register name="D9" size="8" access="RW" format="Float">
        <gui_name language="en">D9</gui_name>
        <description language="en">D9</description>
      </register>
      <register name="D10" size="8" access="RW" format="Float">
        <gui_name language="en">D10</gui_name>
        <description language="en">D10</description>
      </register>
      <register name="D11" size="8" access="RW" format="Float">
        <gui_name language="en">D11</gui_name>
        <description language="en">D11</description>
      </register>
      <register name="D12" size="8" access="RW" format="Float">
        <gui_name language="en">D12</gui_name>
        <description language="en">D12</description>
      </register>
      <register name="D13" size="8" access="RW" format="Float">
        <gui_name language="en">D13</gui_name>
        <description language="en">D13</description>
      </register>
      <register name="D14" size="8" access="RW" format="Float">
        <gui_name language="en">D14</gui_name>
        <description language="en">D14</description>
      </register>
      <register name="D15" size="8" access="RW" format="Float">
        <gui_name language="en">D15</gui_name>
        <description language="en">D15</description>
      </register>
    </register_group>

  </cr:register_list>

  <cr:register_list xmlns:cr="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" display_by_default="true" name="System">

    <peripheral xmlns="http://www.arm.com/core_reg" name="FPE" offset="0x00000000" xml:base="Registers/System/V8-M_FPE_mm.xml">
      <gui_name language="en">FPE</gui_name>
      <description language="en">Floating Point Control Registers</description>
      <register access="RW" name="FPCAR_S" offset="0xE000EF38" size="4">
        <gui_name language="en">Floating-Point Context Address Register</gui_name>
        <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:3]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPCAR_NS" offset="0xE000EF38" size="4">
        <gui_name language="en">Floating-Point Context Address Register</gui_name>
        <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:3]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPCAR" offset="0xE000EF38" size="4">
        <gui_name language="en">Floating-Point Context Address Register</gui_name>
        <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:3]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPCCR_S" offset="0xE000EF34" size="4">
        <gui_name language="en">Floating-Point Context Control Register</gui_name>
        <description language="en">Holds control data for the Floating Point Unit</description>
        <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
          <gui_name language="en">ASPEN</gui_name>
          <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
          <gui_name language="en">LSPEN</gui_name>
          <description language="en">Enables lazy context save of FP state</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
          <gui_name language="en">LSPENS</gui_name>
          <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
          <gui_name language="en">CLRONRET</gui_name>
          <description language="en">Clear floating point caller saved registers on exception return</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
          <gui_name language="en">CLRONRETS</gui_name>
          <description language="en">CLRONRET Secure only</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
          <gui_name language="en">TS</gui_name>
          <description language="en">Treat FP registers as Secure enable</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
          <gui_name language="en">UFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
          <gui_name language="en">SPLIMVIOL</gui_name>
          <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
          <gui_name language="en">MONRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="SFRDY">
          <gui_name language="en">SFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
          <gui_name language="en">BFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
          <gui_name language="en">MMRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
          <gui_name language="en">HFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
          <gui_name language="en">THREAD</gui_name>
          <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
          <gui_name language="en">USER</gui_name>
          <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
          <gui_name language="en">LSPACT</gui_name>
          <description language="en">Indicates whether lazy preservation of the FP state is active</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPCCR_NS" offset="0xE000EF34" size="4">
        <gui_name language="en">Floating-Point Context Control Register</gui_name>
        <description language="en">Holds control data for the Floating Point Unit</description>
        <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
          <gui_name language="en">ASPEN</gui_name>
          <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
          <gui_name language="en">LSPEN</gui_name>
          <description language="en">Enables lazy context save of FP state</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
          <gui_name language="en">LSPENS</gui_name>
          <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
          <gui_name language="en">CLRONRET</gui_name>
          <description language="en">Clear floating point caller saved registers on exception return</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
          <gui_name language="en">CLRONRETS</gui_name>
          <description language="en">CLRONRET Secure only</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
          <gui_name language="en">TS</gui_name>
          <description language="en">Treat FP registers as Secure enable</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
          <gui_name language="en">UFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
          <gui_name language="en">SPLIMVIOL</gui_name>
          <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
          <gui_name language="en">MONRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="SFRDY">
          <gui_name language="en">SFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
          <gui_name language="en">BFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
          <gui_name language="en">MMRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
          <gui_name language="en">HFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
          <gui_name language="en">THREAD</gui_name>
          <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
          <gui_name language="en">USER</gui_name>
          <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
          <gui_name language="en">LSPACT</gui_name>
          <description language="en">Indicates whether lazy preservation of the FP state is active</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPCCR" offset="0xE000EF34" size="4">
        <gui_name language="en">Floating-Point Context Control Register</gui_name>
        <description language="en">Holds control data for the Floating Point Unit</description>
        <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
          <gui_name language="en">ASPEN</gui_name>
          <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
          <gui_name language="en">LSPEN</gui_name>
          <description language="en">Enables lazy context save of FP state</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
          <gui_name language="en">LSPENS</gui_name>
          <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
          <gui_name language="en">CLRONRET</gui_name>
          <description language="en">Clear floating point caller saved registers on exception return</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
          <gui_name language="en">CLRONRETS</gui_name>
          <description language="en">CLRONRET Secure only</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
          <gui_name language="en">TS</gui_name>
          <description language="en">Treat FP registers as Secure enable</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
          <gui_name language="en">UFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
          <gui_name language="en">SPLIMVIOL</gui_name>
          <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
          <gui_name language="en">MONRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="SFRDY">
          <gui_name language="en">SFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
          <gui_name language="en">BFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
          <gui_name language="en">MMRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
          <gui_name language="en">HFRDY</gui_name>
          <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
          <gui_name language="en">THREAD</gui_name>
          <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
          <gui_name language="en">USER</gui_name>
          <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
          <gui_name language="en">LSPACT</gui_name>
          <description language="en">Indicates whether lazy preservation of the FP state is active</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPDSCR_S" offset="0xE000EF3C" size="4">
        <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
        <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
        <bitField conditional="false" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding mode</description>
          <definition>[23:22]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPDSCR_NS" offset="0xE000EF3C" size="4">
        <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
        <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
        <bitField conditional="false" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding mode</description>
          <definition>[23:22]</definition>
        </bitField>
      </register>
      <register access="RW" name="FPDSCR" offset="0xE000EF3C" size="4">
        <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
        <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
        <bitField conditional="false" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding mode</description>
          <definition>[23:22]</definition>
        </bitField>
      </register>
      <register access="RO" name="MVFR0" offset="0xE000EF40" size="4">
        <gui_name language="en">Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the Floating-point Extension</description>
        <bitField conditional="false" enumerationId="MVFR0_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-point rounding modes</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Floating-point square root</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Floating-point divide</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Floating-point double-precision</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Floating-point single-precision</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">SIMD registers</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="MVFR1" offset="0xE000EF44" size="4">
        <gui_name language="en">Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the Floating-point Extension</description>
        <bitField conditional="false" enumerationId="MVFR1_FMAC" name="FMAC">
          <gui_name language="en">FMAC</gui_name>
          <description language="en">Fused multiply accumulate</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating-point half-precision</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Floating-point default NaN</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Floating-point flush-to-zero</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="MVFR2" offset="0xE000EF48" size="4">
        <gui_name language="en">Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the Floating-point Extension</description>
        <bitField conditional="false" enumerationId="MVFR2_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Floating-point miscellaneous</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="CM" offset="0x00000000" xml:base="Registers/System/V8-M_CM_mm.xml">
      <gui_name language="en">CM</gui_name>
      <description language="en">Cache Maintenance Operations</description>
      <register access="WO" name="BPIALL" offset="0xE000EF78" size="4">
        <gui_name language="en">Branch Predictor Invalidate All</gui_name>
        <description language="en">Invalidate all entries from branch predictors</description>
        <bitField conditional="false" name="Ignored">
          <gui_name language="en">Ignored</gui_name>
          <description language="en">Ignored</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCCIMVAC" offset="0xE000EF70" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by Address to PoC</gui_name>
        <description language="en">Clean and invalidate data or unified cache line by address to PoC</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCCISW" offset="0xE000EF74" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by Set/Way</gui_name>
        <description language="en">Clean and invalidate data or unified cache line by set/way</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Cache set/way</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCCMVAC" offset="0xE000EF68" size="4">
        <gui_name language="en">Data Cache line Clean by Address to PoC</gui_name>
        <description language="en">Clean data or unified cache line by address to PoC</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCCMVAU" offset="0xE000EF64" size="4">
        <gui_name language="en">Data Cache line Clean by address to PoU</gui_name>
        <description language="en">Clean data or unified cache line by address to PoU</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCCSW" offset="0xE000EF6C" size="4">
        <gui_name language="en">Data Cache Clean line by Set/Way</gui_name>
        <description language="en">Clean data or unified cache line by set/way</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Cache set/way</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCIMVAC" offset="0xE000EF5C" size="4">
        <gui_name language="en">Data Cache line Invalidate by Address to PoC</gui_name>
        <description language="en">Invalidate data or unified cache line by address to PoC</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DCISW" offset="0xE000EF60" size="4">
        <gui_name language="en">Data Cache line Invalidate by Set/Way</gui_name>
        <description language="en">Invalidate data or unified cache line by set/way</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Cache set/way</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" name="ICIALLU" offset="0xE000EF50" size="4">
        <gui_name language="en">Instruction Cache Invalidate All to PoU</gui_name>
        <description language="en">Invalidate all instruction caches to PoU</description>
        <bitField conditional="false" name="Ignored">
          <gui_name language="en">Ignored</gui_name>
          <description language="en">The value written to this field is ignored</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="ICIMVAU" offset="0xE000EF58" size="4">
        <gui_name language="en">Instruction Cache line Invalidate by Address to PoU</gui_name>
        <description language="en">Invalidate instruction cache line by address to PoU</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="ICB" offset="0x00000000" xml:base="Registers/System/V8-M_ICB_mm.xml">
      <gui_name language="en">ICB</gui_name>
      <description language="en">Interrupt Control Registers</description>
      <register access="RW" name="ACTLR" offset="0xE000E008" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options</description>
      </register>
      <register access="RW" name="CPPWR" offset="0xE000E00C" size="4">
        <gui_name language="en">Coprocessor Power Control Register</gui_name>
        <description language="en">Specifies whether coprocessors are permitted to enter a non-retentive power state</description>
        <bitField conditional="false" name="SUS11">
          <gui_name language="en">SUS11</gui_name>
          <description language="en">State UNKNOWN Secure only 11</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" name="SU11">
          <gui_name language="en">SU11</gui_name>
          <description language="en">State UNKNOWN 11</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS10" name="SUS10">
          <gui_name language="en">SUS10</gui_name>
          <description language="en">State UNKNOWN Secure only 10</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU10" name="SU10">
          <gui_name language="en">SU10</gui_name>
          <description language="en">State UNKNOWN 10</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS0" name="SUS0">
          <gui_name language="en">SUS0</gui_name>
          <description language="en">State UNKNOWN Secure only 0</description>
          <definition>[0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS1" name="SUS1">
          <gui_name language="en">SUS1</gui_name>
          <description language="en">State UNKNOWN Secure only 1</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS2" name="SUS2">
          <gui_name language="en">SUS2</gui_name>
          <description language="en">State UNKNOWN Secure only 2</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS3" name="SUS3">
          <gui_name language="en">SUS3</gui_name>
          <description language="en">State UNKNOWN Secure only 3</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS4" name="SUS4">
          <gui_name language="en">SUS4</gui_name>
          <description language="en">State UNKNOWN Secure only 4</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS5" name="SUS5">
          <gui_name language="en">SUS5</gui_name>
          <description language="en">State UNKNOWN Secure only 5</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS6" name="SUS6">
          <gui_name language="en">SUS6</gui_name>
          <description language="en">State UNKNOWN Secure only 6</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SUS7" name="SUS7">
          <gui_name language="en">SUS7</gui_name>
          <description language="en">State UNKNOWN Secure only 7</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU0" name="SU0">
          <gui_name language="en">SU0</gui_name>
          <description language="en">State UNKNOWN 0</description>
          <definition>[0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU1" name="SU1">
          <gui_name language="en">SU1</gui_name>
          <description language="en">State UNKNOWN 1</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU2" name="SU2">
          <gui_name language="en">SU2</gui_name>
          <description language="en">State UNKNOWN 2</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU3" name="SU3">
          <gui_name language="en">SU3</gui_name>
          <description language="en">State UNKNOWN 3</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU4" name="SU4">
          <gui_name language="en">SU4</gui_name>
          <description language="en">State UNKNOWN 4</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU5" name="SU5">
          <gui_name language="en">SU5</gui_name>
          <description language="en">State UNKNOWN 5</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU6" name="SU6">
          <gui_name language="en">SU6</gui_name>
          <description language="en">State UNKNOWN 6</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPPWR_SU7" name="SU7">
          <gui_name language="en">SU7</gui_name>
          <description language="en">State UNKNOWN 7</description>
          <definition>[7]</definition>
        </bitField>
      </register>
      <register access="RO" name="ICTR" offset="0xE000E004" size="4">
        <gui_name language="en">Interrupt Controller Type Register</gui_name>
        <description language="en">Provides information about the interrupt controller</description>
        <bitField conditional="false" name="INTLINESNUM">
          <gui_name language="en">INTLINESNUM</gui_name>
          <description language="en">Interrupt line set number</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="DCB" offset="0x00000000" xml:base="Registers/System/V8-M_DCB_mm.xml">
      <gui_name language="en">DCB</gui_name>
      <description language="en">Debug Registers</description>
      <register access="RW" name="DAUTHCTRL" offset="0xE000EE04" size="4">
        <gui_name language="en">Debug Authentication Control Register</gui_name>
        <description language="en">This register allows the IMPLEMENTATION DEFINED authentication interface to be overridden from software</description>
        <bitField conditional="false" enumerationId="DAUTHCTRL_INTSPNIDEN" name="INTSPNIDEN">
          <gui_name language="en">INTSPNIDEN</gui_name>
          <description language="en">Internal Secure non-invasive debug enable</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHCTRL_SPNIDENSEL" name="SPNIDENSEL">
          <gui_name language="en">SPNIDENSEL</gui_name>
          <description language="en">Secure non-invasive debug enable select</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHCTRL_INTSPIDEN" name="INTSPIDEN">
          <gui_name language="en">INTSPIDEN</gui_name>
          <description language="en">Internal Secure invasive debug enable</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHCTRL_SPIDENSEL" name="SPIDENSEL">
          <gui_name language="en">SPIDENSEL</gui_name>
          <description language="en">Secure invasive debug enable select</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" hidden="true" name="DCRDR" offset="0xE000EDF8" size="4">
        <gui_name language="en">Debug Core Register Data Register</gui_name>
        <description language="en">With the DCRSR, provides debug access to the general-purpose registers, special-purpose registers, and the FP Extension registers. If the Main Extension is implemented, it can also be used for message passing between an external debugger and a debug agent running on the PE</description>
        <bitField conditional="false" name="DBGTMP">
          <gui_name language="en">DBGTMP</gui_name>
          <description language="en">Data temporary buffer</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" hidden="true" name="DCRSR" offset="0xE000EDF4" size="4">
        <gui_name language="en">Debug Core Register Select Register</gui_name>
        <description language="en">With the DCRDR, provides debug access to the general-purpose registers, special-purpose registers, and the FP extension registers. A write to the DCRSR specifies the register to transfer, whether the transfer is a read or write, and starts the transfer</description>
        <bitField conditional="false" enumerationId="DCRSR_REGWnR" name="REGWnR">
          <gui_name language="en">REGWnR</gui_name>
          <description language="en">Register write/not-read</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DCRSR_REGSEL" name="REGSEL">
          <gui_name language="en">REGSEL</gui_name>
          <description language="en">Register selector</description>
          <definition>[6:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DEMCR" offset="0xE000EDFC" size="4">
        <gui_name language="en">Debug Exception and Monitor Control Register</gui_name>
        <description language="en">Manages vector catch behavior and DebugMonitor handling when debugging</description>
        <bitField conditional="false" enumerationId="DEMCR_TRCENA" name="TRCENA">
          <gui_name language="en">TRCENA</gui_name>
          <description language="en">Trace enable</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_SDME" name="SDME">
          <gui_name language="en">SDME</gui_name>
          <description language="en">Secure DebugMonitor enable</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="MON_REQ">
          <gui_name language="en">MON_REQ</gui_name>
          <description language="en">Monitor request</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_MON_STEP" name="MON_STEP">
          <gui_name language="en">MON_STEP</gui_name>
          <description language="en">Monitor step</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_MON_PEND" name="MON_PEND">
          <gui_name language="en">MON_PEND</gui_name>
          <description language="en">Monitor pend</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_MON_EN" name="MON_EN">
          <gui_name language="en">MON_EN</gui_name>
          <description language="en"> Monitor enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_SFERR" name="VC_SFERR">
          <gui_name language="en">VC_SFERR</gui_name>
          <description language="en">Vector Catch SecureFault</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_HARDERR" name="VC_HARDERR">
          <gui_name language="en">VC_HARDERR</gui_name>
          <description language="en">Vector Catch HardFault errors</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_INTERR" name="VC_INTERR">
          <gui_name language="en">VC_INTERR</gui_name>
          <description language="en">Vector Catch interrupt errors</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_BUSERR" name="VC_BUSERR">
          <gui_name language="en">VC_BUSERR</gui_name>
          <description language="en">Vector Catch BusFault errors</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_STATERR" name="VC_STATERR">
          <gui_name language="en">VC_STATERR</gui_name>
          <description language="en">Vector Catch state errors</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_CHKERR" name="VC_CHKERR">
          <gui_name language="en">VC_CHKERR</gui_name>
          <description language="en">Vector Catch check errors</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_NOCPERR" name="VC_NOCPERR">
          <gui_name language="en">VC_NOCPERR</gui_name>
          <description language="en">Vector Catch NOCP errors</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_MMERR" name="VC_MMERR">
          <gui_name language="en">VC_MMERR</gui_name>
          <description language="en">Vector Catch MemManage errors</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DEMCR_VC_CORERESET" name="VC_CORERESET">
          <gui_name language="en">VC_CORERESET</gui_name>
          <description language="en">Vector Catch core reset</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" hidden="true" name="DHCSR" offset="0xE000EDF0" size="4">
        <gui_name language="en">Debug Halting Control and Status Register</gui_name>
        <description language="en">Controls Halting debug</description>
        <bitField conditional="false" enumerationId="DHCSR_DBGKEY" name="DBGKEY">
          <gui_name language="en">DBGKEY</gui_name>
          <description language="en">Debug key</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_RESTART_ST" name="S_RESTART_ST">
          <gui_name language="en">S_RESTART_ST</gui_name>
          <description language="en">Restart sticky status</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_RESET_ST" name="S_RESET_ST">
          <gui_name language="en">S_RESET_ST</gui_name>
          <description language="en">Reset sticky status</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_RETIRE_ST" name="S_RETIRE_ST">
          <gui_name language="en">S_RETIRE_ST</gui_name>
          <description language="en">Retire sticky status</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_SDE" name="S_SDE">
          <gui_name language="en">S_SDE</gui_name>
          <description language="en">Secure debug enabled</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_LOCKUP" name="S_LOCKUP">
          <gui_name language="en">S_LOCKUP</gui_name>
          <description language="en">Lockup status</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_SLEEP" name="S_SLEEP">
          <gui_name language="en">S_SLEEP</gui_name>
          <description language="en">Sleeping status</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_HALT" name="S_HALT">
          <gui_name language="en">S_HALT</gui_name>
          <description language="en">Halted status</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_S_REGRDY" name="S_REGRDY">
          <gui_name language="en">S_REGRDY</gui_name>
          <description language="en">Register ready status</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_C_SNAPSTALL" name="C_SNAPSTALL">
          <gui_name language="en">C_SNAPSTALL</gui_name>
          <description language="en">Snap stall control</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_C_MASKINTS" name="C_MASKINTS">
          <gui_name language="en">C_MASKINTS</gui_name>
          <description language="en">Mask interrupts control</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_C_STEP" name="C_STEP">
          <gui_name language="en">C_STEP</gui_name>
          <description language="en">Step control</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_C_HALT" name="C_HALT">
          <gui_name language="en">C_HALT</gui_name>
          <description language="en">Halt control</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DHCSR_C_DEBUGEN" name="C_DEBUGEN">
          <gui_name language="en">C_DEBUGEN</gui_name>
          <description language="en">Debug enable control</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DSCSR" offset="0xE000EE08" size="4">
        <gui_name language="en">Debug Security Control and Status Register</gui_name>
        <description language="en">Provides control and status information for Secure debug</description>
        <bitField conditional="false" enumerationId="DSCSR_CDSKEY" name="CDSKEY">
          <gui_name language="en">CDSKEY</gui_name>
          <description language="en">CDS write-enable key</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DSCSR_CDS" name="CDS">
          <gui_name language="en">CDS</gui_name>
          <description language="en">Current domain Secure</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DSCSR_SBRSEL" name="SBRSEL">
          <gui_name language="en">SBRSEL</gui_name>
          <description language="en">Secure Banked register select</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DSCSR_SBRSELEN" name="SBRSELEN">
          <gui_name language="en">SBRSELEN</gui_name>
          <description language="en">Secure Banked register select enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="DIB" offset="0x00000000" xml:base="Registers/System/V8-M_DIB_mm.xml">
      <gui_name language="en">DIB</gui_name>
      <description language="en">Identification Registers</description>
      <register access="RO" name="DAUTHSTATUS" offset="0xE000EFB8" size="4">
        <gui_name language="en">Debug Authentication Status Register</gui_name>
        <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug</description>
        <bitField conditional="false" enumerationId="DAUTHSTATUS_SNID" name="SNID">
          <gui_name language="en">SNID</gui_name>
          <description language="en">Secure Non-invasive Debug</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHSTATUS_SID" name="SID">
          <gui_name language="en">SID</gui_name>
          <description language="en">Secure Invasive Debug</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHSTATUS_NSNID" name="NSNID">
          <gui_name language="en">NSNID</gui_name>
          <description language="en">Non-secure Non-invasive Debug</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DAUTHSTATUS_NSID" name="NSID">
          <gui_name language="en">NSID</gui_name>
          <description language="en">Non-secure Invasive Debug</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DCIDR0" offset="0xE000EFF0" size="4">
        <gui_name language="en">SCS Component Identification Register 0</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="PRMBL_0">
          <gui_name language="en">PRMBL_0</gui_name>
          <description language="en">CoreSight component identification preamble</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DCIDR1" offset="0xE000EFF4" size="4">
        <gui_name language="en">SCS Component Identification Register 1</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="CLASS">
          <gui_name language="en">CLASS</gui_name>
          <description language="en">CoreSight component class</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="PRMBL_1">
          <gui_name language="en">PRMBL_1</gui_name>
          <description language="en">CoreSight component identification preamble</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DCIDR2" offset="0xE000EFF8" size="4">
        <gui_name language="en">SCS Component Identification Register 2</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="PRMBL_2">
          <gui_name language="en">PRMBL_2</gui_name>
          <description language="en">CoreSight component identification preamble</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DCIDR3" offset="0xE000EFFC" size="4">
        <gui_name language="en">SCS Component Identification Register 3</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="PRMBL_3">
          <gui_name language="en">PRMBL_3</gui_name>
          <description language="en">CoreSight component identification preamble</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DDEVARCH" offset="0xE000EFBC" size="4">
        <gui_name language="en">SCS Device Architecture Register</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" enumerationId="DDEVARCH_ARCHITECT" name="ARCHITECT">
          <gui_name language="en">ARCHITECT</gui_name>
          <description language="en">Architect</description>
          <definition>[31:21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DDEVARCH_PRESENT" name="PRESENT">
          <gui_name language="en">PRESENT</gui_name>
          <description language="en">DEVARCH Present</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DDEVARCH_REVISION" name="REVISION">
          <gui_name language="en">REVISION</gui_name>
          <description language="en">Revision</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DDEVARCH_ARCHVER" name="ARCHVER">
          <gui_name language="en">ARCHVER</gui_name>
          <description language="en">Architecture Version</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DDEVARCH_ARCHPART" name="ARCHPART">
          <gui_name language="en">ARCHPART</gui_name>
          <description language="en">Architecture Part</description>
          <definition>[11:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DDEVTYPE" offset="0xE000EFCC" size="4">
        <gui_name language="en">SCS Device Type Register</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" enumerationId="DDEVTYPE_SUB" name="SUB">
          <gui_name language="en">SUB</gui_name>
          <description language="en">Sub-type</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DDEVTYPE_MAJOR" name="MAJOR">
          <gui_name language="en">MAJOR</gui_name>
          <description language="en">Major type</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="WO" name="DLAR" offset="0xE000EFB0" size="4">
        <gui_name language="en">SCS Software Lock Access Register</gui_name>
        <description language="en">Provides CoreSight Software Lock control for the SCS, see the _ARM(R) CoreSight(TM) Architecture Specification_ for details</description>
        <bitField conditional="false" name="KEY">
          <gui_name language="en">KEY</gui_name>
          <description language="en">Lock Access control</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DLSR" offset="0xE000EFB4" size="4">
        <gui_name language="en">SCS Software Lock Status Register</gui_name>
        <description language="en">Provides CoreSight Software Lock status information for the SCS, see the _ARM(R) CoreSight(TM) Architecture Specification_ for details</description>
        <bitField conditional="false" name="nTT">
          <gui_name language="en">nTT</gui_name>
          <description language="en">Not thirty-two bit</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DLSR_SLK" name="SLK">
          <gui_name language="en">SLK</gui_name>
          <description language="en">Software Lock status</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DLSR_SLI" name="SLI">
          <gui_name language="en">SLI</gui_name>
          <description language="en">Software Lock implemented</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR0" offset="0xE000EFE0" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 0</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="PART_0">
          <gui_name language="en">PART_0</gui_name>
          <description language="en">Part number bits [7:0]</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR1" offset="0xE000EFE4" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 1</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="DES_0">
          <gui_name language="en">DES_0</gui_name>
          <description language="en">JEP106 identification code bits [3:0]</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="PART_1">
          <gui_name language="en">PART_1</gui_name>
          <description language="en">Part number bits [11:8]</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR2" offset="0xE000EFE8" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 2</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="REVISION">
          <gui_name language="en">REVISION</gui_name>
          <description language="en">Component revision</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="JEDEC">
          <gui_name language="en">JEDEC</gui_name>
          <description language="en">JEDEC assignee value is used</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" name="DES_1">
          <gui_name language="en">DES_1</gui_name>
          <description language="en">JEP106 identification code bits [6:4]</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR3" offset="0xE000EFEC" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 3</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="REVAND">
          <gui_name language="en">REVAND</gui_name>
          <description language="en">RevAnd</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="CMOD">
          <gui_name language="en">CMOD</gui_name>
          <description language="en">Customer Modified</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR4" offset="0xE000EFD0" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 4</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en">4KB count</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="DES_2">
          <gui_name language="en">DES_2</gui_name>
          <description language="en">JEP106 continuation code</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="DPIDR5" offset="0xE000EFD4" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 5</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
      </register>
      <register access="RO" name="DPIDR6" offset="0xE000EFD8" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 6</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
      </register>
      <register access="RO" name="DPIDR7" offset="0xE000EFDC" size="4">
        <gui_name language="en">SCS Peripheral Identification Register 7</gui_name>
        <description language="en">Provides CoreSight discovery information for the SCS</description>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="SCB" offset="0x00000000" xml:base="Registers/System/V8-M_SCB_mm.xml">
      <gui_name language="en">SCB</gui_name>
      <description language="en">System Control Block</description>
      <register access="RW" name="AFSR" offset="0xE000ED3C" size="4">
        <gui_name language="en">Auxiliary Fault Status Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED fault status information</description>
      </register>
      <register access="RW" name="AIRCR_S" offset="0xE000ED0C" size="4">
        <gui_name language="en">Application Interrupt and Reset Control Register</gui_name>
        <description language="en">Sets or returns interrupt control and reset configuration</description>
        <bitField conditional="false" enumerationId="AIRCR_VECTKEY" name="VECTKEY">
          <gui_name language="en">VECTKEY</gui_name>
          <description language="en">Vector key</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_ENDIANNESS" name="ENDIANNESS">
          <gui_name language="en">ENDIANNESS</gui_name>
          <description language="en">Data endianness</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIS" name="PRIS">
          <gui_name language="en">PRIS</gui_name>
          <description language="en">Prioritize Secure exceptions</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_BFHFNMINS" name="BFHFNMINS">
          <gui_name language="en">BFHFNMINS</gui_name>
          <description language="en">BusFault, HardFault, and NMI Non-secure enable</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIGROUP" name="PRIGROUP">
          <gui_name language="en">PRIGROUP</gui_name>
          <description language="en">Priority grouping</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQS" name="SYSRESETREQS">
          <gui_name language="en">SYSRESETREQS</gui_name>
          <description language="en">System reset request Secure only</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQ" name="SYSRESETREQ">
          <gui_name language="en">SYSRESETREQ</gui_name>
          <description language="en">System reset request</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_VECTCLRACTIVE" name="VECTCLRACTIVE">
          <gui_name language="en">VECTCLRACTIVE</gui_name>
          <description language="en">Clear active state</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="AIRCR_NS" offset="0xE000ED0C" size="4">
        <gui_name language="en">Application Interrupt and Reset Control Register</gui_name>
        <description language="en">Sets or returns interrupt control and reset configuration</description>
        <bitField conditional="false" enumerationId="AIRCR_VECTKEY" name="VECTKEY">
          <gui_name language="en">VECTKEY</gui_name>
          <description language="en">Vector key</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_ENDIANNESS" name="ENDIANNESS">
          <gui_name language="en">ENDIANNESS</gui_name>
          <description language="en">Data endianness</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIS" name="PRIS">
          <gui_name language="en">PRIS</gui_name>
          <description language="en">Prioritize Secure exceptions</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_BFHFNMINS" name="BFHFNMINS">
          <gui_name language="en">BFHFNMINS</gui_name>
          <description language="en">BusFault, HardFault, and NMI Non-secure enable</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIGROUP" name="PRIGROUP">
          <gui_name language="en">PRIGROUP</gui_name>
          <description language="en">Priority grouping</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQS" name="SYSRESETREQS">
          <gui_name language="en">SYSRESETREQS</gui_name>
          <description language="en">System reset request Secure only</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQ" name="SYSRESETREQ">
          <gui_name language="en">SYSRESETREQ</gui_name>
          <description language="en">System reset request</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_VECTCLRACTIVE" name="VECTCLRACTIVE">
          <gui_name language="en">VECTCLRACTIVE</gui_name>
          <description language="en">Clear active state</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="AIRCR" offset="0xE000ED0C" size="4">
        <gui_name language="en">Application Interrupt and Reset Control Register</gui_name>
        <description language="en">Sets or returns interrupt control and reset configuration</description>
        <bitField conditional="false" enumerationId="AIRCR_VECTKEY" name="VECTKEY">
          <gui_name language="en">VECTKEY</gui_name>
          <description language="en">Vector key</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_ENDIANNESS" name="ENDIANNESS">
          <gui_name language="en">ENDIANNESS</gui_name>
          <description language="en">Data endianness</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIS" name="PRIS">
          <gui_name language="en">PRIS</gui_name>
          <description language="en">Prioritize Secure exceptions</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_BFHFNMINS" name="BFHFNMINS">
          <gui_name language="en">BFHFNMINS</gui_name>
          <description language="en">BusFault, HardFault, and NMI Non-secure enable</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_PRIGROUP" name="PRIGROUP">
          <gui_name language="en">PRIGROUP</gui_name>
          <description language="en">Priority grouping</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQS" name="SYSRESETREQS">
          <gui_name language="en">SYSRESETREQS</gui_name>
          <description language="en">System reset request Secure only</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_SYSRESETREQ" name="SYSRESETREQ">
          <gui_name language="en">SYSRESETREQ</gui_name>
          <description language="en">System reset request</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="AIRCR_VECTCLRACTIVE" name="VECTCLRACTIVE">
          <gui_name language="en">VECTCLRACTIVE</gui_name>
          <description language="en">Clear active state</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="BFAR" offset="0xE000ED38" size="4">
        <gui_name language="en">BusFault Address Register</gui_name>
        <description language="en">Shows the address associated with a precise data access BusFault</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Data address for a precise BusFault</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="BFSR" offset="0xE000ED29" size="1">
        <gui_name language="en">BusFault Status Register</gui_name>
        <description language="en">Shows the status of bus errors resulting from instruction fetches and data accesses</description>
        <bitField conditional="false" enumerationId="BFSR_BFARVALID" name="BFARVALID">
          <gui_name language="en">BFARVALID</gui_name>
          <description language="en">BFAR valid</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_LSPERR" name="LSPERR">
          <gui_name language="en">LSPERR</gui_name>
          <description language="en">Lazy state preservation error</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_STKERR" name="STKERR">
          <gui_name language="en">STKERR</gui_name>
          <description language="en">Stack error</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_UNSTKERR" name="UNSTKERR">
          <gui_name language="en">UNSTKERR</gui_name>
          <description language="en">Unstack error</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_IMPRECISERR" name="IMPRECISERR">
          <gui_name language="en">IMPRECISERR</gui_name>
          <description language="en">Imprecise error</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_PRECISERR" name="PRECISERR">
          <gui_name language="en">PRECISERR</gui_name>
          <description language="en">Precise error</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="BFSR_IBUSERR" name="IBUSERR">
          <gui_name language="en">IBUSERR</gui_name>
          <description language="en">Instruction bus error</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CCR_S" offset="0xE000ED14" size="4">
        <gui_name language="en">Configuration and Control Register</gui_name>
        <description language="en">Sets or returns configuration and control data</description>
        <bitField conditional="false" enumerationId="CCR_BP" name="BP">
          <gui_name language="en">BP</gui_name>
          <description language="en">Branch prediction enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_IC" name="IC">
          <gui_name language="en">IC</gui_name>
          <description language="en">Instruction cache enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DC" name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">Data cache enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_STKOFHFNMIGN" name="STKOFHFNMIGN">
          <gui_name language="en">STKOFHFNMIGN</gui_name>
          <description language="en">Stack overflow in HardFault and NMI ignore</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_BFHFNMIGN" name="BFHFNMIGN">
          <gui_name language="en">BFHFNMIGN</gui_name>
          <description language="en">BusFault in HardFault or NMI ignore</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DIV_0_TRP" name="DIV_0_TRP">
          <gui_name language="en">DIV_0_TRP</gui_name>
          <description language="en">Divide by zero trap</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_UNALIGN_TRP" name="UNALIGN_TRP">
          <gui_name language="en">UNALIGN_TRP</gui_name>
          <description language="en">Unaligned trap</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_USERSETMPEND" name="USERSETMPEND">
          <gui_name language="en">USERSETMPEND</gui_name>
          <description language="en">User set main pending</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="CCR_NS" offset="0xE000ED14" size="4">
        <gui_name language="en">Configuration and Control Register</gui_name>
        <description language="en">Sets or returns configuration and control data</description>
        <bitField conditional="false" enumerationId="CCR_BP" name="BP">
          <gui_name language="en">BP</gui_name>
          <description language="en">Branch prediction enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_IC" name="IC">
          <gui_name language="en">IC</gui_name>
          <description language="en">Instruction cache enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DC" name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">Data cache enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_STKOFHFNMIGN" name="STKOFHFNMIGN">
          <gui_name language="en">STKOFHFNMIGN</gui_name>
          <description language="en">Stack overflow in HardFault and NMI ignore</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_BFHFNMIGN" name="BFHFNMIGN">
          <gui_name language="en">BFHFNMIGN</gui_name>
          <description language="en">BusFault in HardFault or NMI ignore</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DIV_0_TRP" name="DIV_0_TRP">
          <gui_name language="en">DIV_0_TRP</gui_name>
          <description language="en">Divide by zero trap</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_UNALIGN_TRP" name="UNALIGN_TRP">
          <gui_name language="en">UNALIGN_TRP</gui_name>
          <description language="en">Unaligned trap</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_USERSETMPEND" name="USERSETMPEND">
          <gui_name language="en">USERSETMPEND</gui_name>
          <description language="en">User set main pending</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="CCR" offset="0xE000ED14" size="4">
        <gui_name language="en">Configuration and Control Register</gui_name>
        <description language="en">Sets or returns configuration and control data</description>
        <bitField conditional="false" enumerationId="CCR_BP" name="BP">
          <gui_name language="en">BP</gui_name>
          <description language="en">Branch prediction enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_IC" name="IC">
          <gui_name language="en">IC</gui_name>
          <description language="en">Instruction cache enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DC" name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">Data cache enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_STKOFHFNMIGN" name="STKOFHFNMIGN">
          <gui_name language="en">STKOFHFNMIGN</gui_name>
          <description language="en">Stack overflow in HardFault and NMI ignore</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_BFHFNMIGN" name="BFHFNMIGN">
          <gui_name language="en">BFHFNMIGN</gui_name>
          <description language="en">BusFault in HardFault or NMI ignore</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_DIV_0_TRP" name="DIV_0_TRP">
          <gui_name language="en">DIV_0_TRP</gui_name>
          <description language="en">Divide by zero trap</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_UNALIGN_TRP" name="UNALIGN_TRP">
          <gui_name language="en">UNALIGN_TRP</gui_name>
          <description language="en">Unaligned trap</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCR_USERSETMPEND" name="USERSETMPEND">
          <gui_name language="en">USERSETMPEND</gui_name>
          <description language="en">User set main pending</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RO" name="CCSIDR_S" offset="0xE000ED80" size="4">
        <gui_name language="en">Current Cache Size ID register</gui_name>
        <description language="en">The CCSIDR provides information about the architecture of the currently selected cache</description>
        <bitField conditional="false" enumerationId="CCSIDR_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Write-through</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WB" name="WB">
          <gui_name language="en">WB</gui_name>
          <description language="en">Writeback</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_RA" name="RA">
          <gui_name language="en">RA</gui_name>
          <description language="en">Read-allocate</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WA" name="WA">
          <gui_name language="en">WA</gui_name>
          <description language="en">Write-allocate</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">Number of sets</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField conditional="false" name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">Line size</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CCSIDR_NS" offset="0xE000ED80" size="4">
        <gui_name language="en">Current Cache Size ID register</gui_name>
        <description language="en">The CCSIDR provides information about the architecture of the currently selected cache</description>
        <bitField conditional="false" enumerationId="CCSIDR_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Write-through</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WB" name="WB">
          <gui_name language="en">WB</gui_name>
          <description language="en">Writeback</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_RA" name="RA">
          <gui_name language="en">RA</gui_name>
          <description language="en">Read-allocate</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WA" name="WA">
          <gui_name language="en">WA</gui_name>
          <description language="en">Write-allocate</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">Number of sets</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField conditional="false" name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">Line size</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CCSIDR" offset="0xE000ED80" size="4">
        <gui_name language="en">Current Cache Size ID register</gui_name>
        <description language="en">The CCSIDR provides information about the architecture of the currently selected cache</description>
        <bitField conditional="false" enumerationId="CCSIDR_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Write-through</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WB" name="WB">
          <gui_name language="en">WB</gui_name>
          <description language="en">Writeback</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_RA" name="RA">
          <gui_name language="en">RA</gui_name>
          <description language="en">Read-allocate</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WA" name="WA">
          <gui_name language="en">WA</gui_name>
          <description language="en">Write-allocate</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">Number of sets</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField conditional="false" name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">Line size</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CFSR_S" offset="0xE000ED28" size="4">
        <gui_name language="en">Configurable Fault Status Register</gui_name>
        <description language="en">Contains the three Configurable Fault Status Registers</description>
        <bitField conditional="false" name="UFSR">
          <gui_name language="en">UFSR</gui_name>
          <description language="en">UsageFault Status Register</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" name="BFSR">
          <gui_name language="en">BFSR</gui_name>
          <description language="en">BusFault Status Register</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="MMFSR">
          <gui_name language="en">MMFSR</gui_name>
          <description language="en">MemManage Fault Status Register</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CFSR_NS" offset="0xE000ED28" size="4">
        <gui_name language="en">Configurable Fault Status Register</gui_name>
        <description language="en">Contains the three Configurable Fault Status Registers</description>
        <bitField conditional="false" name="UFSR">
          <gui_name language="en">UFSR</gui_name>
          <description language="en">UsageFault Status Register</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" name="BFSR">
          <gui_name language="en">BFSR</gui_name>
          <description language="en">BusFault Status Register</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="MMFSR">
          <gui_name language="en">MMFSR</gui_name>
          <description language="en">MemManage Fault Status Register</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CFSR" offset="0xE000ED28" size="4">
        <gui_name language="en">Configurable Fault Status Register</gui_name>
        <description language="en">Contains the three Configurable Fault Status Registers</description>
        <bitField conditional="false" name="UFSR">
          <gui_name language="en">UFSR</gui_name>
          <description language="en">UsageFault Status Register</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField conditional="false" name="BFSR">
          <gui_name language="en">BFSR</gui_name>
          <description language="en">BusFault Status Register</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="MMFSR">
          <gui_name language="en">MMFSR</gui_name>
          <description language="en">MemManage Fault Status Register</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CLIDR" offset="0xE000ED78" size="4">
        <gui_name language="en">Cache Level ID Register</gui_name>
        <description language="en">Identifies the type of caches implemented and the level of coherency and unification</description>
        <bitField conditional="false" enumerationId="CLIDR_ICB" name="ICB">
          <gui_name language="en">ICB</gui_name>
          <description language="en">Inner cache boundary</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" name="LoUU">
          <gui_name language="en">LoUU</gui_name>
          <description language="en">Level of Unification Uniprocessor</description>
          <definition>[29:27]</definition>
        </bitField>
        <bitField conditional="false" name="LoC">
          <gui_name language="en">LoC</gui_name>
          <description language="en">Level of Coherence</description>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="LoUIS">
          <gui_name language="en">LoUIS</gui_name>
          <description language="en">Level of Unification Inner Shareable</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype0" name="Ctype0">
          <gui_name language="en">Ctype0</gui_name>
          <description language="en">Cache type field 0</description>
          <definition>[2:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype1" name="Ctype1">
          <gui_name language="en">Ctype1</gui_name>
          <description language="en">Cache type field 1</description>
          <definition>[5:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype2" name="Ctype2">
          <gui_name language="en">Ctype2</gui_name>
          <description language="en">Cache type field 2</description>
          <definition>[8:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype3" name="Ctype3">
          <gui_name language="en">Ctype3</gui_name>
          <description language="en">Cache type field 3</description>
          <definition>[11:9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype4" name="Ctype4">
          <gui_name language="en">Ctype4</gui_name>
          <description language="en">Cache type field 4</description>
          <definition>[14:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype5" name="Ctype5">
          <gui_name language="en">Ctype5</gui_name>
          <description language="en">Cache type field 5</description>
          <definition>[17:15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype6" name="Ctype6">
          <gui_name language="en">Ctype6</gui_name>
          <description language="en">Cache type field 6</description>
          <definition>[20:18]</definition>
        </bitField>
      </register>
      <register access="RW" name="CPACR_S" offset="0xE000ED88" size="4">
        <gui_name language="en">Coprocessor Access Control Register</gui_name>
        <description language="en">Specifies the access privileges for coprocessors and the FP Extension</description>
        <bitField conditional="false" name="CP11">
          <gui_name language="en">CP11</gui_name>
          <description language="en">CP11 Privilege</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP10" name="CP10">
          <gui_name language="en">CP10</gui_name>
          <description language="en">CP10 Privilege</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP0" name="CP0">
          <gui_name language="en">CP0</gui_name>
          <description language="en">Coprocessor 0 privilege</description>
          <definition>[1:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP1" name="CP1">
          <gui_name language="en">CP1</gui_name>
          <description language="en">Coprocessor 1 privilege</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP2" name="CP2">
          <gui_name language="en">CP2</gui_name>
          <description language="en">Coprocessor 2 privilege</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP3" name="CP3">
          <gui_name language="en">CP3</gui_name>
          <description language="en">Coprocessor 3 privilege</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP4" name="CP4">
          <gui_name language="en">CP4</gui_name>
          <description language="en">Coprocessor 4 privilege</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP5" name="CP5">
          <gui_name language="en">CP5</gui_name>
          <description language="en">Coprocessor 5 privilege</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP6" name="CP6">
          <gui_name language="en">CP6</gui_name>
          <description language="en">Coprocessor 6 privilege</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP7" name="CP7">
          <gui_name language="en">CP7</gui_name>
          <description language="en">Coprocessor 7 privilege</description>
          <definition>[15:14]</definition>
        </bitField>
      </register>
      <register access="RW" name="CPACR_NS" offset="0xE000ED88" size="4">
        <gui_name language="en">Coprocessor Access Control Register</gui_name>
        <description language="en">Specifies the access privileges for coprocessors and the FP Extension</description>
        <bitField conditional="false" name="CP11">
          <gui_name language="en">CP11</gui_name>
          <description language="en">CP11 Privilege</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP10" name="CP10">
          <gui_name language="en">CP10</gui_name>
          <description language="en">CP10 Privilege</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP0" name="CP0">
          <gui_name language="en">CP0</gui_name>
          <description language="en">Coprocessor 0 privilege</description>
          <definition>[1:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP1" name="CP1">
          <gui_name language="en">CP1</gui_name>
          <description language="en">Coprocessor 1 privilege</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP2" name="CP2">
          <gui_name language="en">CP2</gui_name>
          <description language="en">Coprocessor 2 privilege</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP3" name="CP3">
          <gui_name language="en">CP3</gui_name>
          <description language="en">Coprocessor 3 privilege</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP4" name="CP4">
          <gui_name language="en">CP4</gui_name>
          <description language="en">Coprocessor 4 privilege</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP5" name="CP5">
          <gui_name language="en">CP5</gui_name>
          <description language="en">Coprocessor 5 privilege</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP6" name="CP6">
          <gui_name language="en">CP6</gui_name>
          <description language="en">Coprocessor 6 privilege</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP7" name="CP7">
          <gui_name language="en">CP7</gui_name>
          <description language="en">Coprocessor 7 privilege</description>
          <definition>[15:14]</definition>
        </bitField>
      </register>
      <register access="RW" name="CPACR" offset="0xE000ED88" size="4">
        <gui_name language="en">Coprocessor Access Control Register</gui_name>
        <description language="en">Specifies the access privileges for coprocessors and the FP Extension</description>
        <bitField conditional="false" name="CP11">
          <gui_name language="en">CP11</gui_name>
          <description language="en">CP11 Privilege</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP10" name="CP10">
          <gui_name language="en">CP10</gui_name>
          <description language="en">CP10 Privilege</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP0" name="CP0">
          <gui_name language="en">CP0</gui_name>
          <description language="en">Coprocessor 0 privilege</description>
          <definition>[1:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP1" name="CP1">
          <gui_name language="en">CP1</gui_name>
          <description language="en">Coprocessor 1 privilege</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP2" name="CP2">
          <gui_name language="en">CP2</gui_name>
          <description language="en">Coprocessor 2 privilege</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP3" name="CP3">
          <gui_name language="en">CP3</gui_name>
          <description language="en">Coprocessor 3 privilege</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP4" name="CP4">
          <gui_name language="en">CP4</gui_name>
          <description language="en">Coprocessor 4 privilege</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP5" name="CP5">
          <gui_name language="en">CP5</gui_name>
          <description language="en">Coprocessor 5 privilege</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP6" name="CP6">
          <gui_name language="en">CP6</gui_name>
          <description language="en">Coprocessor 6 privilege</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_CP7" name="CP7">
          <gui_name language="en">CP7</gui_name>
          <description language="en">Coprocessor 7 privilege</description>
          <definition>[15:14]</definition>
        </bitField>
      </register>
      <register access="RO" name="CPUID" offset="0xE000ED00" size="4">
        <gui_name language="en">CPUID Base Register</gui_name>
        <description language="en">Provides identification information for the PE, including an implementer code for the device and a device ID number</description>
        <bitField conditional="false" enumerationId="CPUID_Implementer" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer code</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">Variant number</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPUID_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">Architecture version</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNo">
          <gui_name language="en">PartNo</gui_name>
          <description language="en">Part number</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">Revision number</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CSSELR_S" offset="0xE000ED84" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache)</description>
        <bitField conditional="false" enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not data</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CSSELR_NS" offset="0xE000ED84" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache)</description>
        <bitField conditional="false" enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not data</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="CSSELR" offset="0xE000ED84" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache)</description>
        <bitField conditional="false" enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not data</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CTR_S" offset="0xE000ED7C" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches. CTR is RES0 if CLIDR is zero.</description>
        <bitField conditional="false" enumerationId="CTR_CWG" name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache Writeback Granule</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CTR_ERG" name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives Reservation Granule</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Data cache minimum line length</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Instruction cache minimum line length</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CTR_NS" offset="0xE000ED7C" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches. CTR is RES0 if CLIDR is zero.</description>
        <bitField conditional="false" enumerationId="CTR_CWG" name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache Writeback Granule</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CTR_ERG" name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives Reservation Granule</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Data cache minimum line length</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Instruction cache minimum line length</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="CTR" offset="0xE000ED7C" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches. CTR is RES0 if CLIDR is zero.</description>
        <bitField conditional="false" enumerationId="CTR_CWG" name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache Writeback Granule</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CTR_ERG" name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives Reservation Granule</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Data cache minimum line length</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Instruction cache minimum line length</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="DFSR" offset="0xE000ED30" size="4">
        <gui_name language="en">Debug Fault Status Register</gui_name>
        <description language="en">Shows which debug event occurred</description>
        <bitField conditional="false" enumerationId="DFSR_EXTERNAL" name="EXTERNAL">
          <gui_name language="en">EXTERNAL</gui_name>
          <description language="en">External event</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_VCATCH" name="VCATCH">
          <gui_name language="en">VCATCH</gui_name>
          <description language="en">Vector Catch event</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_DWTTRAP" name="DWTTRAP">
          <gui_name language="en">DWTTRAP</gui_name>
          <description language="en">Watchpoint event</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_BKPT" name="BKPT">
          <gui_name language="en">BKPT</gui_name>
          <description language="en">Breakpoint event</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_HALTED" name="HALTED">
          <gui_name language="en">HALTED</gui_name>
          <description language="en">Halt or step event</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="HFSR" offset="0xE000ED2C" size="4">
        <gui_name language="en">HardFault Status Register</gui_name>
        <description language="en">Shows the cause of any HardFaults</description>
        <bitField conditional="false" enumerationId="HFSR_DEBUGEVT" name="DEBUGEVT">
          <gui_name language="en">DEBUGEVT</gui_name>
          <description language="en">Debug event</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HFSR_FORCED" name="FORCED">
          <gui_name language="en">FORCED</gui_name>
          <description language="en">Forced</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HFSR_VECTTBL" name="VECTTBL">
          <gui_name language="en">VECTTBL</gui_name>
          <description language="en">Vector table</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="ICSR_S" offset="0xE000ED04" size="4">
        <gui_name language="en">Interrupt Control and State Register</gui_name>
        <description language="en">Controls and provides status information for NMI, PendSV, SysTick and interrupts</description>
        <bitField conditional="false" enumerationId="ICSR_PENDNMISET" name="PENDNMISET">
          <gui_name language="en">PENDNMISET</gui_name>
          <description language="en">Pend NMI set</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDNMICLR" name="PENDNMICLR">
          <gui_name language="en">PENDNMICLR</gui_name>
          <description language="en">Pend NMI clear</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVSET" name="PENDSVSET">
          <gui_name language="en">PENDSVSET</gui_name>
          <description language="en">Pend PendSV set</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVCLR" name="PENDSVCLR">
          <gui_name language="en">PENDSVCLR</gui_name>
          <description language="en">Pend PendSV clear</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTSET" name="PENDSTSET">
          <gui_name language="en">PENDSTSET</gui_name>
          <description language="en">Pend SysTick set</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTCLR" name="PENDSTCLR">
          <gui_name language="en">PENDSTCLR</gui_name>
          <description language="en"> Pend SysTick clear</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_STTNS" name="STTNS">
          <gui_name language="en">STTNS</gui_name>
          <description language="en">SysTick Targets Non-secure</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPREEMPT" name="ISRPREEMPT">
          <gui_name language="en">ISRPREEMPT</gui_name>
          <description language="en">Interrupt preempt</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPENDING" name="ISRPENDING">
          <gui_name language="en">ISRPENDING</gui_name>
          <description language="en">Interrupt pending</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTPENDING" name="VECTPENDING">
          <gui_name language="en">VECTPENDING</gui_name>
          <description language="en">Vector pending</description>
          <definition>[20:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_RETTOBASE" name="RETTOBASE">
          <gui_name language="en">RETTOBASE</gui_name>
          <description language="en">Return to base</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTACTIVE" name="VECTACTIVE">
          <gui_name language="en">VECTACTIVE</gui_name>
          <description language="en">Vector active</description>
          <definition>[8:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="ICSR_NS" offset="0xE000ED04" size="4">
        <gui_name language="en">Interrupt Control and State Register</gui_name>
        <description language="en">Controls and provides status information for NMI, PendSV, SysTick and interrupts</description>
        <bitField conditional="false" enumerationId="ICSR_PENDNMISET" name="PENDNMISET">
          <gui_name language="en">PENDNMISET</gui_name>
          <description language="en">Pend NMI set</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDNMICLR" name="PENDNMICLR">
          <gui_name language="en">PENDNMICLR</gui_name>
          <description language="en">Pend NMI clear</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVSET" name="PENDSVSET">
          <gui_name language="en">PENDSVSET</gui_name>
          <description language="en">Pend PendSV set</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVCLR" name="PENDSVCLR">
          <gui_name language="en">PENDSVCLR</gui_name>
          <description language="en">Pend PendSV clear</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTSET" name="PENDSTSET">
          <gui_name language="en">PENDSTSET</gui_name>
          <description language="en">Pend SysTick set</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTCLR" name="PENDSTCLR">
          <gui_name language="en">PENDSTCLR</gui_name>
          <description language="en"> Pend SysTick clear</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_STTNS" name="STTNS">
          <gui_name language="en">STTNS</gui_name>
          <description language="en">SysTick Targets Non-secure</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPREEMPT" name="ISRPREEMPT">
          <gui_name language="en">ISRPREEMPT</gui_name>
          <description language="en">Interrupt preempt</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPENDING" name="ISRPENDING">
          <gui_name language="en">ISRPENDING</gui_name>
          <description language="en">Interrupt pending</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTPENDING" name="VECTPENDING">
          <gui_name language="en">VECTPENDING</gui_name>
          <description language="en">Vector pending</description>
          <definition>[20:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_RETTOBASE" name="RETTOBASE">
          <gui_name language="en">RETTOBASE</gui_name>
          <description language="en">Return to base</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTACTIVE" name="VECTACTIVE">
          <gui_name language="en">VECTACTIVE</gui_name>
          <description language="en">Vector active</description>
          <definition>[8:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="ICSR" offset="0xE000ED04" size="4">
        <gui_name language="en">Interrupt Control and State Register</gui_name>
        <description language="en">Controls and provides status information for NMI, PendSV, SysTick and interrupts</description>
        <bitField conditional="false" enumerationId="ICSR_PENDNMISET" name="PENDNMISET">
          <gui_name language="en">PENDNMISET</gui_name>
          <description language="en">Pend NMI set</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDNMICLR" name="PENDNMICLR">
          <gui_name language="en">PENDNMICLR</gui_name>
          <description language="en">Pend NMI clear</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVSET" name="PENDSVSET">
          <gui_name language="en">PENDSVSET</gui_name>
          <description language="en">Pend PendSV set</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSVCLR" name="PENDSVCLR">
          <gui_name language="en">PENDSVCLR</gui_name>
          <description language="en">Pend PendSV clear</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTSET" name="PENDSTSET">
          <gui_name language="en">PENDSTSET</gui_name>
          <description language="en">Pend SysTick set</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_PENDSTCLR" name="PENDSTCLR">
          <gui_name language="en">PENDSTCLR</gui_name>
          <description language="en"> Pend SysTick clear</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_STTNS" name="STTNS">
          <gui_name language="en">STTNS</gui_name>
          <description language="en">SysTick Targets Non-secure</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPREEMPT" name="ISRPREEMPT">
          <gui_name language="en">ISRPREEMPT</gui_name>
          <description language="en">Interrupt preempt</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_ISRPENDING" name="ISRPENDING">
          <gui_name language="en">ISRPENDING</gui_name>
          <description language="en">Interrupt pending</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTPENDING" name="VECTPENDING">
          <gui_name language="en">VECTPENDING</gui_name>
          <description language="en">Vector pending</description>
          <definition>[20:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_RETTOBASE" name="RETTOBASE">
          <gui_name language="en">RETTOBASE</gui_name>
          <description language="en">Return to base</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICSR_VECTACTIVE" name="VECTACTIVE">
          <gui_name language="en">VECTACTIVE</gui_name>
          <description language="en">Vector active</description>
          <definition>[8:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_AFR0" offset="0xE000ED4C" size="4">
        <gui_name language="en">Auxiliary Feature Register 0</gui_name>
        <description language="en">Provides information about the IMPLEMENTATION DEFINED features of the PE</description>
      </register>
      <register access="RO" name="ID_DFR0" offset="0xE000ED48" size="4">
        <gui_name language="en">Debug Feature Register 0</gui_name>
        <description language="en">Provides top level information about the debug system</description>
        <bitField conditional="false" enumerationId="ID_DFR0_MProfDbg" name="MProfDbg">
          <gui_name language="en">MProfDbg</gui_name>
          <description language="en">M-profile debug</description>
          <definition>[23:20]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR0" offset="0xE000ED60" size="4">
        <gui_name language="en">Instruction Set Attribute Register 0</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
        <bitField conditional="false" enumerationId="ID_ISAR0_Divide" name="Divide">
          <gui_name language="en">Divide</gui_name>
          <description language="en">Divide</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_Debug" name="Debug">
          <gui_name language="en">Debug</gui_name>
          <description language="en">Debug</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_Coproc" name="Coproc">
          <gui_name language="en">Coproc</gui_name>
          <description language="en">Coprocessor</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_CmpBranch" name="CmpBranch">
          <gui_name language="en">CmpBranch</gui_name>
          <description language="en">Compare and branch</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_BitField" name="BitField">
          <gui_name language="en">BitField</gui_name>
          <description language="en">Bit field</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_BitCount" name="BitCount">
          <gui_name language="en">BitCount</gui_name>
          <description language="en">Bit count</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR1" offset="0xE000ED64" size="4">
        <gui_name language="en">Instruction Set Attribute Register 1</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
        <bitField conditional="false" enumerationId="ID_ISAR1_Interwork" name="Interwork">
          <gui_name language="en">Interwork</gui_name>
          <description language="en">Interworking</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Immediate" name="Immediate">
          <gui_name language="en">Immediate</gui_name>
          <description language="en">Immediate</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_IfThen" name="IfThen">
          <gui_name language="en">IfThen</gui_name>
          <description language="en">If-Then</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Extend" name="Extend">
          <gui_name language="en">Extend</gui_name>
          <description language="en">Extend</description>
          <definition>[15:12]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR2" offset="0xE000ED68" size="4">
        <gui_name language="en">Instruction Set Attribute Register 2</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
        <bitField conditional="false" enumerationId="ID_ISAR2_Reversal" name="Reversal">
          <gui_name language="en">Reversal</gui_name>
          <description language="en">Reversal</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultU" name="MultU">
          <gui_name language="en">MultU</gui_name>
          <description language="en">Multiply unsigned</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultS" name="MultS">
          <gui_name language="en">MultS</gui_name>
          <description language="en">Multiply signed</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_Mult" name="Mult">
          <gui_name language="en">Mult</gui_name>
          <description language="en">Multiplies</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultiAccessInt" name="MultiAccessInt">
          <gui_name language="en">MultiAccessInt</gui_name>
          <description language="en">Multi-access instructions</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MemHint" name="MemHint">
          <gui_name language="en">MemHint</gui_name>
          <description language="en">Memory hints</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_LoadStore" name="LoadStore">
          <gui_name language="en">LoadStore</gui_name>
          <description language="en">Load/store</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR3" offset="0xE000ED6C" size="4">
        <gui_name language="en">Instruction Set Attribute Register 3</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
        <bitField conditional="false" enumerationId="ID_ISAR3_TrueNOP" name="TrueNOP">
          <gui_name language="en">TrueNOP</gui_name>
          <description language="en">True no-operation</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_T32Copy" name="T32Copy">
          <gui_name language="en">T32Copy</gui_name>
          <description language="en">T32 copy</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_TabBranch" name="TabBranch">
          <gui_name language="en">TabBranch</gui_name>
          <description language="en">Table branch</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SynchPrim" name="SynchPrim">
          <gui_name language="en">SynchPrim</gui_name>
          <description language="en">Synchronization primitives</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SVC" name="SVC">
          <gui_name language="en">SVC</gui_name>
          <description language="en">Supervisor call</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SIMD" name="SIMD">
          <gui_name language="en">SIMD</gui_name>
          <description language="en">Single-instruction, multiple-data</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_Saturate" name="Saturate">
          <gui_name language="en">Saturate</gui_name>
          <description language="en">Saturate</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR4" offset="0xE000ED70" size="4">
        <gui_name language="en">Instruction Set Attribute Register 4</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
        <bitField conditional="false" enumerationId="ID_ISAR4_PSR_M" name="PSR_M">
          <gui_name language="en">PSR_M</gui_name>
          <description language="en"> Program status registers M</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_SyncPrim_frac" name="SyncPrim_frac">
          <gui_name language="en">SyncPrim_frac</gui_name>
          <description language="en">Synchronization primitives fractional</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Barrier" name="Barrier">
          <gui_name language="en">Barrier</gui_name>
          <description language="en">Barrier</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Writeback" name="Writeback">
          <gui_name language="en">Writeback</gui_name>
          <description language="en">Writeback</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_WithShifts" name="WithShifts">
          <gui_name language="en">WithShifts</gui_name>
          <description language="en">With shifts</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Unpriv" name="Unpriv">
          <gui_name language="en">Unpriv</gui_name>
          <description language="en">Unprivileged</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_ISAR5" offset="0xE000ED74" size="4">
        <gui_name language="en">Instruction Set Attribute Register 5</gui_name>
        <description language="en">Provides information about the instruction set implemented by the PE</description>
      </register>
      <register access="RO" name="ID_MMFR0" offset="0xE000ED50" size="4">
        <gui_name language="en">Memory Model Feature Register 0</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support</description>
        <bitField conditional="false" enumerationId="ID_MMFR0_AuxReg" name="AuxReg">
          <gui_name language="en">AuxReg</gui_name>
          <description language="en">Auxiliary Registers</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_TCM" name="TCM">
          <gui_name language="en">TCM</gui_name>
          <description language="en">Tightly coupled memories</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_ShareLvl" name="ShareLvl">
          <gui_name language="en">ShareLvl</gui_name>
          <description language="en">Shareability Levels</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_OuterShr" name="OuterShr">
          <gui_name language="en">OuterShr</gui_name>
          <description language="en">Outermost Shareability</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_PMSA" name="PMSA">
          <gui_name language="en">PMSA</gui_name>
          <description language="en">Protected memory system architecture</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_MMFR1" offset="0xE000ED54" size="4">
        <gui_name language="en">Memory Model Feature Register 1</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support</description>
      </register>
      <register access="RO" name="ID_MMFR2" offset="0xE000ED58" size="4">
        <gui_name language="en">Memory Model Feature Register 2</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support</description>
        <bitField conditional="false" enumerationId="ID_MMFR2_WFIStall" name="WFIStall">
          <gui_name language="en">WFIStall</gui_name>
          <description language="en">WFI stall</description>
          <definition>[27:24]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_MMFR3" offset="0xE000ED5C" size="4">
        <gui_name language="en">Memory Model Feature Register 3</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support</description>
        <bitField conditional="false" enumerationId="ID_MMFR3_BPMaint" name="BPMaint">
          <gui_name language="en">BPMaint</gui_name>
          <description language="en">Branch predictor maintenance</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CMaintSW" name="CMaintSW">
          <gui_name language="en">CMaintSW</gui_name>
          <description language="en">Cache maintenance set/way</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CMaintVA" name="CMaintVA">
          <gui_name language="en">CMaintVA</gui_name>
          <description language="en">Cache maintenance by address</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_PFR0" offset="0xE000ED40" size="4">
        <gui_name language="en">Processor Feature Register 0</gui_name>
        <description language="en">Gives top-level information about the instruction set supported by the PE</description>
        <bitField conditional="false" enumerationId="ID_PFR0_State1" name="State1">
          <gui_name language="en">State1</gui_name>
          <description language="en">State one</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR0_State0" name="State0">
          <gui_name language="en">State0</gui_name>
          <description language="en">State two</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="ID_PFR1" offset="0xE000ED44" size="4">
        <gui_name language="en">Processor Feature Register 1</gui_name>
        <description language="en">Gives information about the programmers' model and Extensions support</description>
        <bitField conditional="false" enumerationId="ID_PFR1_MProgMod" name="MProgMod">
          <gui_name language="en">MProgMod</gui_name>
          <description language="en">M programmers' model</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_Security" name="Security">
          <gui_name language="en">Security</gui_name>
          <description language="en">Security</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFAR_S" offset="0xE000ED34" size="4">
        <gui_name language="en">MemManage Fault Address Register</gui_name>
        <description language="en">Shows the address of the memory location that caused an MPU fault</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Data address for an MemManage fault</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFAR_NS" offset="0xE000ED34" size="4">
        <gui_name language="en">MemManage Fault Address Register</gui_name>
        <description language="en">Shows the address of the memory location that caused an MPU fault</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Data address for an MemManage fault</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFAR" offset="0xE000ED34" size="4">
        <gui_name language="en">MemManage Fault Address Register</gui_name>
        <description language="en">Shows the address of the memory location that caused an MPU fault</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en">Data address for an MemManage fault</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFSR_S" offset="0xE000ED28" size="1">
        <gui_name language="en">MemManage Fault Status Register</gui_name>
        <description language="en">Shows the status of MPU faults</description>
        <bitField conditional="false" enumerationId="MMFSR_MMARVALID" name="MMARVALID">
          <gui_name language="en">MMARVALID</gui_name>
          <description language="en">MMFAR valid flag</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MLSPERR" name="MLSPERR">
          <gui_name language="en">MLSPERR</gui_name>
          <description language="en">MemManage lazy state preservation error flag</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MSTKERR" name="MSTKERR">
          <gui_name language="en">MSTKERR</gui_name>
          <description language="en">MemManage stacking error flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MUNSTKERR" name="MUNSTKERR">
          <gui_name language="en">MUNSTKERR</gui_name>
          <description language="en">MemManage unstacking error flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_DACCVIOL" name="DACCVIOL">
          <gui_name language="en">DACCVIOL</gui_name>
          <description language="en">Data access violation flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_IACCVIOL" name="IACCVIOL">
          <gui_name language="en">IACCVIOL</gui_name>
          <description language="en">Instruction access violation</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFSR_NS" offset="0xE000ED28" size="1">
        <gui_name language="en">MemManage Fault Status Register</gui_name>
        <description language="en">Shows the status of MPU faults</description>
        <bitField conditional="false" enumerationId="MMFSR_MMARVALID" name="MMARVALID">
          <gui_name language="en">MMARVALID</gui_name>
          <description language="en">MMFAR valid flag</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MLSPERR" name="MLSPERR">
          <gui_name language="en">MLSPERR</gui_name>
          <description language="en">MemManage lazy state preservation error flag</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MSTKERR" name="MSTKERR">
          <gui_name language="en">MSTKERR</gui_name>
          <description language="en">MemManage stacking error flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MUNSTKERR" name="MUNSTKERR">
          <gui_name language="en">MUNSTKERR</gui_name>
          <description language="en">MemManage unstacking error flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_DACCVIOL" name="DACCVIOL">
          <gui_name language="en">DACCVIOL</gui_name>
          <description language="en">Data access violation flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_IACCVIOL" name="IACCVIOL">
          <gui_name language="en">IACCVIOL</gui_name>
          <description language="en">Instruction access violation</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MMFSR" offset="0xE000ED28" size="1">
        <gui_name language="en">MemManage Fault Status Register</gui_name>
        <description language="en">Shows the status of MPU faults</description>
        <bitField conditional="false" enumerationId="MMFSR_MMARVALID" name="MMARVALID">
          <gui_name language="en">MMARVALID</gui_name>
          <description language="en">MMFAR valid flag</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MLSPERR" name="MLSPERR">
          <gui_name language="en">MLSPERR</gui_name>
          <description language="en">MemManage lazy state preservation error flag</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MSTKERR" name="MSTKERR">
          <gui_name language="en">MSTKERR</gui_name>
          <description language="en">MemManage stacking error flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_MUNSTKERR" name="MUNSTKERR">
          <gui_name language="en">MUNSTKERR</gui_name>
          <description language="en">MemManage unstacking error flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_DACCVIOL" name="DACCVIOL">
          <gui_name language="en">DACCVIOL</gui_name>
          <description language="en">Data access violation flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MMFSR_IACCVIOL" name="IACCVIOL">
          <gui_name language="en">IACCVIOL</gui_name>
          <description language="en">Instruction access violation</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NSACR" offset="0xE000ED8C" size="4">
        <gui_name language="en">Non-secure Access Control Register</gui_name>
        <description language="en">Defines the Non-secure access permissions for both the FP Extension and coprocessors CP0 to CP7</description>
        <bitField conditional="false" name="CP11">
          <gui_name language="en">CP11</gui_name>
          <description language="en">CP11 access</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="NSACR_CP10" name="CP10">
          <gui_name language="en">CP10</gui_name>
          <description language="en">CP10 access</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="NSACR_CP0" name="CP0">
          <gui_name language="en">CP0</gui_name>
          <description language="en">CP0 access</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SCR_S" offset="0xE000ED10" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Sets or returns system control data</description>
        <bitField conditional="false" enumerationId="SCR_SEVONPEND" name="SEVONPEND">
          <gui_name language="en">SEVONPEND</gui_name>
          <description language="en">Send event on pend</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEPS" name="SLEEPDEEPS">
          <gui_name language="en">SLEEPDEEPS</gui_name>
          <description language="en">Sleep deep secure</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEP" name="SLEEPDEEP">
          <gui_name language="en">SLEEPDEEP</gui_name>
          <description language="en">Sleep deep</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPONEXIT" name="SLEEPONEXIT">
          <gui_name language="en">SLEEPONEXIT</gui_name>
          <description language="en">Sleep on exit</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="SCR_NS" offset="0xE000ED10" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Sets or returns system control data</description>
        <bitField conditional="false" enumerationId="SCR_SEVONPEND" name="SEVONPEND">
          <gui_name language="en">SEVONPEND</gui_name>
          <description language="en">Send event on pend</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEPS" name="SLEEPDEEPS">
          <gui_name language="en">SLEEPDEEPS</gui_name>
          <description language="en">Sleep deep secure</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEP" name="SLEEPDEEP">
          <gui_name language="en">SLEEPDEEP</gui_name>
          <description language="en">Sleep deep</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPONEXIT" name="SLEEPONEXIT">
          <gui_name language="en">SLEEPONEXIT</gui_name>
          <description language="en">Sleep on exit</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="SCR" offset="0xE000ED10" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Sets or returns system control data</description>
        <bitField conditional="false" enumerationId="SCR_SEVONPEND" name="SEVONPEND">
          <gui_name language="en">SEVONPEND</gui_name>
          <description language="en">Send event on pend</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEPS" name="SLEEPDEEPS">
          <gui_name language="en">SLEEPDEEPS</gui_name>
          <description language="en">Sleep deep secure</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPDEEP" name="SLEEPDEEP">
          <gui_name language="en">SLEEPDEEP</gui_name>
          <description language="en">Sleep deep</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCR_SLEEPONEXIT" name="SLEEPONEXIT">
          <gui_name language="en">SLEEPONEXIT</gui_name>
          <description language="en">Sleep on exit</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHCSR_S" offset="0xE000ED24" size="4">
        <gui_name language="en">System Handler Control and State Register</gui_name>
        <description language="en">Provides access to the active and pending status of system exceptions</description>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTPENDED" name="HARDFAULTPENDED">
          <gui_name language="en">HARDFAULTPENDED</gui_name>
          <description language="en">HardFault exception pended state</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTPENDED" name="SECUREFAULTPENDED">
          <gui_name language="en">SECUREFAULTPENDED</gui_name>
          <description language="en">SecureFault exception pended state</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTENA" name="SECUREFAULTENA">
          <gui_name language="en">SECUREFAULTENA</gui_name>
          <description language="en">SecureFault exception enable</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTENA" name="USGFAULTENA">
          <gui_name language="en">USGFAULTENA</gui_name>
          <description language="en">UsageFault exception enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTENA" name="BUSFAULTENA">
          <gui_name language="en">BUSFAULTENA</gui_name>
          <description language="en">BusFault exception enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTENA" name="MEMFAULTENA">
          <gui_name language="en">MEMFAULTENA</gui_name>
          <description language="en">MemManage exception enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLPENDED" name="SVCALLPENDED">
          <gui_name language="en">SVCALLPENDED</gui_name>
          <description language="en">SVCall exception pended state</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTPENDED" name="BUSFAULTPENDED">
          <gui_name language="en">BUSFAULTPENDED</gui_name>
          <description language="en">BusFault exception pended state</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTPENDED" name="MEMFAULTPENDED">
          <gui_name language="en">MEMFAULTPENDED</gui_name>
          <description language="en">MemManage exception pended state</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTPENDED" name="USGFAULTPENDED">
          <gui_name language="en">USGFAULTPENDED</gui_name>
          <description language="en">UsageFault exception pended state</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SYSTICKACT" name="SYSTICKACT">
          <gui_name language="en">SYSTICKACT</gui_name>
          <description language="en">SysTick exception active state</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_PENDSVACT" name="PENDSVACT">
          <gui_name language="en">PENDSVACT</gui_name>
          <description language="en">PendSV exception active state</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MONITORACT" name="MONITORACT">
          <gui_name language="en">MONITORACT</gui_name>
          <description language="en">DebugMonitor exception active state</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLACT" name="SVCALLACT">
          <gui_name language="en">SVCALLACT</gui_name>
          <description language="en">SVCall exception active state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_NMIACT" name="NMIACT">
          <gui_name language="en">NMIACT</gui_name>
          <description language="en">NMI exception active state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTACT" name="SECUREFAULTACT">
          <gui_name language="en">SECUREFAULTACT</gui_name>
          <description language="en">SecureFault exception active state</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTACT" name="USGFAULTACT">
          <gui_name language="en">USGFAULTACT</gui_name>
          <description language="en">UsageFault exception active state FTSSS</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTACT" name="HARDFAULTACT">
          <gui_name language="en">HARDFAULTACT</gui_name>
          <description language="en">HardFault exception active state</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTACT" name="BUSFAULTACT">
          <gui_name language="en">BUSFAULTACT</gui_name>
          <description language="en">BusFault exception active state</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTACT" name="MEMFAULTACT">
          <gui_name language="en">MEMFAULTACT</gui_name>
          <description language="en">MemManage exception active state FTSSS</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHCSR_NS" offset="0xE000ED24" size="4">
        <gui_name language="en">System Handler Control and State Register</gui_name>
        <description language="en">Provides access to the active and pending status of system exceptions</description>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTPENDED" name="HARDFAULTPENDED">
          <gui_name language="en">HARDFAULTPENDED</gui_name>
          <description language="en">HardFault exception pended state</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTPENDED" name="SECUREFAULTPENDED">
          <gui_name language="en">SECUREFAULTPENDED</gui_name>
          <description language="en">SecureFault exception pended state</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTENA" name="SECUREFAULTENA">
          <gui_name language="en">SECUREFAULTENA</gui_name>
          <description language="en">SecureFault exception enable</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTENA" name="USGFAULTENA">
          <gui_name language="en">USGFAULTENA</gui_name>
          <description language="en">UsageFault exception enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTENA" name="BUSFAULTENA">
          <gui_name language="en">BUSFAULTENA</gui_name>
          <description language="en">BusFault exception enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTENA" name="MEMFAULTENA">
          <gui_name language="en">MEMFAULTENA</gui_name>
          <description language="en">MemManage exception enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLPENDED" name="SVCALLPENDED">
          <gui_name language="en">SVCALLPENDED</gui_name>
          <description language="en">SVCall exception pended state</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTPENDED" name="BUSFAULTPENDED">
          <gui_name language="en">BUSFAULTPENDED</gui_name>
          <description language="en">BusFault exception pended state</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTPENDED" name="MEMFAULTPENDED">
          <gui_name language="en">MEMFAULTPENDED</gui_name>
          <description language="en">MemManage exception pended state</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTPENDED" name="USGFAULTPENDED">
          <gui_name language="en">USGFAULTPENDED</gui_name>
          <description language="en">UsageFault exception pended state</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SYSTICKACT" name="SYSTICKACT">
          <gui_name language="en">SYSTICKACT</gui_name>
          <description language="en">SysTick exception active state</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_PENDSVACT" name="PENDSVACT">
          <gui_name language="en">PENDSVACT</gui_name>
          <description language="en">PendSV exception active state</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MONITORACT" name="MONITORACT">
          <gui_name language="en">MONITORACT</gui_name>
          <description language="en">DebugMonitor exception active state</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLACT" name="SVCALLACT">
          <gui_name language="en">SVCALLACT</gui_name>
          <description language="en">SVCall exception active state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_NMIACT" name="NMIACT">
          <gui_name language="en">NMIACT</gui_name>
          <description language="en">NMI exception active state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTACT" name="SECUREFAULTACT">
          <gui_name language="en">SECUREFAULTACT</gui_name>
          <description language="en">SecureFault exception active state</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTACT" name="USGFAULTACT">
          <gui_name language="en">USGFAULTACT</gui_name>
          <description language="en">UsageFault exception active state FTSSS</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTACT" name="HARDFAULTACT">
          <gui_name language="en">HARDFAULTACT</gui_name>
          <description language="en">HardFault exception active state</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTACT" name="BUSFAULTACT">
          <gui_name language="en">BUSFAULTACT</gui_name>
          <description language="en">BusFault exception active state</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTACT" name="MEMFAULTACT">
          <gui_name language="en">MEMFAULTACT</gui_name>
          <description language="en">MemManage exception active state FTSSS</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHCSR" offset="0xE000ED24" size="4">
        <gui_name language="en">System Handler Control and State Register</gui_name>
        <description language="en">Provides access to the active and pending status of system exceptions</description>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTPENDED" name="HARDFAULTPENDED">
          <gui_name language="en">HARDFAULTPENDED</gui_name>
          <description language="en">HardFault exception pended state</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTPENDED" name="SECUREFAULTPENDED">
          <gui_name language="en">SECUREFAULTPENDED</gui_name>
          <description language="en">SecureFault exception pended state</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTENA" name="SECUREFAULTENA">
          <gui_name language="en">SECUREFAULTENA</gui_name>
          <description language="en">SecureFault exception enable</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTENA" name="USGFAULTENA">
          <gui_name language="en">USGFAULTENA</gui_name>
          <description language="en">UsageFault exception enable</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTENA" name="BUSFAULTENA">
          <gui_name language="en">BUSFAULTENA</gui_name>
          <description language="en">BusFault exception enable</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTENA" name="MEMFAULTENA">
          <gui_name language="en">MEMFAULTENA</gui_name>
          <description language="en">MemManage exception enable</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLPENDED" name="SVCALLPENDED">
          <gui_name language="en">SVCALLPENDED</gui_name>
          <description language="en">SVCall exception pended state</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTPENDED" name="BUSFAULTPENDED">
          <gui_name language="en">BUSFAULTPENDED</gui_name>
          <description language="en">BusFault exception pended state</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTPENDED" name="MEMFAULTPENDED">
          <gui_name language="en">MEMFAULTPENDED</gui_name>
          <description language="en">MemManage exception pended state</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTPENDED" name="USGFAULTPENDED">
          <gui_name language="en">USGFAULTPENDED</gui_name>
          <description language="en">UsageFault exception pended state</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SYSTICKACT" name="SYSTICKACT">
          <gui_name language="en">SYSTICKACT</gui_name>
          <description language="en">SysTick exception active state</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_PENDSVACT" name="PENDSVACT">
          <gui_name language="en">PENDSVACT</gui_name>
          <description language="en">PendSV exception active state</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MONITORACT" name="MONITORACT">
          <gui_name language="en">MONITORACT</gui_name>
          <description language="en">DebugMonitor exception active state</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SVCALLACT" name="SVCALLACT">
          <gui_name language="en">SVCALLACT</gui_name>
          <description language="en">SVCall exception active state</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_NMIACT" name="NMIACT">
          <gui_name language="en">NMIACT</gui_name>
          <description language="en">NMI exception active state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_SECUREFAULTACT" name="SECUREFAULTACT">
          <gui_name language="en">SECUREFAULTACT</gui_name>
          <description language="en">SecureFault exception active state</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_USGFAULTACT" name="USGFAULTACT">
          <gui_name language="en">USGFAULTACT</gui_name>
          <description language="en">UsageFault exception active state FTSSS</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_HARDFAULTACT" name="HARDFAULTACT">
          <gui_name language="en">HARDFAULTACT</gui_name>
          <description language="en">HardFault exception active state</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_BUSFAULTACT" name="BUSFAULTACT">
          <gui_name language="en">BUSFAULTACT</gui_name>
          <description language="en">BusFault exception active state</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SHCSR_MEMFAULTACT" name="MEMFAULTACT">
          <gui_name language="en">MEMFAULTACT</gui_name>
          <description language="en">MemManage exception active state FTSSS</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR1_S" offset="0xE000ED18" size="4">
        <gui_name language="en">System Handler Priority Register 1</gui_name>
        <description language="en">Sets or returns priority for system handlers 4 - 7</description>
        <bitField conditional="false" name="PRI_7">
          <gui_name language="en">PRI_7</gui_name>
          <description language="en">Priority 7</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_6">
          <gui_name language="en">PRI_6</gui_name>
          <description language="en">Priority 6</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_5">
          <gui_name language="en">PRI_5</gui_name>
          <description language="en">Priority 5</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_4">
          <gui_name language="en">PRI_4</gui_name>
          <description language="en">Priority 4</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR1_NS" offset="0xE000ED18" size="4">
        <gui_name language="en">System Handler Priority Register 1</gui_name>
        <description language="en">Sets or returns priority for system handlers 4 - 7</description>
        <bitField conditional="false" name="PRI_7">
          <gui_name language="en">PRI_7</gui_name>
          <description language="en">Priority 7</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_6">
          <gui_name language="en">PRI_6</gui_name>
          <description language="en">Priority 6</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_5">
          <gui_name language="en">PRI_5</gui_name>
          <description language="en">Priority 5</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_4">
          <gui_name language="en">PRI_4</gui_name>
          <description language="en">Priority 4</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR1" offset="0xE000ED18" size="4">
        <gui_name language="en">System Handler Priority Register 1</gui_name>
        <description language="en">Sets or returns priority for system handlers 4 - 7</description>
        <bitField conditional="false" name="PRI_7">
          <gui_name language="en">PRI_7</gui_name>
          <description language="en">Priority 7</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_6">
          <gui_name language="en">PRI_6</gui_name>
          <description language="en">Priority 6</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_5">
          <gui_name language="en">PRI_5</gui_name>
          <description language="en">Priority 5</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_4">
          <gui_name language="en">PRI_4</gui_name>
          <description language="en">Priority 4</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR2_S" offset="0xE000ED1C" size="4">
        <gui_name language="en">System Handler Priority Register 2</gui_name>
        <description language="en">Sets or returns priority for system handlers 8 - 11</description>
        <bitField conditional="false" name="PRI_11">
          <gui_name language="en">PRI_11</gui_name>
          <description language="en">Priority 11</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_10">
          <gui_name language="en">PRI_10</gui_name>
          <description language="en"/>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_9">
          <gui_name language="en">PRI_9</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_8">
          <gui_name language="en">PRI_8</gui_name>
          <description language="en"/>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR2_NS" offset="0xE000ED1C" size="4">
        <gui_name language="en">System Handler Priority Register 2</gui_name>
        <description language="en">Sets or returns priority for system handlers 8 - 11</description>
        <bitField conditional="false" name="PRI_11">
          <gui_name language="en">PRI_11</gui_name>
          <description language="en">Priority 11</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_10">
          <gui_name language="en">PRI_10</gui_name>
          <description language="en"/>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_9">
          <gui_name language="en">PRI_9</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_8">
          <gui_name language="en">PRI_8</gui_name>
          <description language="en"/>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR2" offset="0xE000ED1C" size="4">
        <gui_name language="en">System Handler Priority Register 2</gui_name>
        <description language="en">Sets or returns priority for system handlers 8 - 11</description>
        <bitField conditional="false" name="PRI_11">
          <gui_name language="en">PRI_11</gui_name>
          <description language="en">Priority 11</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_10">
          <gui_name language="en">PRI_10</gui_name>
          <description language="en"/>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_9">
          <gui_name language="en">PRI_9</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_8">
          <gui_name language="en">PRI_8</gui_name>
          <description language="en"/>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR3_S" offset="0xE000ED20" size="4">
        <gui_name language="en">System Handler Priority Register 3</gui_name>
        <description language="en">Sets or returns priority for system handlers 12 - 15</description>
        <bitField conditional="false" name="PRI_15">
          <gui_name language="en">PRI_15</gui_name>
          <description language="en">Priority 15</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_14">
          <gui_name language="en">PRI_14</gui_name>
          <description language="en">Priority 14</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_13">
          <gui_name language="en">PRI_13</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_12">
          <gui_name language="en">PRI_12</gui_name>
          <description language="en">Priority 12</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR3_NS" offset="0xE000ED20" size="4">
        <gui_name language="en">System Handler Priority Register 3</gui_name>
        <description language="en">Sets or returns priority for system handlers 12 - 15</description>
        <bitField conditional="false" name="PRI_15">
          <gui_name language="en">PRI_15</gui_name>
          <description language="en">Priority 15</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_14">
          <gui_name language="en">PRI_14</gui_name>
          <description language="en">Priority 14</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_13">
          <gui_name language="en">PRI_13</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_12">
          <gui_name language="en">PRI_12</gui_name>
          <description language="en">Priority 12</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR3" offset="0xE000ED20" size="4">
        <gui_name language="en">System Handler Priority Register 3</gui_name>
        <description language="en">Sets or returns priority for system handlers 12 - 15</description>
        <bitField conditional="false" name="PRI_15">
          <gui_name language="en">PRI_15</gui_name>
          <description language="en">Priority 15</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_14">
          <gui_name language="en">PRI_14</gui_name>
          <description language="en">Priority 14</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_13">
          <gui_name language="en">PRI_13</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_12">
          <gui_name language="en">PRI_12</gui_name>
          <description language="en">Priority 12</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="UFSR_S" offset="0xE000ED2A" size="2">
        <gui_name language="en">UsageFault Status Register</gui_name>
        <description language="en">Contains the status for some instruction execution faults, and for data access faults</description>
        <bitField conditional="false" enumerationId="UFSR_DIVBYZERO" name="DIVBYZERO">
          <gui_name language="en">DIVBYZERO</gui_name>
          <description language="en">Divide by zero flag</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNALIGNED" name="UNALIGNED">
          <gui_name language="en">UNALIGNED</gui_name>
          <description language="en">Unaligned access flag</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_STKOF" name="STKOF">
          <gui_name language="en">STKOF</gui_name>
          <description language="en">Stack overflow flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_NOCP" name="NOCP">
          <gui_name language="en">NOCP</gui_name>
          <description language="en">No coprocessor flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVPC" name="INVPC">
          <gui_name language="en">INVPC</gui_name>
          <description language="en">Invalid PC flag</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVSTATE" name="INVSTATE">
          <gui_name language="en">INVSTATE</gui_name>
          <description language="en">Invalid state flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNDEFINSTR" name="UNDEFINSTR">
          <gui_name language="en">UNDEFINSTR</gui_name>
          <description language="en">Undefined instruction flag</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="UFSR_NS" offset="0xE000ED2A" size="2">
        <gui_name language="en">UsageFault Status Register</gui_name>
        <description language="en">Contains the status for some instruction execution faults, and for data access faults</description>
        <bitField conditional="false" enumerationId="UFSR_DIVBYZERO" name="DIVBYZERO">
          <gui_name language="en">DIVBYZERO</gui_name>
          <description language="en">Divide by zero flag</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNALIGNED" name="UNALIGNED">
          <gui_name language="en">UNALIGNED</gui_name>
          <description language="en">Unaligned access flag</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_STKOF" name="STKOF">
          <gui_name language="en">STKOF</gui_name>
          <description language="en">Stack overflow flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_NOCP" name="NOCP">
          <gui_name language="en">NOCP</gui_name>
          <description language="en">No coprocessor flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVPC" name="INVPC">
          <gui_name language="en">INVPC</gui_name>
          <description language="en">Invalid PC flag</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVSTATE" name="INVSTATE">
          <gui_name language="en">INVSTATE</gui_name>
          <description language="en">Invalid state flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNDEFINSTR" name="UNDEFINSTR">
          <gui_name language="en">UNDEFINSTR</gui_name>
          <description language="en">Undefined instruction flag</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="UFSR" offset="0xE000ED2A" size="2">
        <gui_name language="en">UsageFault Status Register</gui_name>
        <description language="en">Contains the status for some instruction execution faults, and for data access faults</description>
        <bitField conditional="false" enumerationId="UFSR_DIVBYZERO" name="DIVBYZERO">
          <gui_name language="en">DIVBYZERO</gui_name>
          <description language="en">Divide by zero flag</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNALIGNED" name="UNALIGNED">
          <gui_name language="en">UNALIGNED</gui_name>
          <description language="en">Unaligned access flag</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_STKOF" name="STKOF">
          <gui_name language="en">STKOF</gui_name>
          <description language="en">Stack overflow flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_NOCP" name="NOCP">
          <gui_name language="en">NOCP</gui_name>
          <description language="en">No coprocessor flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVPC" name="INVPC">
          <gui_name language="en">INVPC</gui_name>
          <description language="en">Invalid PC flag</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_INVSTATE" name="INVSTATE">
          <gui_name language="en">INVSTATE</gui_name>
          <description language="en">Invalid state flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="UFSR_UNDEFINSTR" name="UNDEFINSTR">
          <gui_name language="en">UNDEFINSTR</gui_name>
          <description language="en">Undefined instruction flag</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="VTOR_S" offset="0xE000ED08" size="4">
        <gui_name language="en">Vector Table Offset Register</gui_name>
        <description language="en">Holds the vector table address FTSSS</description>
        <bitField conditional="false" name="TBLOFF">
          <gui_name language="en">TBLOFF</gui_name>
          <description language="en">Table offset</description>
          <definition>[31:7]</definition>
        </bitField>
      </register>
      <register access="RW" name="VTOR_NS" offset="0xE000ED08" size="4">
        <gui_name language="en">Vector Table Offset Register</gui_name>
        <description language="en">Holds the vector table address FTSSS</description>
        <bitField conditional="false" name="TBLOFF">
          <gui_name language="en">TBLOFF</gui_name>
          <description language="en">Table offset</description>
          <definition>[31:7]</definition>
        </bitField>
      </register>
      <register access="RW" name="VTOR" offset="0xE000ED08" size="4">
        <gui_name language="en">Vector Table Offset Register</gui_name>
        <description language="en">Holds the vector table address FTSSS</description>
        <bitField conditional="false" name="TBLOFF">
          <gui_name language="en">TBLOFF</gui_name>
          <description language="en">Table offset</description>
          <definition>[31:7]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="NVIC" offset="0x00000000" xml:base="Registers/System/V8-M_NVIC_mm.xml">
      <gui_name language="en">NVIC</gui_name>
      <description language="en">Nested Vectored Interrupt Controller</description>
      <register access="RO" name="NVIC_IABR0" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 0</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR0_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR1" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 1</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR1_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR2" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 2</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR2_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR3" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 3</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR3_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR4" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 4</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR4_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR5" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 5</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR5_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR6" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 6</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR6_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR7" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 7</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR7_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR8" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 8</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR8_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR9" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 9</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR9_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR10" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 10</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR10_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR11" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 11</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR11_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR12" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 12</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR12_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR13" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 13</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR13_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR14" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 14</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR14_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="NVIC_IABR15" offset="0xE000E300" size="4">
        <gui_name language="en">Interrupt Active Bit Register 15</gui_name>
        <description language="en">For each group of 32 interrupts, shows the active state of each interrupt</description>
        <bitField conditional="false" enumerationId="NVIC_IABR15_ACTIVE" name="ACTIVE">
          <gui_name language="en">ACTIVE</gui_name>
          <description language="en">Active state</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER0" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 0</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER0_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER1" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 1</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER1_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER2" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 2</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER2_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER3" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 3</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER3_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER4" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 4</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER4_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER5" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 5</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER5_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER6" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 6</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER6_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER7" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 7</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER7_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER8" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 8</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER8_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER9" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 9</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER9_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER10" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 10</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER10_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER11" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 11</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER11_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER12" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 12</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER12_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER13" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 13</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER13_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER14" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 14</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER14_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICER15" offset="0xE000E180" size="4">
        <gui_name language="en">Interrupt Clear Enable Register 15</gui_name>
        <description language="en">Clears or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICER15_CLRENA" name="CLRENA">
          <gui_name language="en">CLRENA</gui_name>
          <description language="en">Clear enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR0" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 0</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR0_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR1" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 1</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR1_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR2" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 2</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR2_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR3" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 3</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR3_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR4" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 4</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR4_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR5" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 5</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR5_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR6" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 6</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR6_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR7" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 7</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR7_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR8" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 8</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR8_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR9" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 9</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR9_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR10" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 10</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR10_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR11" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 11</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR11_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR12" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 12</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR12_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR13" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 13</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR13_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR14" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 14</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR14_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ICPR15" offset="0xE000E280" size="4">
        <gui_name language="en">Interrupt Clear Pending Register 15</gui_name>
        <description language="en">Clears or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ICPR15_CLRPEND" name="CLRPEND">
          <gui_name language="en">CLRPEND</gui_name>
          <description language="en">Clear pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR0" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 0</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '0'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '0'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '0'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '0'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR1" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 1</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '4'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '4'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '4'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '4'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR2" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 2</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '8'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '8'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '8'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '8'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR3" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 3</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '12'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '12'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '12'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '12'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR4" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 4</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '16'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '16'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '16'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '16'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR5" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 5</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '20'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '20'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '20'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '20'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR6" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 6</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '24'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '24'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '24'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '24'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR7" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 7</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '28'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '28'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '28'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '28'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR8" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 8</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '32'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '32'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '32'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '32'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR9" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 9</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '36'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '36'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '36'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '36'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR10" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 10</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '40'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '40'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '40'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '40'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR11" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 11</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '44'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '44'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '44'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '44'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR12" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 12</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '48'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '48'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '48'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '48'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR13" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 13</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '52'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '52'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '52'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '52'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR14" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 14</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '56'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '56'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '56'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '56'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR15" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 15</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '60'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '60'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '60'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '60'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR16" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 16</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '64'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '64'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '64'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '64'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR17" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 17</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '68'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '68'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '68'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '68'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR18" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 18</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '72'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '72'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '72'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '72'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR19" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 19</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '76'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '76'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '76'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '76'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR20" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 20</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '80'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '80'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '80'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '80'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR21" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 21</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '84'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '84'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '84'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '84'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR22" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 22</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '88'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '88'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '88'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '88'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR23" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 23</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '92'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '92'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '92'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '92'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR24" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 24</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '96'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '96'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '96'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '96'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR25" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 25</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '100'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '100'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '100'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '100'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR26" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 26</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '104'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '104'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '104'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '104'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR27" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 27</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '108'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '108'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '108'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '108'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR28" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 28</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '112'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '112'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '112'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '112'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR29" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 29</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '116'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '116'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '116'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '116'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR30" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 30</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '120'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '120'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '120'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '120'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR31" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 31</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '124'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '124'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '124'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '124'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR32" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 32</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '128'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '128'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '128'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '128'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR33" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 33</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '132'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '132'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '132'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '132'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR34" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 34</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '136'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '136'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '136'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '136'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR35" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 35</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '140'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '140'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '140'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '140'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR36" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 36</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '144'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '144'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '144'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '144'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR37" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 37</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '148'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '148'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '148'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '148'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR38" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 38</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '152'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '152'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '152'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '152'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR39" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 39</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '156'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '156'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '156'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '156'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR40" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 40</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '160'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '160'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '160'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '160'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR41" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 41</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '164'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '164'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '164'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '164'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR42" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 42</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '168'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '168'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '168'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '168'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR43" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 43</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '172'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '172'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '172'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '172'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR44" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 44</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '176'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '176'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '176'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '176'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR45" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 45</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '180'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '180'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '180'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '180'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR46" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 46</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '184'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '184'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '184'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '184'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR47" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 47</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '188'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '188'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '188'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '188'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR48" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 48</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '192'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '192'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '192'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '192'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR49" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 49</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '196'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '196'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '196'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '196'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR50" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 50</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '200'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '200'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '200'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '200'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR51" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 51</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '204'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '204'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '204'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '204'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR52" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 52</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '208'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '208'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '208'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '208'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR53" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 53</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '212'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '212'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '212'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '212'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR54" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 54</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '216'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '216'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '216'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '216'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR55" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 55</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '220'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '220'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '220'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '220'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR56" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 56</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '224'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '224'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '224'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '224'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR57" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 57</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '228'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '228'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '228'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '228'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR58" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 58</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '232'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '232'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '232'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '232'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR59" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 59</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '236'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '236'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '236'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '236'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR60" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 60</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '240'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '240'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '240'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '240'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR61" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 61</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '244'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '244'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '244'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '244'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR62" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 62</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '248'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '248'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '248'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '248'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR63" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 63</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '252'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '252'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '252'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '252'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR64" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 64</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '256'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '256'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '256'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '256'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR65" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 65</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '260'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '260'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '260'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '260'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR66" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 66</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '264'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '264'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '264'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '264'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR67" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 67</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '268'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '268'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '268'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '268'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR68" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 68</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '272'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '272'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '272'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '272'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR69" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 69</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '276'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '276'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '276'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '276'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR70" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 70</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '280'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '280'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '280'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '280'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR71" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 71</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '284'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '284'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '284'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '284'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR72" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 72</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '288'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '288'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '288'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '288'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR73" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 73</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '292'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '292'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '292'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '292'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR74" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 74</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '296'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '296'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '296'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '296'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR75" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 75</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '300'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '300'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '300'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '300'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR76" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 76</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '304'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '304'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '304'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '304'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR77" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 77</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '308'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '308'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '308'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '308'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR78" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 78</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '312'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '312'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '312'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '312'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR79" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 79</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '316'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '316'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '316'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '316'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR80" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 80</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '320'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '320'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '320'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '320'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR81" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 81</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '324'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '324'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '324'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '324'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR82" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 82</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '328'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '328'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '328'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '328'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR83" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 83</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '332'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '332'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '332'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '332'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR84" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 84</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '336'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '336'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '336'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '336'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR85" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 85</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '340'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '340'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '340'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '340'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR86" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 86</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '344'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '344'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '344'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '344'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR87" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 87</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '348'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '348'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '348'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '348'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR88" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 88</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '352'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '352'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '352'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '352'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR89" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 89</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '356'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '356'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '356'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '356'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR90" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 90</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '360'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '360'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '360'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '360'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR91" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 91</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '364'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '364'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '364'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '364'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR92" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 92</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '368'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '368'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '368'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '368'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR93" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 93</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '372'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '372'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '372'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '372'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR94" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 94</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '376'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '376'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '376'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '376'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR95" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 95</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '380'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '380'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '380'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '380'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR96" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 96</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '384'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '384'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '384'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '384'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR97" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 97</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '388'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '388'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '388'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '388'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR98" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 98</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '392'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '392'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '392'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '392'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR99" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 99</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '396'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '396'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '396'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '396'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR100" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 100</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '400'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '400'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '400'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '400'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR101" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 101</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '404'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '404'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '404'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '404'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR102" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 102</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '408'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '408'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '408'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '408'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR103" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 103</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '412'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '412'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '412'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '412'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR104" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 104</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '416'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '416'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '416'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '416'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR105" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 105</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '420'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '420'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '420'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '420'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR106" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 106</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '424'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '424'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '424'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '424'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR107" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 107</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '428'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '428'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '428'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '428'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR108" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 108</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '432'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '432'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '432'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '432'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR109" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 109</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '436'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '436'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '436'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '436'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR110" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 110</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '440'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '440'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '440'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '440'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR111" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 111</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '444'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '444'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '444'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '444'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR112" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 112</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '448'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '448'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '448'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '448'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR113" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 113</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '452'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '452'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '452'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '452'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR114" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 114</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '456'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '456'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '456'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '456'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR115" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 115</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '460'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '460'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '460'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '460'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR116" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 116</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '464'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '464'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '464'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '464'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR117" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 117</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '468'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '468'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '468'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '468'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR118" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 118</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '472'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '472'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '472'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '472'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR119" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 119</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '476'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '476'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '476'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '476'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR120" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 120</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '480'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '480'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '480'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '480'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR121" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 121</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '484'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '484'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '484'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '484'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR122" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 122</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '488'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '488'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '488'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '488'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_IPR123" offset="0xE000E400" size="4">
        <gui_name language="en">Interrupt Priority Register 123</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
        <bitField conditional="false" name="PRI_N0">
          <gui_name language="en">PRI_N0</gui_name>
          <description language="en">Priority '492'+0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N1">
          <gui_name language="en">PRI_N1</gui_name>
          <description language="en">Priority '492'+1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N2">
          <gui_name language="en">PRI_N2</gui_name>
          <description language="en">Priority '492'+2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_N3">
          <gui_name language="en">PRI_N3</gui_name>
          <description language="en">Priority '492'+3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER0" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 0</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER0_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER1" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 1</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER1_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER2" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 2</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER2_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER3" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 3</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER3_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER4" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 4</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER4_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER5" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 5</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER5_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER6" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 6</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER6_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER7" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 7</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER7_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER8" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 8</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER8_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER9" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 9</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER9_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER10" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 10</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER10_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER11" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 11</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER11_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER12" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 12</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER12_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER13" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 13</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER13_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER14" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 14</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER14_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISER15" offset="0xE000E100" size="4">
        <gui_name language="en">Interrupt Set Enable Register 15</gui_name>
        <description language="en">Enables or reads the enabled state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISER15_SETENA" name="SETENA">
          <gui_name language="en">SETENA</gui_name>
          <description language="en">Set enable</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR0" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 0</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR0_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR1" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 1</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR1_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR2" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 2</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR2_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR3" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 3</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR3_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR4" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 4</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR4_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR5" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 5</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR5_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR6" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 6</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR6_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR7" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 7</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR7_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR8" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 8</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR8_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR9" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 9</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR9_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR10" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 10</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR10_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR11" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 11</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR11_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR12" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 12</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR12_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR13" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 13</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR13_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR14" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 14</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR14_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ISPR15" offset="0xE000E200" size="4">
        <gui_name language="en">Interrupt Set Pending Register 15</gui_name>
        <description language="en">Enables or reads the pending state of each group of 32 interrupts</description>
        <bitField conditional="false" enumerationId="NVIC_ISPR15_SETPEND" name="SETPEND">
          <gui_name language="en">SETPEND</gui_name>
          <description language="en">Set pending</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS0" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 0</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS0_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS1" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 1</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS1_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS2" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 2</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS2_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS3" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 3</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS3_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS4" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 4</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS4_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS5" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 5</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS5_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS6" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 6</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS6_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS7" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 7</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS7_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS8" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 8</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS8_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS9" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 9</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS9_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS10" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 10</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS10_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS11" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 11</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS11_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS12" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 12</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS12_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS13" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 13</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS13_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS14" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 14</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS14_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="NVIC_ITNS15" offset="0xE000E380" size="4">
        <gui_name language="en">Interrupt Target Non-secure Register 15</gui_name>
        <description language="en">For each group of 32 interrupts, determines whether each interrupt targets Non-secure or Secure state</description>
        <bitField conditional="false" enumerationId="NVIC_ITNS15_ITNS" name="ITNS">
          <gui_name language="en">ITNS</gui_name>
          <description language="en">Interrupt Targets Non-secure</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="MPU" offset="0x00000000" xml:base="Registers/System/V8-M_MPU_mm.xml">
      <gui_name language="en">MPU</gui_name>
      <description language="en">Memory protection Unit Control Registers</description>
      <register access="RW" name="MPU_CTRL_S" offset="0xE000ED94" size="4">
        <gui_name language="en">MPU Control Register</gui_name>
        <description language="en">Enables the MPU and, when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1</description>
        <bitField conditional="false" enumerationId="MPU_CTRL_PRIVDEFENA" name="PRIVDEFENA">
          <gui_name language="en">PRIVDEFENA</gui_name>
          <description language="en">Privileged default enable</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_HFNMIENA" name="HFNMIENA">
          <gui_name language="en">HFNMIENA</gui_name>
          <description language="en">HardFault, NMI enable</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_CTRL_NS" offset="0xE000ED94" size="4">
        <gui_name language="en">MPU Control Register</gui_name>
        <description language="en">Enables the MPU and, when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1</description>
        <bitField conditional="false" enumerationId="MPU_CTRL_PRIVDEFENA" name="PRIVDEFENA">
          <gui_name language="en">PRIVDEFENA</gui_name>
          <description language="en">Privileged default enable</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_HFNMIENA" name="HFNMIENA">
          <gui_name language="en">HFNMIENA</gui_name>
          <description language="en">HardFault, NMI enable</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_CTRL" offset="0xE000ED94" size="4">
        <gui_name language="en">MPU Control Register</gui_name>
        <description language="en">Enables the MPU and, when the MPU is enabled, controls whether the default memory map is enabled as a background region for privileged accesses, and whether the MPU is enabled for HardFaults, NMIs, and exception handlers when FAULTMASK is set to 1</description>
        <bitField conditional="false" enumerationId="MPU_CTRL_PRIVDEFENA" name="PRIVDEFENA">
          <gui_name language="en">PRIVDEFENA</gui_name>
          <description language="en">Privileged default enable</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_HFNMIENA" name="HFNMIENA">
          <gui_name language="en">HFNMIENA</gui_name>
          <description language="en">HardFault, NMI enable</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_CTRL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR0_S" offset="0xE000EDC0" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MPU_MAIR1, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR0_NS" offset="0xE000EDC0" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MPU_MAIR1, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR0" offset="0xE000EDC0" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MPU_MAIR1, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR0_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR1_S" offset="0xE000EDC4" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MPU_MAIR0, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR1_NS" offset="0xE000EDC4" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MPU_MAIR0, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_MAIR1" offset="0xE000EDC4" size="4">
        <gui_name language="en">MPU Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MPU_MAIR0, provides the memory attribute encodings corresponding to the AttrIndx values</description>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr0" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">Attribute 0</description>
          <definition>[7:0]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr1" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">Attribute 1</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr2" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">Attribute 2</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_MAIR1_Attr3" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">Attribute 3</description>
          <definition>[31:24]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR0_S" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR1_S" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR2_S" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR3_S" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR0_NS" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR1_NS" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR2_NS" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR3_NS" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR0" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR1" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR2" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RASR3" offset="0xE000EDA0" size="4">
        <gui_name language="en"/>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en"/>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="AP">
          <gui_name language="en">AP</gui_name>
          <description language="en"/>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="TEX">
          <gui_name language="en">TEX</gui_name>
          <description language="en"/>
          <definition>[21:19]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en"/>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en"/>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="B">
          <gui_name language="en">B</gui_name>
          <description language="en"/>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="SRD">
          <gui_name language="en">SRD</gui_name>
          <description language="en"/>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SIZE">
          <gui_name language="en">SIZE</gui_name>
          <description language="en"/>
          <definition>[5:1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en"/>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR0_S" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR1_S" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR2_S" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR3_S" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR0_NS" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR1_NS" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR2_NS" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR3_NS" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR0" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR1" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR2" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR3" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="ADDR">
          <gui_name language="en">ADDR</gui_name>
          <description language="en"/>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="VALID">
          <gui_name language="en">VALID</gui_name>
          <description language="en"/>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en"/>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_S" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_NS" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR" offset="0xE000ED9C" size="4">
        <gui_name language="en">MPU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A0_S" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A1_S" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A2_S" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A0_NS" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A1_NS" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A2_NS" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A0" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A0_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A1" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A1_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RBAR_A2" offset="0xE000EDA4" size="4">
        <gui_name language="en">MPU Region Base Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_SH" name="SH">
          <gui_name language="en">SH</gui_name>
          <description language="en">Shareability</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RBAR_A2_XN" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute Never</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_S" offset="0xE000EDA0" size="4">
        <gui_name language="en">MPU Region Limit Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_NS" offset="0xE000EDA0" size="4">
        <gui_name language="en">MPU Region Limit Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR" offset="0xE000EDA0" size="4">
        <gui_name language="en">MPU Region Limit Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A0_S" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A0_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A1_S" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A1_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A2_S" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A2_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A0_NS" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A0_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A1_NS" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A1_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A2_NS" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A2_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A0" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 0</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(0[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A0_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A1" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 1</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(1[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A1_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RLAR_A2" offset="0xE000EDA8" size="4">
        <gui_name language="en">MPU Region Limit Address Register Alias 2</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected MPU region selected by MPU_RNR[7:2]:(2[1:0]) FTSSS</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" name="AttrIndx">
          <gui_name language="en">AttrIndx</gui_name>
          <description language="en">Attribute index</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPU_RLAR_A2_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RNR_S" offset="0xE000ED98" size="4">
        <gui_name language="en">MPU Region Number Register</gui_name>
        <description language="en">Selects the region currently accessed by MPU_RBAR and MPU_RLAR</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">Region number</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RNR_NS" offset="0xE000ED98" size="4">
        <gui_name language="en">MPU Region Number Register</gui_name>
        <description language="en">Selects the region currently accessed by MPU_RBAR and MPU_RLAR</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">Region number</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="MPU_RNR" offset="0xE000ED98" size="4">
        <gui_name language="en">MPU Region Number Register</gui_name>
        <description language="en">Selects the region currently accessed by MPU_RBAR and MPU_RLAR</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">Region number</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="MPU_TYPE_S" offset="0xE000ED90" size="4">
        <gui_name language="en">MPU Type Register</gui_name>
        <description language="en">The MPU Type Register indicates how many regions the MPU FTSSS supports</description>
        <bitField conditional="false" name="DREGION">
          <gui_name language="en">DREGION</gui_name>
          <description language="en">Data regions</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SEPARATE">
          <gui_name language="en">SEPARATE</gui_name>
          <description language="en">Separate</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" name="MPU_TYPE_NS" offset="0xE000ED90" size="4">
        <gui_name language="en">MPU Type Register</gui_name>
        <description language="en">The MPU Type Register indicates how many regions the MPU FTSSS supports</description>
        <bitField conditional="false" name="DREGION">
          <gui_name language="en">DREGION</gui_name>
          <description language="en">Data regions</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SEPARATE">
          <gui_name language="en">SEPARATE</gui_name>
          <description language="en">Separate</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" name="MPU_TYPE" offset="0xE000ED90" size="4">
        <gui_name language="en">MPU Type Register</gui_name>
        <description language="en">The MPU Type Register indicates how many regions the MPU FTSSS supports</description>
        <bitField conditional="false" name="DREGION">
          <gui_name language="en">DREGION</gui_name>
          <description language="en">Data regions</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="SEPARATE">
          <gui_name language="en">SEPARATE</gui_name>
          <description language="en">Separate</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="SIG" offset="0x00000000" xml:base="Registers/System/V8-M_SIG_mm.xml">
      <gui_name language="en">SIG</gui_name>
      <description language="en">Software Interrupt Control</description>
      <register access="WO" name="STIR" offset="0xE000EF00" size="4">
        <gui_name language="en">Software Triggered Interrupt Register</gui_name>
        <description language="en">Provides a mechanism for software to generate an interrupt</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">Interrupt ID</description>
          <definition>[8:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="SYST" offset="0x00000000" xml:base="Registers/System/V8-M_SYST_mm.xml">
      <gui_name language="en">SYST</gui_name>
      <description language="en">SysTick Control Registers</description>
      <register access="RO" name="SYST_CALIB_S" offset="0xE000E01C" size="4">
        <gui_name language="en">SysTick Calibration Value Register</gui_name>
        <description language="en">Reads the SysTick timer calibration value and parameters FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CALIB_NOREF" name="NOREF">
          <gui_name language="en">NOREF</gui_name>
          <description language="en">No reference</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CALIB_SKEW" name="SKEW">
          <gui_name language="en">SKEW</gui_name>
          <description language="en">Skew</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TENMS">
          <gui_name language="en">TENMS</gui_name>
          <description language="en">Ten milliseconds</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="SYST_CALIB_NS" offset="0xE000E01C" size="4">
        <gui_name language="en">SysTick Calibration Value Register</gui_name>
        <description language="en">Reads the SysTick timer calibration value and parameters FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CALIB_NOREF" name="NOREF">
          <gui_name language="en">NOREF</gui_name>
          <description language="en">No reference</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CALIB_SKEW" name="SKEW">
          <gui_name language="en">SKEW</gui_name>
          <description language="en">Skew</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TENMS">
          <gui_name language="en">TENMS</gui_name>
          <description language="en">Ten milliseconds</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="SYST_CALIB" offset="0xE000E01C" size="4">
        <gui_name language="en">SysTick Calibration Value Register</gui_name>
        <description language="en">Reads the SysTick timer calibration value and parameters FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CALIB_NOREF" name="NOREF">
          <gui_name language="en">NOREF</gui_name>
          <description language="en">No reference</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CALIB_SKEW" name="SKEW">
          <gui_name language="en">SKEW</gui_name>
          <description language="en">Skew</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TENMS">
          <gui_name language="en">TENMS</gui_name>
          <description language="en">Ten milliseconds</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CSR_S" offset="0xE000E010" size="4">
        <gui_name language="en">SysTick Control and Status Register</gui_name>
        <description language="en">Controls the SysTick timer and provides status data FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CSR_COUNTFLAG" name="COUNTFLAG">
          <gui_name language="en">COUNTFLAG</gui_name>
          <description language="en">Count flag</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_CLKSOURCE" name="CLKSOURCE">
          <gui_name language="en">CLKSOURCE</gui_name>
          <description language="en">Clock source</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_TICKINT" name="TICKINT">
          <gui_name language="en">TICKINT</gui_name>
          <description language="en">Tick interrupt</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">SysTick enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CSR_NS" offset="0xE000E010" size="4">
        <gui_name language="en">SysTick Control and Status Register</gui_name>
        <description language="en">Controls the SysTick timer and provides status data FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CSR_COUNTFLAG" name="COUNTFLAG">
          <gui_name language="en">COUNTFLAG</gui_name>
          <description language="en">Count flag</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_CLKSOURCE" name="CLKSOURCE">
          <gui_name language="en">CLKSOURCE</gui_name>
          <description language="en">Clock source</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_TICKINT" name="TICKINT">
          <gui_name language="en">TICKINT</gui_name>
          <description language="en">Tick interrupt</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">SysTick enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CSR" offset="0xE000E010" size="4">
        <gui_name language="en">SysTick Control and Status Register</gui_name>
        <description language="en">Controls the SysTick timer and provides status data FTSSS</description>
        <bitField conditional="false" enumerationId="SYST_CSR_COUNTFLAG" name="COUNTFLAG">
          <gui_name language="en">COUNTFLAG</gui_name>
          <description language="en">Count flag</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_CLKSOURCE" name="CLKSOURCE">
          <gui_name language="en">CLKSOURCE</gui_name>
          <description language="en">Clock source</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_TICKINT" name="TICKINT">
          <gui_name language="en">TICKINT</gui_name>
          <description language="en">Tick interrupt</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SYST_CSR_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">SysTick enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CVR_S" offset="0xE000E018" size="4">
        <gui_name language="en">SysTick Current Value Register</gui_name>
        <description language="en">Reads or clears the SysTick timer current counter value FTSSS</description>
        <bitField conditional="false" name="CURRENT">
          <gui_name language="en">CURRENT</gui_name>
          <description language="en">Current counter value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CVR_NS" offset="0xE000E018" size="4">
        <gui_name language="en">SysTick Current Value Register</gui_name>
        <description language="en">Reads or clears the SysTick timer current counter value FTSSS</description>
        <bitField conditional="false" name="CURRENT">
          <gui_name language="en">CURRENT</gui_name>
          <description language="en">Current counter value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CVR" offset="0xE000E018" size="4">
        <gui_name language="en">SysTick Current Value Register</gui_name>
        <description language="en">Reads or clears the SysTick timer current counter value FTSSS</description>
        <bitField conditional="false" name="CURRENT">
          <gui_name language="en">CURRENT</gui_name>
          <description language="en">Current counter value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_RVR_S" offset="0xE000E014" size="4">
        <gui_name language="en">SysTick Reload Value Register</gui_name>
        <description language="en">Provides access SysTick timer counter reload value FTSSS</description>
        <bitField conditional="false" name="RELOAD">
          <gui_name language="en">RELOAD</gui_name>
          <description language="en">Counter reload value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_RVR_NS" offset="0xE000E014" size="4">
        <gui_name language="en">SysTick Reload Value Register</gui_name>
        <description language="en">Provides access SysTick timer counter reload value FTSSS</description>
        <bitField conditional="false" name="RELOAD">
          <gui_name language="en">RELOAD</gui_name>
          <description language="en">Counter reload value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_RVR" offset="0xE000E014" size="4">
        <gui_name language="en">SysTick Reload Value Register</gui_name>
        <description language="en">Provides access SysTick timer counter reload value FTSSS</description>
        <bitField conditional="false" name="RELOAD">
          <gui_name language="en">RELOAD</gui_name>
          <description language="en">Counter reload value</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="SAU" offset="0x00000000" xml:base="Registers/System/V8-M_SAU_mm.xml">
      <gui_name language="en">SAU</gui_name>
      <description language="en">Security Attribute Unit</description>
      <register access="RW" name="SAU_CTRL" offset="0xE000EDD0" size="4">
        <gui_name language="en">SAU Control Register</gui_name>
        <description language="en">Allows enabling of the Security Attribution Unit</description>
        <bitField conditional="false" enumerationId="SAU_CTRL_ALLNS" name="ALLNS">
          <gui_name language="en">ALLNS</gui_name>
          <description language="en">All Non-secure</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SAU_CTRL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SAU_RBAR" offset="0xE000EDDC" size="4">
        <gui_name language="en">SAU Region Base Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the base address of the currently selected SAU region</description>
        <bitField conditional="false" name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Base address</description>
          <definition>[31:5]</definition>
        </bitField>
      </register>
      <register access="RW" name="SAU_RLAR" offset="0xE000EDE0" size="4">
        <gui_name language="en">SAU Region Limit Address Register</gui_name>
        <description language="en">Provides indirect read and write access to the limit address of the currently selected SAU region</description>
        <bitField conditional="false" name="LADDR">
          <gui_name language="en">LADDR</gui_name>
          <description language="en">Limit address</description>
          <definition>[31:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SAU_RLAR_NSC" name="NSC">
          <gui_name language="en">NSC</gui_name>
          <description language="en">Non-secure callable</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SAU_RLAR_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enable</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SAU_RNR" offset="0xE000EDD8" size="4">
        <gui_name language="en">SAU Region Number Register</gui_name>
        <description language="en">Selects the region currently accessed by SAU_RBAR and SAU_RLAR</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">Region number</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" name="SAU_TYPE" offset="0xE000EDD4" size="4">
        <gui_name language="en">SAU Type Register</gui_name>
        <description language="en">Indicates the number of regions implemented by the Security Attribution Unit</description>
        <bitField conditional="false" name="SREGION">
          <gui_name language="en">SREGION</gui_name>
          <description language="en">SAU regions</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SFAR" offset="0xE000EDE8" size="4">
        <gui_name language="en">Secure Fault Address Register</gui_name>
        <description language="en">Shows the address of the memory location that caused a Security violation</description>
        <bitField conditional="false" name="ADDRESS">
          <gui_name language="en">ADDRESS</gui_name>
          <description language="en"> Address</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SFSR" offset="0xE000EDE4" size="4">
        <gui_name language="en">Secure Fault Status Register</gui_name>
        <description language="en">Provides information about any security related faults</description>
        <bitField conditional="false" enumerationId="SFSR_LSERR" name="LSERR">
          <gui_name language="en">LSERR</gui_name>
          <description language="en">Lazy state error flag</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_SFARVALID" name="SFARVALID">
          <gui_name language="en">SFARVALID</gui_name>
          <description language="en">Secure fault address valid</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_LSPERR" name="LSPERR">
          <gui_name language="en">LSPERR</gui_name>
          <description language="en">Lazy state preservation error flag</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_INVTRAN" name="INVTRAN">
          <gui_name language="en">INVTRAN</gui_name>
          <description language="en">Invalid transition flag</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_AUVIOL" name="AUVIOL">
          <gui_name language="en">AUVIOL</gui_name>
          <description language="en">Attribution unit violation flag</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_INVER" name="INVER">
          <gui_name language="en">INVER</gui_name>
          <description language="en">Invalid exception return flag</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_INVIS" name="INVIS">
          <gui_name language="en">INVIS</gui_name>
          <description language="en">Invalid integrity signature flag</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SFSR_INVEP" name="INVEP">
          <gui_name language="en">INVEP</gui_name>
          <description language="en">Invalid entry point</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </peripheral>

    <xi:include href="Registers/System/V8-M_FPE_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_CM_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_ICB_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_DCB_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_DIB_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_SCB_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_NVIC_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_MPU_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_SIG_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_SYST_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/V8-M_SAU_mm.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
  </cr:register_list>

</core_definition>
