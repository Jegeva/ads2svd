<core_definition xmlns="http://www.arm.com/core_definition" xmlns:cr="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" architecture="ARMv8R" xsi:schemaLocation="http://www.arm.com/core_definition ../Schemas/core_definition.xsd">
  <name>Cortex-R52</name>
  <internal_name>Cortex-R52</internal_name>
  <series>R</series>
  <cr:register_list filter="AARCH32" name="Core" display_by_default="true">

    <register xmlns="http://www.arm.com/core_reg" name="R0" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R0</gui_name>
      <description language="en">R0</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R1" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R1</gui_name>
      <description language="en">R1</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R2" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R2</gui_name>
      <description language="en">R2</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R3" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R3</gui_name>
      <description language="en">R3</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R4" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R4</gui_name>
      <description language="en">R4</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R5" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R5</gui_name>
      <description language="en">R5</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R6" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R6</gui_name>
      <description language="en">R6</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R7" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R7</gui_name>
      <description language="en">R7</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R8" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R8</gui_name>
      <description language="en">R8</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R9" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R9</gui_name>
      <description language="en">R9</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R10" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R10</gui_name>
      <description language="en">R10</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R11" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R11</gui_name>
      <description language="en">R11</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R12" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">R12</gui_name>
      <description language="en">R12</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R13" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">SP</gui_name>
      <device_name type="alternative">SP</device_name>
      <description language="en">Stack Pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R14" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">LR</gui_name>
      <device_name type="alternative">LR</device_name>
      <description language="en">Link Register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R15" size="4" access="RW" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">PC</gui_name>
      <device_name type="alternative">PC</device_name>
      <description language="en">Program Counter</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cpsr.html" name="CPSR" size="4" xml:base="Registers/V8R_AARCH32_Core.xml">
      <gui_name language="en">Current Processor State Register</gui_name>
      <description language="en">Holds the current processor state.</description>

      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative/Less than flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry or Borrow or Extend flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">Q</gui_name>
        <description language="en">Saturation flag</description>
        <definition>[27]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">IT</gui_name>
        <description language="en">If-Then execution state</description>
        <definition>[15:10][26:25]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IL" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution State bit.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for SIMD instructions</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">E</gui_name>
        <description language="en">Data endianness</description>
        <definition>[9]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">A</gui_name>
        <description language="en">Asynchronous abort disable</description>
        <definition>[8]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ disable</description>
        <definition>[7]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ disable</description>
        <definition>[6]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">T</gui_name>
        <description language="en">Thumb state</description>
        <definition>[5]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_M_V8R" xml:base="CPSR/psrfields_V8R.xml">
        <gui_name language="en">M</gui_name>
        <description language="en">Mode</description>
        <definition>[4:0]</definition>
      </bitField>

    </register>


    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="IRQ" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">IRQ</gui_name>
      <description language="en">Banked Core Registers In IRQ mode</description>
      <register name="R13_IRQ" size="4" access="RW">
        <gui_name language="en">SP_IRQ</gui_name>
        <device_name type="alternative">SP_IRQ</device_name>
        <description language="en">Stack Pointer in IRQ mode</description>
      </register>
      <register name="R14_IRQ" size="4" access="RW">
        <gui_name language="en">LR_IRQ</gui_name>
        <device_name type="alternative">LR_IRQ</device_name>
        <description language="en">Link Register in IRQ mode</description>
      </register>
      <register name="SPSR_IRQ" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_irq.html" size="4" access="RW">
        <gui_name language="en">SPSR_IRQ</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="FIQ" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">FIQ</gui_name>
      <description language="en">Banked Core Registers In FIQ mode</description>
      <register name="R8_FIQ" size="4" access="RW">
        <gui_name language="en">R8_FIQ</gui_name>
        <description language="en">R8 in FIQ mode</description>
      </register>
      <register name="R9_FIQ" size="4" access="RW">
        <gui_name language="en">R9_FIQ</gui_name>
        <description language="en">R9 in FIQ mode</description>
      </register>
      <register name="R10_FIQ" size="4" access="RW">
        <gui_name language="en">R10_FIQ</gui_name>
        <description language="en">R10 in FIQ mode</description>
      </register>
      <register name="R11_FIQ" size="4" access="RW">
        <gui_name language="en">R11_FIQ</gui_name>
        <description language="en">R11 in FIQ mode</description>
      </register>
      <register name="R12_FIQ" size="4" access="RW">
        <gui_name language="en">R12_FIQ</gui_name>
        <description language="en">R12 in FIQ mode</description>
      </register>
      <register name="R13_FIQ" size="4" access="RW">
        <gui_name language="en">SP_FIQ</gui_name>
        <device_name type="alternative">SP_FIQ</device_name>
        <description language="en">Stack Pointer in FIQ mode</description>
      </register>
      <register name="R14_FIQ" size="4" access="RW">
        <gui_name language="en">LR_FIQ</gui_name>
        <device_name type="alternative">LR_FIQ</device_name>
        <description language="en">Link Register in FIQ mode</description>
      </register>
      <register name="SPSR_FIQ" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_fiq.html" size="4" access="RW">
        <gui_name language="en">SPSR_FIQ</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="UND" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">UND</gui_name>
      <description language="en">Banked Core Registers In UND mode</description>
      <register name="R13_UND" size="4" access="RW">
        <gui_name language="en">SP_UND</gui_name>
        <device_name type="alternative">SP_UND</device_name>
        <description language="en">Stack Pointer in UND mode</description>
      </register>
      <register name="R14_UND" size="4" access="RW">
        <gui_name language="en">LR_UND</gui_name>
        <device_name type="alternative">LR_UND</device_name>
        <description language="en">Link Register in UND mode</description>
      </register>
      <register name="SPSR_UND" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_und.html" size="4" access="RW">
        <gui_name language="en">SPSR_UND</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="ABT" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">ABT</gui_name>
      <description language="en">Banked Core Registers In ABT mode</description>
      <register name="R13_ABT" size="4" access="RW">
        <gui_name language="en">SP_ABT</gui_name>
        <device_name type="alternative">SP_ABT</device_name>
        <description language="en">Stack Pointer in ABT mode</description>
      </register>
      <register name="R14_ABT" size="4" access="RW">
        <gui_name language="en">LR_ABT</gui_name>
        <device_name type="alternative">LR_ABT</device_name>
        <description language="en">Link Register in ABT mode</description>
      </register>
      <register name="SPSR_ABT" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_abt.html" size="4" access="RW">
        <gui_name language="en">SPSR_ABT</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="SVC" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">SVC</gui_name>
      <description language="en">Banked Core Registers In SVC mode</description>
      <register name="R13_SVC" size="4" access="RW">
        <gui_name language="en">SP_SVC</gui_name>
        <device_name type="alternative">SP_SVC</device_name>
        <description language="en">Stack Pointer in SVC mode</description>
      </register>
      <register name="R14_SVC" size="4" access="RW">
        <gui_name language="en">LR_SVC</gui_name>
        <device_name type="alternative">LR_SVC</device_name>
        <description language="en">Link Register in SVC mode</description>
      </register>
      <register name="SPSR_SVC" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_svc.html" size="4" access="RW">
        <gui_name language="en">SPSR_SVC</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="MON" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">MON</gui_name>
      <description language="en">Banked Core Registers In MON mode</description>
      <register name="R13_MON" size="4" access="RW">
        <gui_name language="en">SP_MON</gui_name>
        <device_name type="alternative">SP_MON</device_name>
        <description language="en">Stack Pointer in MON mode</description>
      </register>
      <register name="R14_MON" size="4" access="RW">
        <gui_name language="en">LR_MON</gui_name>
        <device_name type="alternative">LR_MON</device_name>
        <description language="en">Link Register in MON mode</description>
      </register>
      <register name="SPSR_MON" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_mon.html" size="4" access="RW">
        <gui_name language="en">SPSR_MON</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="HYP" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">HYP</gui_name>
      <description language="en">Banked Core Registers In HYP mode</description>
      <register name="SPSR_HYP" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_hyp.html" size="4" access="RW">
        <gui_name language="en">SPSR_HYP</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
      <register name="R13_HYP" size="4" access="RW">
        <gui_name language="en">SP_HYP</gui_name>
        <device_name type="alternative">SP_HYP</device_name>
        <description language="en">Stack Pointer in HYP mode</description>
      </register>
      <register name="ELR_HYP" size="4" access="RW">
        <gui_name language="en">ELR_HYP</gui_name>
        <description language="en">Exception Link Register</description>
      </register>
    </register_group>


    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8" values="AArch64_EL0t=0x0,AArch64_EL1t=0x04,AArch64_EL1h=0x05,AArch64_EL2t=0x08,AArch64_EL2h=0x09,AArch64_EL3t=0x0C,AArch64_EL3h=0x0D,AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_MON=0x16,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8R" values="AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>

  </cr:register_list>
  <cr:register_list filter="AARCH32" name="SIMD">

    <register_group xmlns="http://www.arm.com/core_reg" name="Quad" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Quad</gui_name>
      <description language="en">128-bit registers</description>
      <register access="RW" name="Q0" size="16">
        <gui_name language="en">Q0</gui_name>
        <description language="en">Q0</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q1" size="16">
        <gui_name language="en">Q1</gui_name>
        <description language="en">Q1</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q2" size="16">
        <gui_name language="en">Q2</gui_name>
        <description language="en">Q2</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q3" size="16">
        <gui_name language="en">Q3</gui_name>
        <description language="en">Q3</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q4" size="16">
        <gui_name language="en">Q4</gui_name>
        <description language="en">Q4</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q5" size="16">
        <gui_name language="en">Q5</gui_name>
        <description language="en">Q5</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q6" size="16">
        <gui_name language="en">Q6</gui_name>
        <description language="en">Q6</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q7" size="16">
        <gui_name language="en">Q7</gui_name>
        <description language="en">Q7</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q8" size="16">
        <gui_name language="en">Q8</gui_name>
        <description language="en">Q8</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q9" size="16">
        <gui_name language="en">Q9</gui_name>
        <description language="en">Q9</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q10" size="16">
        <gui_name language="en">Q10</gui_name>
        <description language="en">Q10</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q11" size="16">
        <gui_name language="en">Q11</gui_name>
        <description language="en">Q11</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q12" size="16">
        <gui_name language="en">Q12</gui_name>
        <description language="en">Q12</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q13" size="16">
        <gui_name language="en">Q13</gui_name>
        <description language="en">Q13</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q14" size="16">
        <gui_name language="en">Q14</gui_name>
        <description language="en">Q14</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q15" size="16">
        <gui_name language="en">Q15</gui_name>
        <description language="en">Q15</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Double" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Double</gui_name>
      <description language="en">64-bit registers</description>
      <register access="RW" format="Float" name="D0" size="8">
        <gui_name language="en">D0</gui_name>
        <description language="en">D0</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D1" size="8">
        <gui_name language="en">D1</gui_name>
        <description language="en">D1</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D2" size="8">
        <gui_name language="en">D2</gui_name>
        <description language="en">D2</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D3" size="8">
        <gui_name language="en">D3</gui_name>
        <description language="en">D3</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D4" size="8">
        <gui_name language="en">D4</gui_name>
        <description language="en">D4</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D5" size="8">
        <gui_name language="en">D5</gui_name>
        <description language="en">D5</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D6" size="8">
        <gui_name language="en">D6</gui_name>
        <description language="en">D6</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D7" size="8">
        <gui_name language="en">D7</gui_name>
        <description language="en">D7</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D8" size="8">
        <gui_name language="en">D8</gui_name>
        <description language="en">D8</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D9" size="8">
        <gui_name language="en">D9</gui_name>
        <description language="en">D9</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D10" size="8">
        <gui_name language="en">D10</gui_name>
        <description language="en">D10</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D11" size="8">
        <gui_name language="en">D11</gui_name>
        <description language="en">D11</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D12" size="8">
        <gui_name language="en">D12</gui_name>
        <description language="en">D12</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D13" size="8">
        <gui_name language="en">D13</gui_name>
        <description language="en">D13</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D14" size="8">
        <gui_name language="en">D14</gui_name>
        <description language="en">D14</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D15" size="8">
        <gui_name language="en">D15</gui_name>
        <description language="en">D15</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D16" size="8">
        <gui_name language="en">D16</gui_name>
        <description language="en">D16</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D17" size="8">
        <gui_name language="en">D17</gui_name>
        <description language="en">D17</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D18" size="8">
        <gui_name language="en">D18</gui_name>
        <description language="en">D18</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D19" size="8">
        <gui_name language="en">D19</gui_name>
        <description language="en">D19</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D20" size="8">
        <gui_name language="en">D20</gui_name>
        <description language="en">D20</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D21" size="8">
        <gui_name language="en">D21</gui_name>
        <description language="en">D21</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D22" size="8">
        <gui_name language="en">D22</gui_name>
        <description language="en">D22</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D23" size="8">
        <gui_name language="en">D23</gui_name>
        <description language="en">D23</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D24" size="8">
        <gui_name language="en">D24</gui_name>
        <description language="en">D24</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D25" size="8">
        <gui_name language="en">D25</gui_name>
        <description language="en">D25</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D26" size="8">
        <gui_name language="en">D26</gui_name>
        <description language="en">D26</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D27" size="8">
        <gui_name language="en">D27</gui_name>
        <description language="en">D27</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D28" size="8">
        <gui_name language="en">D28</gui_name>
        <description language="en">D28</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D29" size="8">
        <gui_name language="en">D29</gui_name>
        <description language="en">D29</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D30" size="8">
        <gui_name language="en">D30</gui_name>
        <description language="en">D30</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q15" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D31" size="8">
        <gui_name language="en">D31</gui_name>
        <description language="en">D31</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q15" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Single" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Single</gui_name>
      <description language="en">32-bit registers</description>
      <register access="RW" format="Float" name="S0" size="4">
        <gui_name language="en">S0</gui_name>
        <description language="en">S0</description>
        <device_register high_bit="31" low_bit="0" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S1" size="4">
        <gui_name language="en">S1</gui_name>
        <description language="en">S1</description>
        <device_register high_bit="63" low_bit="32" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S2" size="4">
        <gui_name language="en">S2</gui_name>
        <description language="en">S2</description>
        <device_register high_bit="95" low_bit="64" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S3" size="4">
        <gui_name language="en">S3</gui_name>
        <description language="en">S3</description>
        <device_register high_bit="127" low_bit="96" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S4" size="4">
        <gui_name language="en">S4</gui_name>
        <description language="en">S4</description>
        <device_register high_bit="31" low_bit="0" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S5" size="4">
        <gui_name language="en">S5</gui_name>
        <description language="en">S5</description>
        <device_register high_bit="63" low_bit="32" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S6" size="4">
        <gui_name language="en">S6</gui_name>
        <description language="en">S6</description>
        <device_register high_bit="95" low_bit="64" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S7" size="4">
        <gui_name language="en">S7</gui_name>
        <description language="en">S7</description>
        <device_register high_bit="127" low_bit="96" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S8" size="4">
        <gui_name language="en">S8</gui_name>
        <description language="en">S8</description>
        <device_register high_bit="31" low_bit="0" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S9" size="4">
        <gui_name language="en">S9</gui_name>
        <description language="en">S9</description>
        <device_register high_bit="63" low_bit="32" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S10" size="4">
        <gui_name language="en">S10</gui_name>
        <description language="en">S10</description>
        <device_register high_bit="95" low_bit="64" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S11" size="4">
        <gui_name language="en">S11</gui_name>
        <description language="en">S11</description>
        <device_register high_bit="127" low_bit="96" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S12" size="4">
        <gui_name language="en">S12</gui_name>
        <description language="en">S12</description>
        <device_register high_bit="31" low_bit="0" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S13" size="4">
        <gui_name language="en">S13</gui_name>
        <description language="en">S13</description>
        <device_register high_bit="63" low_bit="32" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S14" size="4">
        <gui_name language="en">S14</gui_name>
        <description language="en">S14</description>
        <device_register high_bit="95" low_bit="64" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S15" size="4">
        <gui_name language="en">S15</gui_name>
        <description language="en">S15</description>
        <device_register high_bit="127" low_bit="96" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S16" size="4">
        <gui_name language="en">S16</gui_name>
        <description language="en">S16</description>
        <device_register high_bit="31" low_bit="0" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S17" size="4">
        <gui_name language="en">S17</gui_name>
        <description language="en">S17</description>
        <device_register high_bit="63" low_bit="32" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S18" size="4">
        <gui_name language="en">S18</gui_name>
        <description language="en">S18</description>
        <device_register high_bit="95" low_bit="64" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S19" size="4">
        <gui_name language="en">S19</gui_name>
        <description language="en">S19</description>
        <device_register high_bit="127" low_bit="96" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S20" size="4">
        <gui_name language="en">S20</gui_name>
        <description language="en">S20</description>
        <device_register high_bit="31" low_bit="0" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S21" size="4">
        <gui_name language="en">S21</gui_name>
        <description language="en">S21</description>
        <device_register high_bit="63" low_bit="32" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S22" size="4">
        <gui_name language="en">S22</gui_name>
        <description language="en">S22</description>
        <device_register high_bit="95" low_bit="64" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S23" size="4">
        <gui_name language="en">S23</gui_name>
        <description language="en">S23</description>
        <device_register high_bit="127" low_bit="96" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S24" size="4">
        <gui_name language="en">S24</gui_name>
        <description language="en">S24</description>
        <device_register high_bit="31" low_bit="0" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S25" size="4">
        <gui_name language="en">S25</gui_name>
        <description language="en">S25</description>
        <device_register high_bit="63" low_bit="32" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S26" size="4">
        <gui_name language="en">S26</gui_name>
        <description language="en">S26</description>
        <device_register high_bit="95" low_bit="64" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S27" size="4">
        <gui_name language="en">S27</gui_name>
        <description language="en">S27</description>
        <device_register high_bit="127" low_bit="96" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S28" size="4">
        <gui_name language="en">S28</gui_name>
        <description language="en">S28</description>
        <device_register high_bit="31" low_bit="0" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S29" size="4">
        <gui_name language="en">S29</gui_name>
        <description language="en">S29</description>
        <device_register high_bit="63" low_bit="32" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S30" size="4">
        <gui_name language="en">S30</gui_name>
        <description language="en">S30</description>
        <device_register high_bit="95" low_bit="64" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S31" size="4">
        <gui_name language="en">S31</gui_name>
        <description language="en">S31</description>
        <device_register high_bit="127" low_bit="96" name="Q7" shift="0"/>
      </register>
    </register_group>

    <!-- <xi:include href="Registers/SIMD/V8_AARCH32_SIMD.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/> -->
  </cr:register_list>

  <cr:register_list xmlns:cr="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" filter="AARCH32" name="System">

    <register_group xmlns="http://www.arm.com/core_reg" name="Address" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Address.xml">
      <gui_name language="en">Address</gui_name>
      <description language="en">Address</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats12nsopr.html" name="ATS12NSOPR" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only PL1 Read</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL1 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats12nsopw.html" name="ATS12NSOPW" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only PL1 Write</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL1 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats12nsour.html" name="ATS12NSOUR" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only Unprivileged Read</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL0 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats12nsouw.html" name="ATS12NSOUW" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only Unprivileged Write</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL0 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1cpr.html" name="ATS1CPR" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state PL1 Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL1 and the current Security state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1cpw.html" name="ATS1CPW" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state PL1 Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL1 and the current Security state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1cur.html" name="ATS1CUR" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state Unprivileged Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL0 and the current Security state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1cuw.html" name="ATS1CUW" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state Unprivileged Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL0 and the current Security state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1hr.html" name="ATS1HR" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1hw.html" name="ATS1HW" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-par.html" name="PAR" size="4">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField conditional="false" enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-par.html" name="PAR_64" size="8">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField conditional="false" enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Cache" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Cache.xml">
      <gui_name language="en">Cache</gui_name>
      <description language="en">Cache</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-bpiall.html" name="BPIALL" size="4">
        <gui_name language="en">Branch Predictor Invalidate All</gui_name>
        <description language="en">Invalidate all entries from branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-bpiallis.html" name="BPIALLIS" size="4">
        <gui_name language="en">Branch Predictor Invalidate All, Inner Shareable</gui_name>
        <description language="en">Invalidate all entries from branch predictors Inner Shareable.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-bpimva.html" name="BPIMVA" size="4">
        <gui_name language="en">Branch Predictor Invalidate by VA</gui_name>
        <description language="en">Invalidate virtual address from branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dccimvac.html" name="DCCIMVAC" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by VA to PoC</gui_name>
        <description language="en">Clean and Invalidate data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dccisw.html" name="DCCISW" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by Set/Way</gui_name>
        <description language="en">Clean and Invalidate data or unified cache line by set/way.</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dccmvac.html" name="DCCMVAC" size="4">
        <gui_name language="en">Data Cache line Clean by VA to PoC</gui_name>
        <description language="en">Clean data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dccmvau.html" name="DCCMVAU" size="4">
        <gui_name language="en">Data Cache line Clean by VA to PoU</gui_name>
        <description language="en">Clean data or unified cache line by virtual address to PoU.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dccsw.html" name="DCCSW" size="4">
        <gui_name language="en">Data Cache line Clean by Set/Way</gui_name>
        <description language="en">Clean data or unified cache line by set/way.</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dcimvac.html" name="DCIMVAC" size="4">
        <gui_name language="en">Data Cache line Invalidate by VA to PoC</gui_name>
        <description language="en">Invalidate data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dcisw.html" name="DCISW" size="4">
        <gui_name language="en">Data Cache line Invalidate by Set/Way</gui_name>
        <description language="en">Invalidate data or unified cache line by set/way.</description>
        <bitField conditional="false" name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField conditional="false" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-iciallu.html" name="ICIALLU" size="4">
        <gui_name language="en">Instruction Cache Invalidate All to PoU</gui_name>
        <description language="en">Invalidate all instruction caches to PoU. If branch predictors are architecturally visible, also flush branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icialluis.html" name="ICIALLUIS" size="4">
        <gui_name language="en">Instruction Cache Invalidate All to PoU, Inner Shareable</gui_name>
        <description language="en">Invalidate all instruction caches Inner Shareable to PoU. If branch predictors are architecturally visible, also flush branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icimvau.html" name="ICIMVAU" size="4">
        <gui_name language="en">Instruction Cache line Invalidate by VA to PoU</gui_name>
        <description language="en">Invalidate instruction cache line by virtual address to PoU.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Debug" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Debug.xml">
      <gui_name language="en">Debug</gui_name>
      <description language="en">Debug</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgauthstatus.html" name="DBGAUTHSTATUS" size="4">
        <gui_name language="en">Debug Authentication Status register</gui_name>
        <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug.</description>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_HNID" name="HNID">
          <gui_name language="en">HNID</gui_name>
          <description language="en">Hyp non-invasive debug.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_HID" name="HID">
          <gui_name language="en">HID</gui_name>
          <description language="en">Hyp invasive debug.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_SNID" name="SNID">
          <gui_name language="en">SNID</gui_name>
          <description language="en">Secure non-invasive debug.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_SID" name="SID">
          <gui_name language="en">SID</gui_name>
          <description language="en">Secure invasive debug.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_NSNID" name="NSNID">
          <gui_name language="en">NSNID</gui_name>
          <description language="en">Non-secure non-invasive debug.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGAUTHSTATUS_NSID" name="NSID">
          <gui_name language="en">NSID</gui_name>
          <description language="en">Non-secure invasive debug.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR0" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR2" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR3" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR4" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR5" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR6" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR7" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR8" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR9" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR10" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR11" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR12" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR13" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR14" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbcrn.html" name="DBGBCR15" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField conditional="false" enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField conditional="false" name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR0" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR1" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR2" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR3" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR4" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR5" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR6" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR7" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR8" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR9" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR10" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR11" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR12" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR13" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR14" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbvrn.html" name="DBGBVR15" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR0" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR1" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR2" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR3" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR4" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR5" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR6" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR7" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR8" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR9" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR10" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR11" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR12" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR13" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR14" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR15" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgclaimclr.html" name="DBGCLAIMCLR" size="4">
        <gui_name language="en">Debug Claim Tag Clear register</gui_name>
        <description language="en">Used by software to read the values of the CLAIM tag bits, and to clear these bits to 0...</description>
        <bitField conditional="false" name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Read or clear CLAIM tag bits. Reading this field returns the current value of the CLAIM tag bits.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgclaimset.html" name="DBGCLAIMSET" size="4">
        <gui_name language="en">Debug Claim Tag Set register</gui_name>
        <description language="en">Used by software to set the CLAIM tag bits to 1...</description>
        <bitField conditional="false" name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Set CLAIM tag bits. RAO.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdccint.html" name="DBGDCCINT" size="4">
        <gui_name language="en">DCC Interrupt Enable Register</gui_name>
        <description language="en">Enables interrupt requests to be signaled based on the DCC status flags.</description>
        <bitField conditional="false" enumerationId="DBGDCCINT_RX" name="RX">
          <gui_name language="en">RX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRRX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDCCINT_TX" name="TX">
          <gui_name language="en">TX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRTX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[29]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdevid.html" name="DBGDEVID" size="4">
        <gui_name language="en">Debug Device ID register 0</gui_name>
        <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
        <bitField conditional="false" enumerationId="DBGDEVID_CIDMask" name="CIDMask">
          <gui_name language="en">CIDMask</gui_name>
          <description language="en">Indicates the level of support for the Context ID matching breakpoint masking capability.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_AuxRegs" name="AuxRegs">
          <gui_name language="en">AuxRegs</gui_name>
          <description language="en">Indicates support for Auxiliary registers.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_DoubleLock" name="DoubleLock">
          <gui_name language="en">DoubleLock</gui_name>
          <description language="en">Indicates the presence of the DBGOSDLR, OS Double Lock Register.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_VirtExtns" name="VirtExtns">
          <gui_name language="en">VirtExtns</gui_name>
          <description language="en">Indicates whether EL2 is implemented.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_VectorCatch" name="VectorCatch">
          <gui_name language="en">VectorCatch</gui_name>
          <description language="en">Defines the form of Vector Catch exception implemented.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_BPAddrMask" name="BPAddrMask">
          <gui_name language="en">BPAddrMask</gui_name>
          <description language="en">Indicates the level of support for the instruction address matching breakpoint masking capability.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_WPAddrMask" name="WPAddrMask">
          <gui_name language="en">WPAddrMask</gui_name>
          <description language="en">Indicates the level of support for the data address matching watchpoint masking capability.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDEVID_PCSample" name="PCSample">
          <gui_name language="en">PCSample</gui_name>
          <description language="en">Indicates the level of PC Sample-based profiling support using external debug registers 40 through 43.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdevid1.html" name="DBGDEVID1" size="4">
        <gui_name language="en">Debug Device ID register 1</gui_name>
        <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
        <bitField conditional="false" enumerationId="DBGDEVID1_PCSROffset" name="PCSROffset">
          <gui_name language="en">PCSROffset</gui_name>
          <description language="en">This field indicates the offset applied to PC samples returned by reads of EDPCSR.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdevid2.html" name="DBGDEVID2" size="4">
        <gui_name language="en">Debug Device ID register 2</gui_name>
        <description language="en">Reserved for future descriptions of features of the debug implementation.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdidr.html" name="DBGDIDR" size="4">
        <gui_name language="en">Debug ID Register</gui_name>
        <description language="en">Specifies which version of the Debug architecture is implemented, and some features of the debug implementation.</description>
        <bitField conditional="false" name="WRPs">
          <gui_name language="en">WRPs</gui_name>
          <description language="en">The number of watchpoints implemented, minus 1.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" name="BRPs">
          <gui_name language="en">BRPs</gui_name>
          <description language="en">The number of breakpoints implemented, minus 1.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" name="CTX_CMPs">
          <gui_name language="en">CTX_CMPs</gui_name>
          <description language="en">The number of breakpoints that can be used for Context matching, minus 1.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="Version">
          <gui_name language="en">Version</gui_name>
          <description language="en">The Debug architecture version.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="nSUHD_imp">
          <gui_name language="en">nSUHD_imp</gui_name>
          <description language="en">In ARMv7-A, was Secure User Halting Debug not implemented.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDIDR_SE_imp" name="SE_imp">
          <gui_name language="en">SE_imp</gui_name>
          <description language="en">EL3 implemented.</description>
          <definition>[12]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdrar.html" name="DBGDRAR" size="4">
        <gui_name language="en">Debug ROM Address Register</gui_name>
        <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
        <bitField conditional="false" name="ROMADDR_31_12">
          <gui_name language="en">ROMADDR_31_12</gui_name>
          <description language="en">Bits[31:12] of the ROM table physical address. Bits [11:0] of the address are zero.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDRAR_Valid" name="Valid">
          <gui_name language="en">Valid</gui_name>
          <description language="en">This field indicates whether the ROM Table address is valid.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdrar.html" name="DBGDRAR_64" size="8">
        <gui_name language="en">Debug ROM Address Register</gui_name>
        <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
        <bitField conditional="false" name="ROMADDR_47_12">
          <gui_name language="en">ROMADDR_47_12</gui_name>
          <description language="en">Bits[47:12] of the ROM table physical address.</description>
          <definition>[47:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDRAR_Valid" name="Valid">
          <gui_name language="en">Valid</gui_name>
          <description language="en">This field indicates whether the ROM Table address is valid.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdsar.html" name="DBGDSAR" size="4">
        <gui_name language="en">Debug Self Address Register</gui_name>
        <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
        <bitField conditional="false" name="Offset">
          <gui_name language="en">Offset</gui_name>
          <description language="en">This register value is RAZ.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdsar.html" name="DBGDSAR_64" size="8">
        <gui_name language="en">Debug Self Address Register</gui_name>
        <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
        <bitField conditional="false" name="Offset">
          <gui_name language="en">Offset</gui_name>
          <description language="en">This register value is RAZ.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdscrext.html" name="DBGDSCRext" size="4">
        <gui_name language="en">Debug Status and Control Register, External View</gui_name>
        <description language="en">Main control register for the debug implementation.</description>
        <bitField conditional="false" name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">DTRRX full. Used for save/restore of EDSCR.RXfull.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">DTRTX full. Used for save/restore of EDSCR.TXfull.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="RXO">
          <gui_name language="en">RXO</gui_name>
          <description language="en">Used for save/restore of EDSCR.RXO.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="TXU">
          <gui_name language="en">TXU</gui_name>
          <description language="en">Used for save/restore of EDSCR.TXU.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" name="INTdis">
          <gui_name language="en">INTdis</gui_name>
          <description language="en">Used for save/restore of EDSCR.INTdis.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Used for save/restore of EDSCR.TDA.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure status. This bit is RES1.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="SPNIDdis">
          <gui_name language="en">SPNIDdis</gui_name>
          <description language="en">Secure privileged profiling disabled status bit. This bit is RES0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="SPIDdis">
          <gui_name language="en">SPIDdis</gui_name>
          <description language="en">Secure privileged AArch32 invasive self-hosted debug disabled status bit. This bit is RES0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDSCRext_MDBGen" name="MDBGen">
          <gui_name language="en">MDBGen</gui_name>
          <description language="en">Monitor debug events enable. Enable Breakpoint, Watchpoint, and Vector Catch exceptions.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" name="HDE">
          <gui_name language="en">HDE</gui_name>
          <description language="en">Used for save/restore of EDSCR.HDE.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDSCRext_UDCCdis" name="UDCCdis">
          <gui_name language="en">UDCCdis</gui_name>
          <description language="en">Traps EL0 accesses to the DCC registers to Undefined mode.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" name="ERR">
          <gui_name language="en">ERR</gui_name>
          <description language="en">Used for save/restore of EDSCR.ERR.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDSCRext_MOE" name="MOE">
          <gui_name language="en">MOE</gui_name>
          <description language="en">Method of Entry for debug exception.</description>
          <definition>[5:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgdscrint.html" name="DBGDSCRint" size="4">
        <gui_name language="en">Debug Status and Control Register, Internal View</gui_name>
        <description language="en">Main control register for the debug implementation. This is an internal, read-only view.</description>
        <bitField conditional="false" name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">DTRRX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">DTRTX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure status.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" name="SPNIDdis">
          <gui_name language="en">SPNIDdis</gui_name>
          <description language="en">Secure privileged non-invasive debug disable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" name="SPIDdis">
          <gui_name language="en">SPIDdis</gui_name>
          <description language="en">Secure privileged invasive debug disable.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="MDBGen">
          <gui_name language="en">MDBGen</gui_name>
          <description language="en">Monitor debug events enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" name="UDCCdis">
          <gui_name language="en">UDCCdis</gui_name>
          <description language="en">User mode access to Debug Communications Channel disable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGDSCRint_MOE" name="MOE">
          <gui_name language="en">MOE</gui_name>
          <description language="en">Method of Entry for debug exception.</description>
          <definition>[5:2]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgosdlr.html" name="DBGOSDLR" size="4">
        <gui_name language="en">Debug OS Double Lock Register</gui_name>
        <description language="en">Locks out the external debug interface.</description>
        <bitField conditional="false" enumerationId="DBGOSDLR_DLK" name="DLK">
          <gui_name language="en">DLK</gui_name>
          <description language="en">OS Double Lock control bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgoseccr.html" name="DBGOSECCR" size="4">
        <gui_name language="en">Debug OS Lock Exception Catch Control Register</gui_name>
        <description language="en">Provides a mechanism for an operating system to access the contents of EDECCR that are otherwise invisible to software, so it can save/restore the contents of EDECCR over powerdown on behalf of the external debugger.</description>
        <bitField conditional="false" name="EDECCR">
          <gui_name language="en">EDECCR</gui_name>
          <description language="en">Used for save/restore to EDECCR over powerdown.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgoslar.html" name="DBGOSLAR" size="4">
        <gui_name language="en">Debug OS Lock Access Register</gui_name>
        <description language="en">Provides a lock for the debug registers. The OS lock also disables some Software debug events.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgoslsr.html" name="DBGOSLSR" size="4">
        <gui_name language="en">Debug OS Lock Status Register</gui_name>
        <description language="en">Provides status information for the OS lock.</description>
        <bitField conditional="false" name="OSLM_1">
          <gui_name language="en">OSLM_1</gui_name>
          <description language="en">See below for description of the OSLM field.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" name="nTT">
          <gui_name language="en">nTT</gui_name>
          <description language="en">Not 32-bit access. This bit is always RAZ. It indicates that a 32-bit access is needed to write the key to the OS Lock Access Register.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGOSLSR_OSLK" name="OSLK">
          <gui_name language="en">OSLK</gui_name>
          <description language="en">OS Lock Status.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGOSLSR_OSLM_0" name="OSLM_0">
          <gui_name language="en">OSLM_0</gui_name>
          <description language="en">OS lock model implemented. Identifies the form of OS save and restore mechanism implemented.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgprcr.html" name="DBGPRCR" size="4">
        <gui_name language="en">Debug Power Control Register</gui_name>
        <description language="en">Controls behavior of the PE on powerdown request.</description>
        <bitField conditional="false" enumerationId="DBGPRCR_CORENPDRQ" name="CORENPDRQ">
          <gui_name language="en">CORENPDRQ</gui_name>
          <description language="en">Core no powerdown request. Requests emulation of powerdown.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgvcr.html" name="DBGVCR" size="4">
        <gui_name language="en">Debug Vector Catch Register</gui_name>
        <description language="en">Controls Vector Catch debug events.</description>
        <bitField conditional="false" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ vector catch enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ vector catch enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" name="D">
          <gui_name language="en">D</gui_name>
          <description language="en">Data Abort vector catch enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Prefetch Abort vector catch enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Supervisor Call (SVC) vector catch enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Undefined Instruction vector catch enable.</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR0" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR2" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR3" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR4" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR5" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR6" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR7" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR8" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR9" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR10" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR11" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR12" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR13" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR14" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwcrn.html" name="DBGWCR15" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwfar.html" name="DBGWFAR" size="4">
        <gui_name language="en">Debug Watchpoint Fault Address Register</gui_name>
        <description language="en">Previously returned information about the address of the instruction that accessed a watchpointed address. Is now deprecated and RES0.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR0" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR1" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR2" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR3" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR4" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR5" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR6" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR7" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR8" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR9" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR10" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR11" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR12" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR13" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR14" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dbgwvrn.html" name="DBGWVR15" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField conditional="false" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hdcr.html" name="HDCR" size="4">
        <gui_name language="en">Hyp Debug Control Register</gui_name>
        <description language="en">Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</description>
        <bitField conditional="false" enumerationId="HDCR_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface access to Hyp mode Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_HPMD" name="HPMD">
          <gui_name language="en">HPMD</gui_name>
          <description language="en">Hyp Performance Monitors Disable. This control prohibits event counting in Hyp mode by the counters accessible at EL1.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access. Traps EL1 System register accesses to the powerdown debug registers to Hyp mode.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap debug access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hyp Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR accesses. Traps EL0 and EL1 accesses to the PMCR to Hyp mode.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from EL1 modes, and from EL0 modes if unprivileged access is enabled.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Exception" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Exception.xml">
      <gui_name language="en">Exception</gui_name>
      <description language="en">Exception</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-adfsr.html" name="ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-aifsr.html" name="AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dfar.html" name="DFAR" size="4">
        <gui_name language="en">Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-dfsr.html" name="DFSR" size="4">
        <gui_name language="en">Data Fault Status Register</gui_name>
        <description language="en">Holds status information about the last data fault.</description>
        <bitField conditional="false" enumerationId="DFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_CM" name="CM">
          <gui_name language="en">CM</gui_name>
          <description language="en">Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_WnR" name="WnR">
          <gui_name language="en">WnR</gui_name>
          <description language="en">Write not Read bit. Indicates whether the abort was caused by a write or a read instruction.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">Reserved, RES1.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="DFSR_STATUS" name="STATUS">
          <gui_name language="en">STATUS</gui_name>
          <description language="en">Fault status bits.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hadfsr.html" name="HADFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Data Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-haifsr.html" name="HAIFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Prefetch Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hdfar.html" name="HDFAR" size="4">
        <gui_name language="en">Hyp Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hifar.html" name="HIFAR" size="4">
        <gui_name language="en">Hyp Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hpfar.html" name="HPFAR" size="4">
        <gui_name language="en">Hyp IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to Hyp mode.</description>
        <bitField conditional="false" name="FIPA_39_12">
          <gui_name language="en">FIPA_39_12</gui_name>
          <description language="en">Bits [39:12] of the faulting intermediate physical address.</description>
          <definition>[31:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hsr.html" name="HSR" size="4">
        <gui_name language="en">Hyp Syndrome Register</gui_name>
        <description language="en">Holds syndrome information for an exception taken to Hyp mode.</description>
        <bitField conditional="false" enumerationId="HSR_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSR_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction length bit. Indicates the size of the instruction that has been trapped to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="ISS">
          <gui_name language="en">ISS</gui_name>
          <description language="en">Instruction Specific Syndrome. Architecturally, this field can be defined independently for each defined Exception class. However, in practice, some ISS encodings are used for more than one Exception class.</description>
          <definition>[24:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hvbar.html" name="HVBAR" size="4">
        <gui_name language="en">Hyp Vector Base Address Register</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ifar.html" name="IFAR" size="4">
        <gui_name language="en">Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ifsr.html" name="IFSR" size="4">
        <gui_name language="en">Instruction Fault Status Register</gui_name>
        <description language="en">Holds status information about the last instruction fault.</description>
        <bitField conditional="false" enumerationId="IFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">Reserved, RES1.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="IFSR_STATUS" name="STATUS">
          <gui_name language="en">STATUS</gui_name>
          <description language="en">Fault status bits.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-isr.html" name="ISR" size="4">
        <gui_name language="en">Interrupt Status Register</gui_name>
        <description language="en">Shows whether any IRQ, FIQ, or external abort is pending. In an implementation that includes EL2, when the register is accessed from Non-secure EL1, a pending interrupt might be a physical interrupt or a virtual interrupt, and the architecture does not provide any mechanism that software executing at Non-secure EL1 can use to determine whether a pending interrupt is physical or virtual. For all other accesses, any indicated interrupt must be a physical interrupt.</description>
        <bitField conditional="false" enumerationId="ISR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous external abort pending bit:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ISR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ pending bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ISR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ pending bit. Indicates whether an FIQ interrupt is pending.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vbar.html" name="VBAR" size="4">
        <gui_name language="en">Vector Base Address Register</gui_name>
        <description language="en">When high exception vectors are not selected, holds the vector base address for exceptions that are not taken to Monitor mode or to Hyp mode...</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Float" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Float.xml">
      <gui_name language="en">Float</gui_name>
      <description language="en">Float</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fpexc.html" name="FPEXC" size="4">
        <gui_name language="en">Floating-Point Exception Control register</gui_name>
        <description language="en">Provides a global enable for the implemented Advanced SIMD and floating-point functionality, and reports floating-point status information.</description>
        <bitField conditional="false" name="EX">
          <gui_name language="en">EX</gui_name>
          <description language="en">Exception bit. In ARMv8, this bit is RAZ/WI.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enables access to the Advanced SIMD and floating-point functionality from all Exception levels, except that setting this field to 0 does not disable the following:</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_DEX" name="DEX">
          <gui_name language="en">DEX</gui_name>
          <description language="en">Defined synchronous exception on floating-point execution.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="FP2V">
          <gui_name language="en">FP2V</gui_name>
          <description language="en">FPINST2 instruction valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="VV">
          <gui_name language="en">VV</gui_name>
          <description language="en">VECITR valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_TFV" name="TFV">
          <gui_name language="en">TFV</gui_name>
          <description language="en">Trapped Fault Valid bit. Valid only when the value of FPEXC.DEX is 1. When valid, it indicates the cause of the exception and therefore whether the FPEXC.{IDF, IXF, UFF, OFF, DZF, IOF} bits are valid.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" name="VECITR">
          <gui_name language="en">VECITR</gui_name>
          <description language="en">Vector iteration count. In ARMv8, this field is RES1.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_IDF" name="IDF">
          <gui_name language="en">IDF</gui_name>
          <description language="en">Input Denormal trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Input Denormal exception occurred while FPSCR.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_IXF" name="IXF">
          <gui_name language="en">IXF</gui_name>
          <description language="en">Inexact trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Inexact exception occurred while FPSCR.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_UFF" name="UFF">
          <gui_name language="en">UFF</gui_name>
          <description language="en">Underflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Underflow exception occurred while FPSCR.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_OFF" name="OFF">
          <gui_name language="en">OFF</gui_name>
          <description language="en">Overflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Overflow exception occurred while FPSCR.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_DZF" name="DZF">
          <gui_name language="en">DZF</gui_name>
          <description language="en">Divide-by-zero trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether a Divide-by-zero exception occurred while FPSCR.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPEXC_IOF" name="IOF">
          <gui_name language="en">IOF</gui_name>
          <description language="en">Invalid Operation trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Invalid Operation exception occurred while FPSCR.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fpscr.html" name="FPSCR" size="4">
        <gui_name language="en">Floating-Point Status and Control Register</gui_name>
        <description language="en">Provides floating-point system status information and control.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField conditional="false" name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Division by Zero exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative exception bit. This bit is set to 1 to indicate that the Input Denormal exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative exception bit. This bit is set to 1 to indicate that the Inexact exception has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative exception bit. This bit is set to 1 to indicate that the Underflow exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative exception bit. This bit is set to 1 to indicate that the Overflow exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Division by Zero cumulative exception bit. This bit is set to 1 to indicate that the Division by Zero exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative exception bit. This bit is set to 1 to indicate that the Invalid Operation exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fpsid.html" name="FPSID" size="4">
        <gui_name language="en">Floating-Point System ID register</gui_name>
        <description language="en">Provides top-level information about the floating-point implementation...</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer codes are the same as those used for the MIDR.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSID_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software bit.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSID_Subarchitecture" name="Subarchitecture">
          <gui_name language="en">Subarchitecture</gui_name>
          <description language="en">Subarchitecture version number.</description>
          <definition>[22:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED part number for the floating-point implementation, assigned by the implementer.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field distinguishes between different production variants of a single product.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the floating-point implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr0.html" name="MVFR0" size="4">
        <gui_name language="en">Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR0_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr1.html" name="MVFR1" size="4">
        <gui_name language="en">Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr2.html" name="MVFR2" size="4">
        <gui_name language="en">Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR2_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR2_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="GIC" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_GIC.xml">
      <gui_name language="en">GIC</gui_name>
      <description language="en">GIC</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_asgi1r.html" name="ICC_ASGI1R" size="8">
        <gui_name language="en">Interrupt Controller Alias Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the Security state that is not the current Security state.</description>
        <bitField conditional="false" name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_ASGI1R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_bpr0.html" name="ICC_BPR0" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption.</description>
        <bitField conditional="false" name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_bpr1.html" name="ICC_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField conditional="false" name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_ctlr.html" name="ICC_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField conditional="false" enumerationId="ICC_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField conditional="false" name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_CTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_dir.html" name="ICC_DIR" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_eoir0.html" name="ICC_EOIR0" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 0 interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR0 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_eoir1.html" name="ICC_EOIR1" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 1 interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_hppir0.html" name="ICC_HPPIR0" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending Group 0 interrupt on the CPU interface.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_hppir1.html" name="ICC_HPPIR1" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending Group 1 interrupt on the CPU interface.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_hsre.html" name="ICC_HSRE" size="4">
        <gui_name language="en">Interrupt Controller Hyp System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField conditional="false" enumerationId="ICC_HSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_igrpen0.html" name="ICC_IGRPEN0" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether Group 0 interrupts are enabled or not.</description>
        <bitField conditional="false" enumerationId="ICC_IGRPEN0_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_igrpen1.html" name="ICC_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField conditional="false" enumerationId="ICC_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_pmr.html" name="ICC_PMR" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides an interrupt priority filter. Only interrupts with a higher priority than the value in this register are signaled to the PE.</description>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the CPU interface. If the priority of an interrupt is higher than the value indicated by this field, the interface signals the interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_rpr.html" name="ICC_RPR" size="4">
        <gui_name language="en">Interrupt Controller Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the CPU interface.</description>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the CPU interface. This is the group priority of the current active interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_sgi0r.html" name="ICC_SGI0R" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 0 Register</gui_name>
        <description language="en">Generates Secure Group 0 SGIs.</description>
        <bitField conditional="false" name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_SGI0R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_sgi1r.html" name="ICC_SGI1R" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the current Security state.</description>
        <bitField conditional="false" name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_SGI1R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_sre.html" name="ICC_SRE" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL0 and EL1.</description>
        <bitField conditional="false" enumerationId="ICC_SRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_SRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_SRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_eisr.html" name="ICH_EISR" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_elrsr.html" name="ICH_ELRSR" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">Indicates which List registers contain valid interrupts.</description>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_hcr.html" name="ICH_HCR" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField conditional="false" name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR and ICV_DIR.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_misr.html" name="ICH_MISR" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_vmcr.html" name="ICH_VMCR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField conditional="false" name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField conditional="false" name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_vtr.html" name="ICH_VTR" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField conditional="false" name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField conditional="false" name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_bpr0.html" name="ICV_BPR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 0 interrupt preemption.</description>
        <bitField conditional="false" name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_bpr1.html" name="ICV_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 1 interrupt preemption.</description>
        <bitField conditional="false" name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for virtual Group 0 and virtual Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_ctlr.html" name="ICV_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC virtual CPU interface and provides information about the features implemented.</description>
        <bitField conditional="false" enumerationId="ICV_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICV_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICV_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField conditional="false" name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICV_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICV_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_dir.html" name="ICV_DIR" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Virtual Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified virtual interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the virtual interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_eoir0.html" name="ICV_EOIR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 0 interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR0 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_eoir1.html" name="ICV_EOIR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 1 interrupt.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_hppir0.html" name="ICV_HPPIR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 0 interrupt on the virtual CPU interface.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_hppir1.html" name="ICV_HPPIR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 1 interrupt on the virtual CPU interface.</description>
        <bitField conditional="false" name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_igrpen0.html" name="ICV_IGRPEN0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 0 interrupts are enabled or not.</description>
        <bitField conditional="false" enumerationId="ICV_IGRPEN0_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_igrpen1.html" name="ICV_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 1 interrupts are enabled for the current Security state.</description>
        <bitField conditional="false" enumerationId="ICV_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 1 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_pmr.html" name="ICV_PMR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides a virtual interrupt priority filter. Only virtual interrupts with a higher priority than the value in this register are signaled to the PE.</description>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the virtual CPU interface. If the priority of a virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icv_rpr.html" name="ICV_RPR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the virtual CPU interface.</description>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the virtual CPU interface. This is the group priority of the current active virtual interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="ID" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_ID.xml">
      <gui_name language="en">ID</gui_name>
      <description language="en">ID</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-aidr.html" name="AIDR" size="4">
        <gui_name language="en">Auxiliary ID Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED identification information.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ccsidr.html" name="CCSIDR" size="4">
        <gui_name language="en">Current Cache Size ID Register</gui_name>
        <description language="en">Provides information about the architecture of the currently selected cache.</description>
        <bitField conditional="false" enumerationId="CCSIDR_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Indicates whether the selected cache level supports write-through.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WB" name="WB">
          <gui_name language="en">WB</gui_name>
          <description language="en">Indicates whether the selected cache level supports write-back.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_RA" name="RA">
          <gui_name language="en">RA</gui_name>
          <description language="en">Indicates whether the selected cache level supports read-allocation.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CCSIDR_WA" name="WA">
          <gui_name language="en">WA</gui_name>
          <description language="en">Indicates whether the selected cache level supports write-allocation.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">(Number of sets in cache) - 1, therefore a value of 0 indicates 1 set in the cache. The number of sets does not have to be a power of 2.</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField conditional="false" name="Associativity">
          <gui_name language="en">Associativity</gui_name>
          <description language="en">(Associativity of cache) - 1, therefore a value of 0 indicates an associativity of 1. The associativity does not have to be a power of 2.</description>
          <definition>[12:3]</definition>
        </bitField>
        <bitField conditional="false" name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">(Log2(Number of bytes in cache line)) - 4.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-clidr.html" name="CLIDR" size="4">
        <gui_name language="en">Cache Level ID Register</gui_name>
        <description language="en">Identifies the type of cache, or caches, that are implemented at each level and can be managed using the architected cache maintenance instructions that operate by set/way, up to a maximum of seven levels. Also identifies the Level of Coherence (LoC) and Level of Unification (LoU) for the cache hierarchy.</description>
        <bitField conditional="false" enumerationId="CLIDR_ICB" name="ICB">
          <gui_name language="en">ICB</gui_name>
          <description language="en">Inner cache boundary. This field indicates the boundary for caching Inner Cacheable memory regions.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" name="LoUU">
          <gui_name language="en">LoUU</gui_name>
          <description language="en">Level of Unification Uniprocessor for the cache hierarchy.</description>
          <definition>[29:27]</definition>
        </bitField>
        <bitField conditional="false" name="LoC">
          <gui_name language="en">LoC</gui_name>
          <description language="en">Level of Coherence for the cache hierarchy.</description>
          <definition>[26:24]</definition>
        </bitField>
        <bitField conditional="false" name="LoUIS">
          <gui_name language="en">LoUIS</gui_name>
          <description language="en">Level of Unification Inner Shareable for the cache hierarchy.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype7">
          <gui_name language="en">Ctype7</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype6">
          <gui_name language="en">Ctype6</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[17:15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype5">
          <gui_name language="en">Ctype5</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[14:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype4">
          <gui_name language="en">Ctype4</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[11:9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype3">
          <gui_name language="en">Ctype3</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[8:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype2">
          <gui_name language="en">Ctype2</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[5:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CLIDR_Ctype_n" name="Ctype1">
          <gui_name language="en">Ctype1</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-csselr.html" name="CSSELR" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache).</description>
        <bitField conditional="false" enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level of required cache.</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not Data bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ctr.html" name="CTR" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches.</description>
        <bitField conditional="false" name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache Writeback Granule. Log2 of the number of words of the maximum size of memory that can be overwritten as a result of the eviction of a cache entry that has had a memory location in it modified.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives Reservation Granule. Log2 of the number of words of the maximum size of the reservation granule that has been implemented for the Load-Exclusive and Store-Exclusive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the data caches and unified caches that are controlled by the PE.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CTR_L1Ip" name="L1Ip">
          <gui_name language="en">L1Ip</gui_name>
          <description language="en">Level 1 instruction cache policy. Indicates the indexing and tagging policy for the L1 instruction cache.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField conditional="false" name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the instruction caches that are controlled by the PE.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fpsid.html" name="FPSID" size="4">
        <gui_name language="en">Floating-Point System ID register</gui_name>
        <description language="en">Provides top-level information about the floating-point implementation...</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer codes are the same as those used for the MIDR.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSID_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software bit.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSID_Subarchitecture" name="Subarchitecture">
          <gui_name language="en">Subarchitecture</gui_name>
          <description language="en">Subarchitecture version number.</description>
          <definition>[22:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED part number for the floating-point implementation, assigned by the implementer.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field distinguishes between different production variants of a single product.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the floating-point implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_afr0.html" name="ID_AFR0" size="4">
        <gui_name language="en">Auxiliary Feature Register 0</gui_name>
        <description language="en">Provides information about the IMPLEMENTATION DEFINED features of the PE in AArch32.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_dfr0.html" name="ID_DFR0" size="4">
        <gui_name language="en">Debug Feature Register 0</gui_name>
        <description language="en">Provides top level information about the debug system in AArch32.</description>
        <bitField conditional="false" name="PerfMon">
          <gui_name language="en">PerfMon</gui_name>
          <description language="en">Performance Monitors. Support for System registers-based ARM Performance Monitors Extension, using registers in the coproc == 1111 encoding space, for A and R profile processors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_DFR0_MProfDbg" name="MProfDbg">
          <gui_name language="en">MProfDbg</gui_name>
          <description language="en">M Profile Debug. Support for memory-mapped debug model for M profile processors.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_DFR0_MMapTrc" name="MMapTrc">
          <gui_name language="en">MMapTrc</gui_name>
          <description language="en">Memory Mapped Trace. Support for memory-mapped trace model.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_DFR0_CopTrc" name="CopTrc">
          <gui_name language="en">CopTrc</gui_name>
          <description language="en">Support for System registers-based trace model, using registers in the coproc == 1110 encoding space.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" name="MMapDbg">
          <gui_name language="en">MMapDbg</gui_name>
          <description language="en">Memory Mapped Debug. Support for v7 memory-mapped debug model, for A and R profile processors.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" name="CopSDbg">
          <gui_name language="en">CopSDbg</gui_name>
          <description language="en">Support for  a System registers-based Secure debug model, using registers in the coproc = 1110 encoding space, for an A profile processor that includes EL3.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" name="CopDbg">
          <gui_name language="en">CopDbg</gui_name>
          <description language="en">Support for System registers-based debug model, using registers in the coproc == 1110 encoding space, for A and R profile processors.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar0.html" name="ID_ISAR0" size="4">
        <gui_name language="en">Instruction Set Attribute Register 0</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR0_Divide" name="Divide">
          <gui_name language="en">Divide</gui_name>
          <description language="en">Indicates the implemented Divide instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_Debug" name="Debug">
          <gui_name language="en">Debug</gui_name>
          <description language="en">Indicates the implemented Debug instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_Coproc" name="Coproc">
          <gui_name language="en">Coproc</gui_name>
          <description language="en">Indicates the implemented System register access instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_CmpBranch" name="CmpBranch">
          <gui_name language="en">CmpBranch</gui_name>
          <description language="en">Indicates the implemented combined Compare and Branch instructions in the T32 instruction set.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_BitField" name="BitField">
          <gui_name language="en">BitField</gui_name>
          <description language="en">Indicates the implemented BitField instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_BitCount" name="BitCount">
          <gui_name language="en">BitCount</gui_name>
          <description language="en">Indicates the implemented Bit Counting instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR0_Swap" name="Swap">
          <gui_name language="en">Swap</gui_name>
          <description language="en">Indicates the implemented Swap instructions in the A32 instruction set.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar1.html" name="ID_ISAR1" size="4">
        <gui_name language="en">Instruction Set Attribute Register 1</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR1_Jazelle" name="Jazelle">
          <gui_name language="en">Jazelle</gui_name>
          <description language="en">Indicates the implemented Jazelle extension instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Interwork" name="Interwork">
          <gui_name language="en">Interwork</gui_name>
          <description language="en">Indicates the implemented Interworking instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Immediate" name="Immediate">
          <gui_name language="en">Immediate</gui_name>
          <description language="en">Indicates the implemented data-processing instructions with long immediates.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_IfThen" name="IfThen">
          <gui_name language="en">IfThen</gui_name>
          <description language="en">Indicates the implemented If-Then instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Extend" name="Extend">
          <gui_name language="en">Extend</gui_name>
          <description language="en">Indicates the implemented Extend instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Except_AR" name="Except_AR">
          <gui_name language="en">Except_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile exception-handling instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Except" name="Except">
          <gui_name language="en">Except</gui_name>
          <description language="en">Indicates the implemented exception-handling instructions in the ARM instruction set.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR1_Endian" name="Endian">
          <gui_name language="en">Endian</gui_name>
          <description language="en">Indicates the implemented Endian instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar2.html" name="ID_ISAR2" size="4">
        <gui_name language="en">Instruction Set Attribute Register 2</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR2_Reversal" name="Reversal">
          <gui_name language="en">Reversal</gui_name>
          <description language="en">Indicates the implemented Reversal instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_PSR_AR" name="PSR_AR">
          <gui_name language="en">PSR_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile instructions to manipulate the PSR.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultU" name="MultU">
          <gui_name language="en">MultU</gui_name>
          <description language="en">Indicates the implemented advanced unsigned Multiply instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultS" name="MultS">
          <gui_name language="en">MultS</gui_name>
          <description language="en">Indicates the implemented advanced signed Multiply instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_Mult" name="Mult">
          <gui_name language="en">Mult</gui_name>
          <description language="en">Indicates the implemented additional Multiply instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MultiAccessInt" name="MultiAccessInt">
          <gui_name language="en">MultiAccessInt</gui_name>
          <description language="en">Indicates the support for interruptible multi-access instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_MemHint" name="MemHint">
          <gui_name language="en">MemHint</gui_name>
          <description language="en">Indicates the implemented Memory Hint instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR2_LoadStore" name="LoadStore">
          <gui_name language="en">LoadStore</gui_name>
          <description language="en">Indicates the implemented additional load/store instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar3.html" name="ID_ISAR3" size="4">
        <gui_name language="en">Instruction Set Attribute Register 3</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR3_T32EE" name="T32EE">
          <gui_name language="en">T32EE</gui_name>
          <description language="en">Indicates the implemented T32EE instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_TrueNOP" name="TrueNOP">
          <gui_name language="en">TrueNOP</gui_name>
          <description language="en">Indicates the implemented true NOP instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_T32Copy" name="T32Copy">
          <gui_name language="en">T32Copy</gui_name>
          <description language="en">Indicates the support for T32 non flag-setting MOV instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_TabBranch" name="TabBranch">
          <gui_name language="en">TabBranch</gui_name>
          <description language="en">Indicates the implemented Table Branch instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SynchPrim" name="SynchPrim">
          <gui_name language="en">SynchPrim</gui_name>
          <description language="en">Used in conjunction with ID_ISAR4.SynchPrim_frac to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SVC" name="SVC">
          <gui_name language="en">SVC</gui_name>
          <description language="en">Indicates the implemented SVC instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_SIMD" name="SIMD">
          <gui_name language="en">SIMD</gui_name>
          <description language="en">Indicates the implemented SIMD instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR3_Saturate" name="Saturate">
          <gui_name language="en">Saturate</gui_name>
          <description language="en">Indicates the implemented Saturate instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar4.html" name="ID_ISAR4" size="4">
        <gui_name language="en">Instruction Set Attribute Register 4</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR4_SWP_frac" name="SWP_frac">
          <gui_name language="en">SWP_frac</gui_name>
          <description language="en">Indicates support for the memory system locking the bus for SWP or SWPB instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_PSR_M" name="PSR_M">
          <gui_name language="en">PSR_M</gui_name>
          <description language="en">Indicates the implemented M profile instructions to modify the PSRs.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_SynchPrim_frac" name="SynchPrim_frac">
          <gui_name language="en">SynchPrim_frac</gui_name>
          <description language="en">Used in conjunction with ID_ISAR3.SynchPrim to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Barrier" name="Barrier">
          <gui_name language="en">Barrier</gui_name>
          <description language="en">Indicates the implemented Barrier instructions in the A32 and T32 instruction sets.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_SMC" name="SMC">
          <gui_name language="en">SMC</gui_name>
          <description language="en">Indicates the implemented SMC instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Writeback" name="Writeback">
          <gui_name language="en">Writeback</gui_name>
          <description language="en">Indicates the support for Writeback addressing modes.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_WithShifts" name="WithShifts">
          <gui_name language="en">WithShifts</gui_name>
          <description language="en">Indicates the support for instructions with shifts.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR4_Unpriv" name="Unpriv">
          <gui_name language="en">Unpriv</gui_name>
          <description language="en">Indicates the implemented unprivileged instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_isar5.html" name="ID_ISAR5" size="4">
        <gui_name language="en">Instruction Set Attribute Register 5</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_ISAR5_CRC32" name="CRC32">
          <gui_name language="en">CRC32</gui_name>
          <description language="en">Indicates whether CRC32 instructions are implemented in AArch32.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR5_SHA2" name="SHA2">
          <gui_name language="en">SHA2</gui_name>
          <description language="en">Indicates whether SHA2 instructions are implemented in AArch32.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR5_SHA1" name="SHA1">
          <gui_name language="en">SHA1</gui_name>
          <description language="en">Indicates whether SHA1 instructions are implemented in AArch32.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR5_AES" name="AES">
          <gui_name language="en">AES</gui_name>
          <description language="en">Indicates whether AES instructions are implemented in AArch32.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_ISAR5_SEVL" name="SEVL">
          <gui_name language="en">SEVL</gui_name>
          <description language="en">Indicates whether the SEVL instruction is implemented in AArch32.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_mmfr0.html" name="ID_MMFR0" size="4">
        <gui_name language="en">Memory Model Feature Register 0</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_MMFR0_InnerShr" name="InnerShr">
          <gui_name language="en">InnerShr</gui_name>
          <description language="en">Innermost Shareability. Indicates the innermost shareability domain implemented.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_FCSE" name="FCSE">
          <gui_name language="en">FCSE</gui_name>
          <description language="en">Indicates whether the implementation includes the FCSE.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_AuxReg" name="AuxReg">
          <gui_name language="en">AuxReg</gui_name>
          <description language="en">Auxiliary Registers. Indicates support for Auxiliary registers.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_TCM" name="TCM">
          <gui_name language="en">TCM</gui_name>
          <description language="en">Indicates support for TCMs and associated DMAs.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_ShareLvl" name="ShareLvl">
          <gui_name language="en">ShareLvl</gui_name>
          <description language="en">Shareability Levels. Indicates the number of shareability levels implemented.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_OuterShr" name="OuterShr">
          <gui_name language="en">OuterShr</gui_name>
          <description language="en">Outermost Shareability. Indicates the outermost shareability domain implemented.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_PMSA" name="PMSA">
          <gui_name language="en">PMSA</gui_name>
          <description language="en">Indicates support for a PMSA.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR0_VMSA" name="VMSA">
          <gui_name language="en">VMSA</gui_name>
          <description language="en">Indicates support for a VMSA.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_mmfr1.html" name="ID_MMFR1" size="4">
        <gui_name language="en">Memory Model Feature Register 1</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_MMFR1_BPred" name="BPred">
          <gui_name language="en">BPred</gui_name>
          <description language="en">Branch Predictor. Indicates branch predictor management requirements.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1TstCln" name="L1TstCln">
          <gui_name language="en">L1TstCln</gui_name>
          <description language="en">Level 1 cache Test and Clean. Indicates the supported Level 1 data cache test and clean operations, for Harvard or unified cache implementations.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1Uni" name="L1Uni">
          <gui_name language="en">L1Uni</gui_name>
          <description language="en">Level 1 Unified cache. Indicates the supported entire Level 1 cache maintenance operations for a unified cache implementation.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1Hvd" name="L1Hvd">
          <gui_name language="en">L1Hvd</gui_name>
          <description language="en">Level 1 Harvard cache. Indicates the supported entire Level 1 cache maintenance operations for a Harvard cache implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1UniSW" name="L1UniSW">
          <gui_name language="en">L1UniSW</gui_name>
          <description language="en">Level 1 Unified cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a unified cache implementation.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1HvdSW" name="L1HvdSW">
          <gui_name language="en">L1HvdSW</gui_name>
          <description language="en">Level 1 Harvard cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1UniVA" name="L1UniVA">
          <gui_name language="en">L1UniVA</gui_name>
          <description language="en">Level 1 Unified cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a unified cache implementation.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR1_L1HvdVA" name="L1HvdVA">
          <gui_name language="en">L1HvdVA</gui_name>
          <description language="en">Level 1 Harvard cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a Harvard cache implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_mmfr2.html" name="ID_MMFR2" size="4">
        <gui_name language="en">Memory Model Feature Register 2</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_MMFR2_HWAccFlg" name="HWAccFlg">
          <gui_name language="en">HWAccFlg</gui_name>
          <description language="en">Hardware Access Flag. In earlier versions of the ARM Architecture, this field indicates support for a Hardware Access flag, as part of the VMSAv7 implementation.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_WFIStall" name="WFIStall">
          <gui_name language="en">WFIStall</gui_name>
          <description language="en">Wait For Interrupt Stall. Indicates the support for Wait For Interrupt (WFI) stalling.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_MemBarr" name="MemBarr">
          <gui_name language="en">MemBarr</gui_name>
          <description language="en">Memory Barrier.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_UniTLB" name="UniTLB">
          <gui_name language="en">UniTLB</gui_name>
          <description language="en">Unified TLB. Indicates the supported TLB maintenance operations, for a unified TLB implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="HvdTLB">
          <gui_name language="en">HvdTLB</gui_name>
          <description language="en">If the Unified TLB field (UniTLB, bits [19:16]) is not 0000, then the meaning of this field is IMPLEMENTATION DEFINED. ARM deprecates the use of this field by software.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_L1HvdRng" name="L1HvdRng">
          <gui_name language="en">L1HvdRng</gui_name>
          <description language="en">Level 1 Harvard cache Range. Indicates the supported Level 1 cache maintenance range operations, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_L1HvdBG" name="L1HvdBG">
          <gui_name language="en">L1HvdBG</gui_name>
          <description language="en">Level 1 Harvard cache Background fetch. Indicates the supported Level 1 cache background fetch operations, for a Harvard cache implementation. When supported, background fetch operations are non-blocking operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR2_L1HvdFG" name="L1HvdFG">
          <gui_name language="en">L1HvdFG</gui_name>
          <description language="en">Level 1 Harvard cache Foreground fetch. Indicates the supported Level 1 cache foreground fetch operations, for a Harvard cache implementation. When supported, foreground fetch operations are blocking operations.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_mmfr3.html" name="ID_MMFR3" size="4">
        <gui_name language="en">Memory Model Feature Register 3</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_MMFR3_Supersec" name="Supersec">
          <gui_name language="en">Supersec</gui_name>
          <description language="en">Supersections. On a VMSA implementation, indicates whether Supersections are supported.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CMemSz" name="CMemSz">
          <gui_name language="en">CMemSz</gui_name>
          <description language="en">Cached Memory Size. Indicates the physical memory size supported by the caches.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CohWalk" name="CohWalk">
          <gui_name language="en">CohWalk</gui_name>
          <description language="en">Coherent Walk. Indicates whether Translation table updates require a clean to the point of unification.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_MaintBcst" name="MaintBcst">
          <gui_name language="en">MaintBcst</gui_name>
          <description language="en">Maintenance Broadcast. Indicates whether Cache, TLB, and branch predictor operations are broadcast.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_BPMaint" name="BPMaint">
          <gui_name language="en">BPMaint</gui_name>
          <description language="en">Branch Predictor Maintenance. Indicates the supported branch predictor maintenance operations in an implementation with hierarchical cache maintenance operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CMaintSW" name="CMaintSW">
          <gui_name language="en">CMaintSW</gui_name>
          <description language="en">Cache Maintenance by Set/Way. Indicates the supported cache maintenance operations by set/way, in an implementation with hierarchical caches.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_MMFR3_CMaintVA" name="CMaintVA">
          <gui_name language="en">CMaintVA</gui_name>
          <description language="en">Cache Maintenance by  Virtual Address. Indicates the supported cache maintenance operations by VA, in an implementation with hierarchical caches.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_mmfr4.html" name="ID_MMFR4" size="4">
        <gui_name language="en">Memory Model Feature Register 4</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_MMFR4_AC2" name="AC2">
          <gui_name language="en">AC2</gui_name>
          <description language="en">Indicates the extension of the ACTLR and HACTLR registers using ACTLR2 and HACTLR2.</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_pfr0.html" name="ID_PFR0" size="4">
        <gui_name language="en">Processor Feature Register 0</gui_name>
        <description language="en">Gives top-level information about the instruction sets supported by the PE in AArch32.</description>
        <bitField conditional="false" enumerationId="ID_PFR0_State3" name="State3">
          <gui_name language="en">State3</gui_name>
          <description language="en">T32EE instruction set support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR0_State2" name="State2">
          <gui_name language="en">State2</gui_name>
          <description language="en">Jazelle extension support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR0_State1" name="State1">
          <gui_name language="en">State1</gui_name>
          <description language="en">T32 instruction set support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR0_State0" name="State0">
          <gui_name language="en">State0</gui_name>
          <description language="en">A32 instruction set support.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-id_pfr1.html" name="ID_PFR1" size="4">
        <gui_name language="en">Processor Feature Register 1</gui_name>
        <description language="en">Gives information about the AArch32 programmers' model.</description>
        <bitField conditional="false" enumerationId="ID_PFR1_GIC" name="GIC">
          <gui_name language="en">GIC</gui_name>
          <description language="en">System register GIC CPU interface.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_Virt_frac" name="Virt_frac">
          <gui_name language="en">Virt_frac</gui_name>
          <description language="en">Virtualization fractional field. When the Virtualization field is 0000, determines the support for features from the ARMv7 Virtualization Extensions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_Sec_frac" name="Sec_frac">
          <gui_name language="en">Sec_frac</gui_name>
          <description language="en">Security fractional field. When the Security field is 0000, determines the support for features from the ARMv7 Security Extensions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_GenTimer" name="GenTimer">
          <gui_name language="en">GenTimer</gui_name>
          <description language="en">Generic Timer support.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_Virtualization" name="Virtualization">
          <gui_name language="en">Virtualization</gui_name>
          <description language="en">Virtualization support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_MProgMod" name="MProgMod">
          <gui_name language="en">MProgMod</gui_name>
          <description language="en">M profile programmers' model support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_Security" name="Security">
          <gui_name language="en">Security</gui_name>
          <description language="en">Security support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ID_PFR1_ProgMod" name="ProgMod">
          <gui_name language="en">ProgMod</gui_name>
          <description language="en">Support for the standard programmers' model for ARMv4 and later. Model must support User, FIQ, IRQ, Supervisor, Abort, Undefined, and System modes.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-midr.html" name="MIDR" size="4">
        <gui_name language="en">Main ID Register</gui_name>
        <description language="en">Provides identification information for the PE, including an implementer code for the device and a device ID number.</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mpidr.html" name="MPIDR" size="4">
        <gui_name language="en">Multiprocessor Affinity Register</gui_name>
        <description language="en">In a multiprocessor system, provides an additional PE identification mechanism for scheduling purposes.</description>
        <bitField conditional="false" enumerationId="MPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr0.html" name="MVFR0" size="4">
        <gui_name language="en">Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR0_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR0_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr1.html" name="MVFR1" size="4">
        <gui_name language="en">Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mvfr2.html" name="MVFR2" size="4">
        <gui_name language="en">Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation.</description>
        <bitField conditional="false" enumerationId="MVFR2_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="MVFR2_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-revidr.html" name="REVIDR" size="4">
        <gui_name language="en">Revision ID Register</gui_name>
        <description language="en">Provides implementation-specific minor revision information.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-tcmtr.html" name="TCMTR" size="4">
        <gui_name language="en">TCM Type Register</gui_name>
        <description language="en">Provides information about the implementation of the TCM.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-tlbtr.html" name="TLBTR" size="4">
        <gui_name language="en">TLB Type Register</gui_name>
        <description language="en">Provides information about the TLB implementation. The register must define whether the implementation provides separate instruction and data TLBs, or a unified TLB. Normally, the IMPLEMENTATION DEFINED information in this register includes the number of lockable entries in the TLB.</description>
        <bitField conditional="false" enumerationId="TLBTR_nU" name="nU">
          <gui_name language="en">nU</gui_name>
          <description language="en">Not Unified TLB.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vmpidr.html" name="VMPIDR" size="4">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR.</description>
        <bitField conditional="false" enumerationId="VMPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VMPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VMPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vpidr.html" name="VPIDR" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR.</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VPIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Legacy" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Legacy.xml">
      <gui_name language="en">Legacy</gui_name>
      <description language="en">Legacy</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cp15dmb.html" name="CP15DMB" size="4">
        <gui_name language="en">Data Memory Barrier System instruction</gui_name>
        <description language="en">Performs a Data Memory Barrier...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cp15dsb.html" name="CP15DSB" size="4">
        <gui_name language="en">Data Synchronization Barrier System instruction</gui_name>
        <description language="en">Performs a Data Synchronization Barrier...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cp15isb.html" name="CP15ISB" size="4">
        <gui_name language="en">Instruction Synchronization Barrier System instruction</gui_name>
        <description language="en">Performs an Instruction Synchronization Barrier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fcseidr.html" name="FCSEIDR" size="4">
        <gui_name language="en">FCSE Process ID register</gui_name>
        <description language="en">Identifies whether the Fast Context Switch Extension (FCSE) is implemented...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-jidr.html" name="JIDR" size="4">
        <gui_name language="en">Jazelle ID Register</gui_name>
        <description language="en">A Jazelle register, which identified the Jazelle architecture version.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-jmcr.html" name="JMCR" size="4">
        <gui_name language="en">Jazelle Main Configuration Register</gui_name>
        <description language="en">A Jazelle register, which provides control of the Jazelle extension.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-joscr.html" name="JOSCR" size="4">
        <gui_name language="en">Jazelle OS Control Register</gui_name>
        <description language="en">A Jazelle register, which provides operating system control of the Jazelle Extension.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Memory" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Memory.xml">
      <gui_name language="en">Memory</gui_name>
      <description language="en">Memory</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-amair0.html" name="AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-amair1.html" name="AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-contextidr.html" name="CONTEXTIDR" size="4">
        <gui_name language="en">Context ID Register</gui_name>
        <description language="en">Identifies the current Process Identifier and, when using the Short-descriptor translation table format, the Address Space Identifier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hamair0.html" name="HAMAIR0" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR0. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hamair1.html" name="HAMAIR1" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR1. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hmair0.html" name="HMAIR0" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with HMAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode.</description>
        <bitField conditional="false" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hmair1.html" name="HMAIR1" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with HMAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode.</description>
        <bitField conditional="false" name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mair0.html" name="MAIR0" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations.</description>
        <bitField conditional="false" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mair1.html" name="MAIR1" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations.</description>
        <bitField conditional="false" name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Other" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Other.xml">
      <gui_name language="en">Other</gui_name>
      <description language="en">Other</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-actlr.html" name="ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-actlr2.html" name="ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cpacr.html" name="CPACR" size="4">
        <gui_name language="en">Architectural Feature Access Control Register</gui_name>
        <description language="en">Controls access to trace, and to Advanced SIMD and floating-point functionality from EL0, EL1, and EL3.</description>
        <bitField conditional="false" enumerationId="CPACR_ASEDIS" name="ASEDIS">
          <gui_name language="en">ASEDIS</gui_name>
          <description language="en">Disables PL0 and PL1 execution of Advanced SIMD instructions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_TRCDIS" name="TRCDIS">
          <gui_name language="en">TRCDIS</gui_name>
          <description language="en">Traps PL0 and PL1 System register accesses to all implemented trace registers to Undefined mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="cp11">
          <gui_name language="en">cp11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the cp10 field then this field is UNKNOWN on a direct read of the CPACR.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CPACR_cp10" name="cp10">
          <gui_name language="en">cp10</gui_name>
          <description language="en">Defines the access rights for the floating-point and Advanced SIMD functionality.</description>
          <definition>[21:20]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hactlr.html" name="HACTLR" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register</gui_name>
        <description language="en">Controls IMPLEMENTATION DEFINED features of Hyp mode operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hactlr2.html" name="HACTLR2" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the HACTLR register to hold IMPLEMENTATION DEFINED trap functionality.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hsctlr.html" name="HSCTLR" size="4">
        <gui_name language="en">Hyp System Control Register</gui_name>
        <description language="en">Provides top level control of the system operation in Hyp mode.</description>
        <bitField conditional="false" enumerationId="HSCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on entry to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_FI" name="FI">
          <gui_name language="en">FI</gui_name>
          <description language="en">Fast Interrupts enable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_BR" name="BR">
          <gui_name language="en">BR</gui_name>
          <description language="en">Background Region enable for EL2.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL2.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL2.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MPU enable for the EL2-controlled MPU.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-sctlr.html" name="SCTLR" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Provides the top level control of the system, including its memory system.</description>
        <bitField conditional="false" enumerationId="SCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on branch to an exception vector or coming out of reset.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="FI">
          <gui_name language="en">FI</gui_name>
          <description language="en">Fast Interrupts enable. This bit is a read-only copy of the HSCTLR.FI bit.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_UWXN" name="UWXN">
          <gui_name language="en">UWXN</gui_name>
          <description language="en">Unprivileged write permission implies EL1 XN (Execute-never). This bit can force all memory regions that are writable at EL0 to be treated as XN for accesses from software executing at EL1.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL1&amp;0 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_nTWE" name="nTWE">
          <gui_name language="en">nTWE</gui_name>
          <description language="en">Traps EL0 execution of WFE instructions to Undefined mode.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_BR" name="BR">
          <gui_name language="en">BR</gui_name>
          <description language="en">Background Region enable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_nTWI" name="nTWI">
          <gui_name language="en">nTWI</gui_name>
          <description language="en">Traps EL0 execution of WFI instructions to Undefined mode.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL1 and EL0:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL0 and EL1.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL1 and EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" name="UNK">
          <gui_name language="en">UNK</gui_name>
          <description language="en">Writes to this bit are IGNORED. Reads of this bit return an UNKNOWN value.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL1 and EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MPU enable for EL1-controlled MPU.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="PMU" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_PMU.xml">
      <gui_name language="en">PMU</gui_name>
      <description language="en">PMU</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmccfiltr.html" name="PMCCFILTR" size="4">
        <gui_name language="en">Performance Monitors Cycle Count Filter Register</gui_name>
        <description language="en">Determines the modes in which the Cycle Counter, PMCCNTR, increments.</description>
        <bitField conditional="false" enumerationId="PMCCFILTR_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCCFILTR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCCFILTR_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmccntr.html" name="PMCCNTR" size="4">
        <gui_name language="en">Performance Monitors Cycle Count Register</gui_name>
        <description language="en">Holds the value of the processor Cycle Counter, CCNT, that counts processor clock cycles. See  for more information.</description>
        <bitField conditional="false" name="CCNT">
          <gui_name language="en">CCNT</gui_name>
          <description language="en">Cycle count. Depending on the values of PMCR.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmccntr.html" name="PMCCNTR_64" size="8">
        <gui_name language="en">Performance Monitors Cycle Count Register</gui_name>
        <description language="en">Holds the value of the processor Cycle Counter, CCNT, that counts processor clock cycles. See  for more information.</description>
        <bitField conditional="false" name="CCNT">
          <gui_name language="en">CCNT</gui_name>
          <description language="en">Cycle count. Depending on the values of PMCR.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmceid0.html" name="PMCEID0" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 0</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x000 to 0x01F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField conditional="false" enumerationId="PMCEID0_ID_31_0" name="ID_31_0">
          <gui_name language="en">ID_31_0</gui_name>
          <description language="en">PMCEID0[n] maps to event n. For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmceid1.html" name="PMCEID1" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 1</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x020 to 0x03F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField conditional="false" enumerationId="PMCEID1_ID_63_32" name="ID_63_32">
          <gui_name language="en">ID_63_32</gui_name>
          <description language="en">PMCEID1[n] maps to event (n + 32). For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmcntenclr.html" name="PMCNTENCLR" size="4">
        <gui_name language="en">Performance Monitors Count Enable Clear register</gui_name>
        <description language="en">Disables the Cycle Count Register, PMCCNTR, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled.</description>
        <bitField conditional="false" enumerationId="PMCNTENCLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR disable bit. Disables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENCLR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmcntenset.html" name="PMCNTENSET" size="4">
        <gui_name language="en">Performance Monitors Count Enable Set register</gui_name>
        <description language="en">Enables the Cycle Count Register, PMCCNTR, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled.</description>
        <bitField conditional="false" enumerationId="PMCNTENSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR enable bit. Enables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCNTENSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmcr.html" name="PMCR" size="4">
        <gui_name language="en">Performance Monitors Control Register</gui_name>
        <description language="en">Provides details of the Performance Monitors implementation, including the number of counters implemented, and configures and controls the counters.</description>
        <bitField conditional="false" name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">Implementer code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="IDCODE">
          <gui_name language="en">IDCODE</gui_name>
          <description language="en">Identification code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Number of event counters. A RO field that indicates the number counters implemented. A value of 0b00000 in this field indicates that only the Cycle Count Register PMCCNTR is implemented.</description>
          <definition>[15:11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_LC" name="LC">
          <gui_name language="en">LC</gui_name>
          <description language="en">Long cycle counter enable. Determines which PMCCNTR bit generates an overflow recorded by PMOVSR[31].</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_DP" name="DP">
          <gui_name language="en">DP</gui_name>
          <description language="en">Disable cycle counter when event counting is prohibited.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_X" name="X">
          <gui_name language="en">X</gui_name>
          <description language="en">Enable export of events in an IMPLEMENTATION DEFINED event stream.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_D" name="D">
          <gui_name language="en">D</gui_name>
          <description language="en">Clock divider.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cycle counter reset. This bit is WO.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Event counter reset. This bit is WO.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMCR_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR1" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR2" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR3" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR4" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR5" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR6" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR7" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR8" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR9" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR10" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR11" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR12" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR13" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR14" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR15" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR16" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR17" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR18" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR19" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR20" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR21" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR22" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR23" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR24" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR25" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR26" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR27" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR28" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR29" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR30" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER1" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER2" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER3" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER4" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER5" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER6" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER7" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER8" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER9" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER10" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER11" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER12" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER13" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER14" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER15" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER16" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER17" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER18" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER19" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER20" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER21" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER22" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER23" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER24" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER25" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER26" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER27" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER28" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER29" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER30" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmintenclr.html" name="PMINTENCLR" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Clear register</gui_name>
        <description language="en">Disables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR, and the event counters PMEVCNTR&lt;n&gt;. Reading the register shows which overflow interrupt requests are enabled.</description>
        <bitField conditional="false" enumerationId="PMINTENCLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow interrupt request disable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENCLR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmintenset.html" name="PMINTENSET" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Set register</gui_name>
        <description language="en">Enables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR, and the event counters PMEVCNTR&lt;n&gt;. Reading the register shows which overflow interrupt requests are enabled.</description>
        <bitField conditional="false" enumerationId="PMINTENSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow interrupt request enable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMINTENSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmovsr.html" name="PMOVSR" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Register</gui_name>
        <description language="en">Contains the state of the overflow bit for the Cycle Count Register, PMCCNTR, and each of the implemented event counters PMEVCNTR&lt;n&gt;. Writing to this register clears these bits.</description>
        <bitField conditional="false" enumerationId="PMOVSR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmovsset.html" name="PMOVSSET" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Set register</gui_name>
        <description language="en">Sets the state of the overflow bit for the Cycle Count Register, PMCCNTR, and each of the implemented event counters PMEVCNTR&lt;n&gt;.</description>
        <bitField conditional="false" enumerationId="PMOVSSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMOVSSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmselr.html" name="PMSELR" size="4">
        <gui_name language="en">Performance Monitors Event Counter Selection Register</gui_name>
        <description language="en">Selects the current event counter PMEVCNTR&lt;n&gt; or the cycle counter, CCNT.</description>
        <bitField conditional="false" name="SEL">
          <gui_name language="en">SEL</gui_name>
          <description language="en">Selects event counter, PMEVCNTR&lt;n&gt;, where n is the value held in this field. This value identifies which event counter is accessed when a subsequent access to PMXEVTYPER or PMXEVCNTR occurs.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmswinc.html" name="PMSWINC" size="4">
        <gui_name language="en">Performance Monitors Software Increment register</gui_name>
        <description language="en">Increments a counter that is configured to count the Software increment event, event 0x00. For more information, see  .</description>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMSWINC_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmuserenr.html" name="PMUSERENR" size="4">
        <gui_name language="en">Performance Monitors User Enable Register</gui_name>
        <description language="en">Enables or disables User mode access to the Performance Monitors.</description>
        <bitField conditional="false" enumerationId="PMUSERENR_ER" name="ER">
          <gui_name language="en">ER</gui_name>
          <description language="en">Event counter read trap control:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMUSERENR_CR" name="CR">
          <gui_name language="en">CR</gui_name>
          <description language="en">Cycle counter read trap control:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMUSERENR_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software increment write trap control:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PMUSERENR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Traps PL0 accesses to the Performance Monitors registers to Undefined mode:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmxevcntr.html" name="PMXEVCNTR" size="4">
        <gui_name language="en">Performance Monitors Selected Event Count Register</gui_name>
        <description language="en">Reads or writes the value of the selected event counter, PMEVCNTR&lt;n&gt;. PMSELR.SEL determines which event counter is selected.</description>
        <bitField conditional="false" name="PMEVCNTR_n">
          <gui_name language="en">PMEVCNTR_n</gui_name>
          <description language="en">Value of the selected event counter, PMEVCNTR&lt;n&gt;, where n is the value stored in PMSELR.SEL.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-pmxevtyper.html" name="PMXEVTYPER" size="4">
        <gui_name language="en">Performance Monitors Selected Event Type Register</gui_name>
        <description language="en">When PMSELR.SEL selects an event counter, this accesses a PMEVTYPER&lt;n&gt; register. When PMSELR.SEL selects the cycle counter, this accesses PMCCFILTR.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="PMSA" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_PMSA.xml">
      <gui_name language="en">PMSA</gui_name>
      <description language="en">PMSA</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hmpuir.html" name="HMPUIR" size="4">
        <gui_name language="en">Hypervisor MPU Type Register</gui_name>
        <description language="en">Identifies the number of regions supported by the EL2-controlled MPU.</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">The number of EL2-controlled MPU regions implemented.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbar.html" name="HPRBAR" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Register</gui_name>
        <description language="en">Provides indirect access to the base address of the EL2-controlled MPU region currently defined by HPRSELR.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR0" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR1" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR2" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR3" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR4" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR5" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR6" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR7" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR8" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR9" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR10" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR11" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR12" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR13" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR14" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR15" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR16" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR17" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR18" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR19" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR20" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR21" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR22" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR23" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR24" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR25" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR26" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR27" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR28" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR29" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR30" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprbarn.html" name="HPRBAR31" size="4">
        <gui_name language="en">Hypervisor Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprenr.html" name="HPRENR" size="4">
        <gui_name language="en">Hypervisor Protection Region Enable Register</gui_name>
        <description language="en">Provides direct access to the HPRLAR.EN bits for EL2-controlled MPU regions 0 to 31.</description>
        <bitField conditional="false" name="ENABLE_bits">
          <gui_name language="en">ENABLE_bits</gui_name>
          <description language="en">An alias of the HPRLAR[31:0].EN bits.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlar.html" name="HPRLAR" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Register</gui_name>
        <description language="en">Provides indirect access to the limit address of the EL2-controlled MPU region currently defined by HPRSELR.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR0" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR1" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR2" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR3" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR4" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR5" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR6" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR7" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR8" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR9" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR10" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR11" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR12" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR13" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR14" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR15" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR16" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR17" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR18" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR19" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR20" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR21" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR22" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR23" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR24" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR25" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR26" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR27" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR28" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR29" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR30" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprlarn.html" name="HPRLAR31" size="4">
        <gui_name language="en">Hypervisor Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL2-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Hyp Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HPRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hprselr.html" name="HPRSELR" size="4">
        <gui_name language="en">Hypervisor Protection Region Selector Register</gui_name>
        <description language="en">Selects the region number for the EL2-controlled MPU region associated with the HPRBAR and HPRLAR registers.</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">The region number, HPRSELR&lt;N:0&gt;, where the value is zero extended if N &lt; 7.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-mpuir.html" name="MPUIR" size="4">
        <gui_name language="en">MPU Type register</gui_name>
        <description language="en">Identifies the number of regions supported by the EL1-controlled MPU...</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">The number of EL1-controlled MPU regions implemented.</description>
          <definition>[15:8]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbar.html" name="PRBAR" size="4">
        <gui_name language="en">Protection Region Base Address Register</gui_name>
        <description language="en">Provides indirect access to the base address of the EL1-controlled MPU region currently defined by PRSELR.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR0" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR1" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR2" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR3" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR4" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR5" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR6" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR7" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR8" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR9" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR10" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR11" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR12" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR13" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR14" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR15" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR16" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR17" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR18" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR19" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR20" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR21" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR22" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR23" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR24" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR25" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR26" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR27" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR28" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR29" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR30" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prbarn.html" name="PRBAR31" size="4">
        <gui_name language="en">Protection Region Base Address Registers</gui_name>
        <description language="en">Provides access to the base addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="BASE">
          <gui_name language="en">BASE</gui_name>
          <description language="en">Address[31:6] concatenated with zeroes to form Address[31:0], the lower inclusive limit used as the base address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_SH_1_0" name="SH_1_0">
          <gui_name language="en">SH_1_0</gui_name>
          <description language="en">Shareability attribute:</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRBAR_n_AP_2_1" name="AP_2_1">
          <gui_name language="en">AP_2_1</gui_name>
          <description language="en">Access permissions attribute:</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField conditional="false" name="XN">
          <gui_name language="en">XN</gui_name>
          <description language="en">Execute never.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlar.html" name="PRLAR" size="4">
        <gui_name language="en">Protection Region Limit Address Register</gui_name>
        <description language="en">Provides indirect access to the limit address of the EL1-controlled MPU region currently defined by PRSELR.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR0" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR1" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR2" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR3" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR4" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR5" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR6" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR7" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR8" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR9" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR10" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR11" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR12" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR13" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR14" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR15" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR16" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR17" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR18" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR19" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR20" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR21" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR22" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR23" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR24" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR25" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR26" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR27" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR28" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR29" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR30" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prlarn.html" name="PRLAR31" size="4">
        <gui_name language="en">Protection Region Limit Address Registers</gui_name>
        <description language="en">Provides access to the limit addresses for the first 32 defined EL1-controlled MPU regions.</description>
        <bitField conditional="false" name="LIMIT">
          <gui_name language="en">LIMIT</gui_name>
          <description language="en">Address[31:6] concatenated with the value 0x3F to form Address[31:0], the upper inclusive limit address for the selected memory region.</description>
          <definition>[31:6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_AttrIndx_2_0" name="AttrIndx_2_0">
          <gui_name language="en">AttrIndx_2_0</gui_name>
          <description language="en">Selects attributes from within the associated Memory Attribute Indirection Register:</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="PRLAR_n_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Region enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-prselr.html" name="PRSELR" size="4">
        <gui_name language="en">Protection Region Selector Register</gui_name>
        <description language="en">Selects the region number for the EL1-controlled MPU region associated with the PRBAR and PRLAR registers.</description>
        <bitField conditional="false" name="REGION">
          <gui_name language="en">REGION</gui_name>
          <description language="en">The region number, PRSELR&lt;N:0&gt;, where the value is zero extended if N &lt; 7.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vsctlr.html" name="VSCTLR" size="4">
        <gui_name language="en">Virtualization System Control register</gui_name>
        <description language="en">Provides control and configuration information for PMSA virtualization.</description>
        <bitField conditional="false" name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">Virtual machine identifier.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VSCTLR_S2NIE" name="S2NIE">
          <gui_name language="en">S2NIE</gui_name>
          <description language="en">Stage 2 Normal Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VSCTLR_S2DMAD" name="S2DMAD">
          <gui_name language="en">S2DMAD</gui_name>
          <description language="en">Stage 2 Device Multiword Access Disable.</description>
          <definition>[1]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Reset" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Reset.xml">
      <gui_name language="en">Reset</gui_name>
      <description language="en">Reset</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hrmr.html" name="HRMR" size="4">
        <gui_name language="en">Hyp Reset Management Register</gui_name>
        <description language="en">When this register is implemented...</description>
        <bitField conditional="false" name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HRMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-rmr.html" name="RMR" size="4">
        <gui_name language="en">Reset Management Register</gui_name>
        <description language="en">When this register is implemented...</description>
        <bitField conditional="false" name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="RMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When the highest implemented Exception level can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-rvbar.html" name="RVBAR" size="4">
        <gui_name language="en">Reset Vector Base Address Register</gui_name>
        <description language="en">If EL3 is not implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch32 state.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Secure" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Secure.xml">
      <gui_name language="en">Secure</gui_name>
      <description language="en">Secure</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-nsacr.html" name="NSACR" size="4">
        <gui_name language="en">Non-Secure Access Control Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, defines the Non-secure access permissions to Trace, Advanced SIMD and floating-point functionality. Also includes IMPLEMENTATION DEFINED bits that can define Non-secure access permissions for IMPLEMENTATION DEFINED functionality.</description>
        <bitField conditional="false" enumerationId="NSACR_NSTRCDIS" name="NSTRCDIS">
          <gui_name language="en">NSTRCDIS</gui_name>
          <description language="en">Disables Non-secure System register accesses to all implemented trace registers.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="NSACR_NSASEDIS" name="NSASEDIS">
          <gui_name language="en">NSASEDIS</gui_name>
          <description language="en">Disables Non-secure access to the Advanced SIMD functionality.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" name="cp11">
          <gui_name language="en">cp11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the cp10 field then this field is UNKNOWN on a direct read of the NSACR.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="NSACR_cp10" name="cp10">
          <gui_name language="en">cp10</gui_name>
          <description language="en">Enable Non-secure access to the Advanced SIMD and floating-point features.</description>
          <definition>[10]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Special" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Special.xml">
      <gui_name language="en">Special</gui_name>
      <description language="en">Special</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-fpscr.html" name="FPSCR" size="4">
        <gui_name language="en">Floating-Point Status and Control Register</gui_name>
        <description language="en">Provides floating-point system status information and control.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField conditional="false" name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField conditional="false" name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Division by Zero exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="FPSCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative exception bit. This bit is set to 1 to indicate that the Input Denormal exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative exception bit. This bit is set to 1 to indicate that the Inexact exception has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative exception bit. This bit is set to 1 to indicate that the Underflow exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative exception bit. This bit is set to 1 to indicate that the Overflow exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Division by Zero cumulative exception bit. This bit is set to 1 to indicate that the Division by Zero exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative exception bit. This bit is set to 1 to indicate that the Invalid Operation exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-spsr_abt.html" name="SPSR_abt" size="4">
        <gui_name language="en">Saved Program Status Register (Abort mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Abort mode.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Abort mode, and copied to CPSR.N on executing an exception return operation in Abort mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Abort mode, and copied to CPSR.Z on executing an exception return operation in Abort mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Abort mode, and copied to CPSR.C on executing an exception return operation in Abort mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Abort mode, and copied to CPSR.V on executing an exception return operation in Abort mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Abort mode, and copied to CPSR.Q on executing an exception return operation in Abort mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField conditional="false" name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_abt_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-spsr_fiq.html" name="SPSR_fiq" size="4">
        <gui_name language="en">Saved Program Status Register (FIQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to FIQ mode.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to FIQ mode, and copied to CPSR.N on executing an exception return operation in FIQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to FIQ mode, and copied to CPSR.Z on executing an exception return operation in FIQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to FIQ mode, and copied to CPSR.C on executing an exception return operation in FIQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to FIQ mode, and copied to CPSR.V on executing an exception return operation in FIQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to FIQ mode, and copied to CPSR.Q on executing an exception return operation in FIQ mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField conditional="false" name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_fiq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-spsr_irq.html" name="SPSR_irq" size="4">
        <gui_name language="en">Saved Program Status Register (IRQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to IRQ mode.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to IRQ mode, and copied to CPSR.N on executing an exception return operation in IRQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to IRQ mode, and copied to CPSR.Z on executing an exception return operation in IRQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to IRQ mode, and copied to CPSR.C on executing an exception return operation in IRQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to IRQ mode, and copied to CPSR.V on executing an exception return operation in IRQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to IRQ mode, and copied to CPSR.Q on executing an exception return operation in IRQ mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField conditional="false" name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_irq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-spsr_svc.html" name="SPSR_svc" size="4">
        <gui_name language="en">Saved Program Status Register (Supervisor mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Supervisor mode.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Supervisor mode, and copied to CPSR.N on executing an exception return operation in Supervisor mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Supervisor mode, and copied to CPSR.Z on executing an exception return operation in Supervisor mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Supervisor mode, and copied to CPSR.C on executing an exception return operation in Supervisor mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Supervisor mode, and copied to CPSR.V on executing an exception return operation in Supervisor mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Supervisor mode, and copied to CPSR.Q on executing an exception return operation in Supervisor mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField conditional="false" name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_svc_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-spsr_und.html" name="SPSR_und" size="4">
        <gui_name language="en">Saved Program Status Register (Undefined mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Undefined mode.</description>
        <bitField conditional="false" name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Undefined mode, and copied to CPSR.N on executing an exception return operation in Undefined mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Undefined mode, and copied to CPSR.Z on executing an exception return operation in Undefined mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Undefined mode, and copied to CPSR.C on executing an exception return operation in Undefined mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Undefined mode, and copied to CPSR.V on executing an exception return operation in Undefined mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Undefined mode, and copied to CPSR.Q on executing an exception return operation in Undefined mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField conditional="false" name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="SPSR_und_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Thread" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Thread.xml">
      <gui_name language="en">Thread</gui_name>
      <description language="en">Thread</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-htpidr.html" name="HTPIDR" size="4">
        <gui_name language="en">Hyp Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software running in Hyp mode can store thread identifying information that is not visible to Non-secure software executing at EL0 or EL1, for hypervisor management purposes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-tpidrprw.html" name="TPIDRPRW" size="4">
        <gui_name language="en">PL1 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is not visible to software executing at EL0, for OS management purposes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-tpidruro.html" name="TPIDRURO" size="4">
        <gui_name language="en">PL0 Read-Only Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is visible to software executing at EL0, for OS management purposes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-tpidrurw.html" name="TPIDRURW" size="4">
        <gui_name language="en">PL0 Read/Write Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL0 can store thread identifying information, for OS management purposes.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Timer" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Timer.xml">
      <gui_name language="en">Timer</gui_name>
      <description language="en">Timer</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntfrq.html" name="CNTFRQ" size="4">
        <gui_name language="en">Counter-timer Frequency register</gui_name>
        <description language="en">This register is provided so that software can discover the frequency of the system counter. It must be programmed with this value as part of system initialization. The value of the register is not interpreted by hardware.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthctl.html" name="CNTHCTL" size="4">
        <gui_name language="en">Counter-timer Hyp Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 modes to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField conditional="false" name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_PL1PCEN" name="PL1PCEN">
          <gui_name language="en">PL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to Hyp mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_PL1PCTEN" name="PL1PCTEN">
          <gui_name language="en">PL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to Hyp mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthp_ctl.html" name="CNTHP_CTL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer Control register</gui_name>
        <description language="en">Control register for the Hyp mode physical timer.</description>
        <bitField conditional="false" enumerationId="CNTHP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthp_cval.html" name="CNTHP_CVAL" size="8">
        <gui_name language="en">Counter-timer Hyp Physical CompareValue register</gui_name>
        <description language="en">Holds the compare value for the Hyp mode physical timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthp_tval.html" name="CNTHP_TVAL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the Hyp mode physical timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntkctl.html" name="CNTKCTL" size="4">
        <gui_name language="en">Counter-timer Kernel Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the virtual counter, and access from EL0 modes to the physical counter, virtual counter, EL1 physical timers, and the virtual timer.</description>
        <bitField conditional="false" enumerationId="CNTKCTL_PL0PTEN" name="PL0PTEN">
          <gui_name language="en">PL0PTEN</gui_name>
          <description language="en">Traps PL0 accesses to the physical timer registers to Undefined mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTKCTL_PL0VTEN" name="PL0VTEN">
          <gui_name language="en">PL0VTEN</gui_name>
          <description language="en">Traps PL0 accesses to the virtual timer registers to Undefined mode.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTVCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTKCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTVCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTKCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTVCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTKCTL_PL0VCTEN" name="PL0VCTEN">
          <gui_name language="en">PL0VCTEN</gui_name>
          <description language="en">Traps PL0 accesses to the frequency register and virtual counter register to Undefined mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTKCTL_PL0PCTEN" name="PL0PCTEN">
          <gui_name language="en">PL0PCTEN</gui_name>
          <description language="en">Traps PL0 accesses to the frequency register and physical counter register to Undefined mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntpct.html" name="CNTPCT" size="8">
        <gui_name language="en">Counter-timer Physical Count register</gui_name>
        <description language="en">Holds the 64-bit physical count value.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntp_ctl.html" name="CNTP_CTL" size="4">
        <gui_name language="en">Counter-timer Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL1 physical timer.</description>
        <bitField conditional="false" enumerationId="CNTP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntp_cval.html" name="CNTP_CVAL" size="8">
        <gui_name language="en">Counter-timer Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL1 physical timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntp_tval.html" name="CNTP_TVAL" size="4">
        <gui_name language="en">Counter-timer Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 physical timer. This provides a 32-bit downcounter.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntvct.html" name="CNTVCT" size="8">
        <gui_name language="en">Counter-timer Virtual Count register</gui_name>
        <description language="en">Holds the 64-bit virtual count value. The virtual count value is equal to the physical count value visible in CNTPCT minus the virtual offset visible in CNTVOFF.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntvoff.html" name="CNTVOFF" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT and the virtual count value visible in CNTVCT.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntv_ctl.html" name="CNTV_CTL" size="4">
        <gui_name language="en">Counter-timer Virtual Timer Control register</gui_name>
        <description language="en">Control register for the virtual timer.</description>
        <bitField conditional="false" enumerationId="CNTV_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTV_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTV_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntv_cval.html" name="CNTV_CVAL" size="8">
        <gui_name language="en">Counter-timer Virtual Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the virtual timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntv_tval.html" name="CNTV_TVAL" size="4">
        <gui_name language="en">Counter-timer Virtual Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the virtual timer.</description>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="Virt" xml:base="Registers/System/ARMv8.0-R/V8_AARCH32_Virt.xml">
      <gui_name language="en">Virt</gui_name>
      <description language="en">Virt</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1hr.html" name="ATS1HR" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ats1hw.html" name="ATS1HW" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthctl.html" name="CNTHCTL" size="4">
        <gui_name language="en">Counter-timer Hyp Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 modes to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField conditional="false" name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_PL1PCEN" name="PL1PCEN">
          <gui_name language="en">PL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to Hyp mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="CNTHCTL_PL1PCTEN" name="PL1PCTEN">
          <gui_name language="en">PL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to Hyp mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthp_cval.html" name="CNTHP_CVAL" size="8">
        <gui_name language="en">Counter-timer Hyp Physical CompareValue register</gui_name>
        <description language="en">Holds the compare value for the Hyp mode physical timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cnthp_tval.html" name="CNTHP_TVAL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the Hyp mode physical timer.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-cntvoff.html" name="CNTVOFF" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT and the virtual count value visible in CNTVCT.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hacr.html" name="HACR" size="4">
        <gui_name language="en">Hyp Auxiliary Configuration Register</gui_name>
        <description language="en">Controls trapping to Hyp mode of IMPLEMENTATION DEFINED aspects of Non-secure EL1 or EL0 operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hactlr.html" name="HACTLR" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register</gui_name>
        <description language="en">Controls IMPLEMENTATION DEFINED features of Hyp mode operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hactlr2.html" name="HACTLR2" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the HACTLR register to hold IMPLEMENTATION DEFINED trap functionality.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hadfsr.html" name="HADFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Data Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-haifsr.html" name="HAIFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Prefetch Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hamair0.html" name="HAMAIR0" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR0. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hamair1.html" name="HAMAIR1" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR1. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hcptr.html" name="HCPTR" size="4">
        <gui_name language="en">Hyp Architectural Feature Trap Register</gui_name>
        <description language="en">Controls...</description>
        <bitField conditional="false" enumerationId="HCPTR_TCPAC" name="TCPAC">
          <gui_name language="en">TCPAC</gui_name>
          <description language="en">Traps Non-secure EL1 accesses to the CPACR to Hyp mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCPTR_TTA" name="TTA">
          <gui_name language="en">TTA</gui_name>
          <description language="en">Traps Non-secure System register accesses to all implemented trace registers to Hyp mode.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCPTR_TASE" name="TASE">
          <gui_name language="en">TASE</gui_name>
          <description language="en">Traps Non-secure execution of Advanced SIMD instructions to Hyp mode when the value of HCPTR.TCP10 is 0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" name="TCP11">
          <gui_name language="en">TCP11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the TCP10 bit then this field is UNKNOWN on a direct read of the HCPTR.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCPTR_TCP10" name="TCP10">
          <gui_name language="en">TCP10</gui_name>
          <description language="en">Trap Non-secure accesses to Advanced SIMD and floating-point functionality to Hyp mode:</description>
          <definition>[10]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hcr.html" name="HCR" size="4">
        <gui_name language="en">Hyp Configuration Register</gui_name>
        <description language="en">Provides configuration controls for virtualization, including defining whether various Non-secure operations are trapped to Hyp mode.</description>
        <bitField conditional="false" enumerationId="HCR_TRVM" name="TRVM">
          <gui_name language="en">TRVM</gui_name>
          <description language="en">Trap Reads of Memory controls. Traps EL1 reads of the memory control registers to Hyp mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_HCD" name="HCD">
          <gui_name language="en">HCD</gui_name>
          <description language="en">HVC instruction disable. Disables execution of HVC instructions.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TGE" name="TGE">
          <gui_name language="en">TGE</gui_name>
          <description language="en">Trap General Exceptions from EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TVM" name="TVM">
          <gui_name language="en">TVM</gui_name>
          <description language="en">Trap Memory controls. Traps EL1 writes to the memory control registers to Hyp mode.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TPU" name="TPU">
          <gui_name language="en">TPU</gui_name>
          <description language="en">Trap cache maintenance instructions that operate to the Point of Unification. Traps EL1 execution of those cache maintenance instructions to Hyp mode.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TPC" name="TPC">
          <gui_name language="en">TPC</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate to the Point of Coherency. Traps EL1 execution of those cache maintenance instructions to Hyp mode.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TSW" name="TSW">
          <gui_name language="en">TSW</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate by Set/Way. Traps EL1 execution of those cache maintenance instructions by set/way to Hyp mode.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TAC" name="TAC">
          <gui_name language="en">TAC</gui_name>
          <description language="en">Trap Auxiliary Control Registers. Traps EL1 accesses to the Auxiliary Control Registers to Hyp mode.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TIDCP" name="TIDCP">
          <gui_name language="en">TIDCP</gui_name>
          <description language="en">Trap IMPLEMENTATION DEFINED functionality. Traps EL1 accesses to the encodings for IMPLEMENTATION DEFINED System Registers to Hyp mode.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TID3" name="TID3">
          <gui_name language="en">TID3</gui_name>
          <description language="en">Trap ID group 3.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TID2" name="TID2">
          <gui_name language="en">TID2</gui_name>
          <description language="en">Trap ID group 2.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TID1" name="TID1">
          <gui_name language="en">TID1</gui_name>
          <description language="en">Trap ID group 1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TID0" name="TID0">
          <gui_name language="en">TID0</gui_name>
          <description language="en">Trap ID group 0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TWE" name="TWE">
          <gui_name language="en">TWE</gui_name>
          <description language="en">Traps EL0 and EL1 execution of WFE instructions to Hyp mode:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_TWI" name="TWI">
          <gui_name language="en">TWI</gui_name>
          <description language="en">Traps EL0 and EL1 execution of WFI instructions to Hyp mode.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_DC" name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">Default Cacheability.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_BSU" name="BSU">
          <gui_name language="en">BSU</gui_name>
          <description language="en">Barrier Shareability upgrade.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_FB" name="FB">
          <gui_name language="en">FB</gui_name>
          <description language="en">Force broadcast.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_VA" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual SError interrupt exception.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_VI" name="VI">
          <gui_name language="en">VI</gui_name>
          <description language="en">Virtual IRQ exception.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_VF" name="VF">
          <gui_name language="en">VF</gui_name>
          <description language="en">Virtual FIQ exception.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" name="AMO">
          <gui_name language="en">AMO</gui_name>
          <description language="en">SError interrupt Mask Override. When this bit is set to 1, it overrides the effect of CPSR.A, and enables virtual exception signaling by the VA bit.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" name="IMO">
          <gui_name language="en">IMO</gui_name>
          <description language="en">IRQ Mask Override. When this bit is set to 1, it overrides the effect of CPSR.I, and enables virtual exception signaling by the VI bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="FMO">
          <gui_name language="en">FMO</gui_name>
          <description language="en">FIQ Mask Override. When this bit is set to 1, it overrides the effect of CPSR.F, and enables virtual exception signaling by the VF bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_SWIO" name="SWIO">
          <gui_name language="en">SWIO</gui_name>
          <description language="en">Set/Way Invalidation Override. Causes EL1 execution of the data cache invalidate by set/way instructions to be treated as data cache clean and invalidate by set/way.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HCR_VM" name="VM">
          <gui_name language="en">VM</gui_name>
          <description language="en">Virtualization enable. Enables stage 2 protection for EL1 and EL0 accesses. This is provided by the EL2-controlled MPU.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hcr2.html" name="HCR2" size="4">
        <gui_name language="en">Hyp Configuration Register 2</gui_name>
        <description language="en">Provides additional configuration controls for virtualization.</description>
        <bitField conditional="false" enumerationId="HCR2_MIOCNCE" name="MIOCNCE">
          <gui_name language="en">MIOCNCE</gui_name>
          <description language="en">Mismatched Inner/Outer Cacheable Non-Coherency Enable, for the EL1&amp;0 translation regime.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hdcr.html" name="HDCR" size="4">
        <gui_name language="en">Hyp Debug Control Register</gui_name>
        <description language="en">Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</description>
        <bitField conditional="false" enumerationId="HDCR_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface access to Hyp mode Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_HPMD" name="HPMD">
          <gui_name language="en">HPMD</gui_name>
          <description language="en">Hyp Performance Monitors Disable. This control prohibits event counting in Hyp mode by the counters accessible at EL1.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access. Traps EL1 System register accesses to the powerdown debug registers to Hyp mode.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap debug access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hyp Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HDCR_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR accesses. Traps EL0 and EL1 accesses to the PMCR to Hyp mode.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from EL1 modes, and from EL0 modes if unprivileged access is enabled.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hdfar.html" name="HDFAR" size="4">
        <gui_name language="en">Hyp Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hifar.html" name="HIFAR" size="4">
        <gui_name language="en">Hyp Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hmair0.html" name="HMAIR0" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with HMAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode.</description>
        <bitField conditional="false" name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hmair1.html" name="HMAIR1" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with HMAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode.</description>
        <bitField conditional="false" name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hpfar.html" name="HPFAR" size="4">
        <gui_name language="en">Hyp IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to Hyp mode.</description>
        <bitField conditional="false" name="FIPA_39_12">
          <gui_name language="en">FIPA_39_12</gui_name>
          <description language="en">Bits [39:12] of the faulting intermediate physical address.</description>
          <definition>[31:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hrmr.html" name="HRMR" size="4">
        <gui_name language="en">Hyp Reset Management Register</gui_name>
        <description language="en">When this register is implemented...</description>
        <bitField conditional="false" name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HRMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hsctlr.html" name="HSCTLR" size="4">
        <gui_name language="en">Hyp System Control Register</gui_name>
        <description language="en">Provides top level control of the system operation in Hyp mode.</description>
        <bitField conditional="false" enumerationId="HSCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on entry to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_FI" name="FI">
          <gui_name language="en">FI</gui_name>
          <description language="en">Fast Interrupts enable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_BR" name="BR">
          <gui_name language="en">BR</gui_name>
          <description language="en">Background Region enable for EL2.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL2.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL2.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MPU enable for the EL2-controlled MPU.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hsr.html" name="HSR" size="4">
        <gui_name language="en">Hyp Syndrome Register</gui_name>
        <description language="en">Holds syndrome information for an exception taken to Hyp mode.</description>
        <bitField conditional="false" enumerationId="HSR_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSR_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction length bit. Indicates the size of the instruction that has been trapped to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" name="ISS">
          <gui_name language="en">ISS</gui_name>
          <description language="en">Instruction Specific Syndrome. Architecturally, this field can be defined independently for each defined Exception class. However, in practice, some ISS encodings are used for more than one Exception class.</description>
          <definition>[24:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hstr.html" name="HSTR" size="4">
        <gui_name language="en">Hyp System Trap Register</gui_name>
        <description language="en">Controls trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to the System register in the coproc == 1111 encoding space, by the CRn value used to access the register using MCR or MRC instruction. When the register is accessible using an MCRR or MRRC instruction, this is the CRm value used to access the register.</description>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T15">
          <gui_name language="en">T15</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T14">
          <gui_name language="en">T14</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T13">
          <gui_name language="en">T13</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T12">
          <gui_name language="en">T12</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T11">
          <gui_name language="en">T11</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T10">
          <gui_name language="en">T10</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T9">
          <gui_name language="en">T9</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T8">
          <gui_name language="en">T8</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T7">
          <gui_name language="en">T7</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T6">
          <gui_name language="en">T6</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T5">
          <gui_name language="en">T5</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T4">
          <gui_name language="en">T4</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T3">
          <gui_name language="en">T3</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T2">
          <gui_name language="en">T2</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T1">
          <gui_name language="en">T1</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="HSTR_T_n" name="T0">
          <gui_name language="en">T0</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-htpidr.html" name="HTPIDR" size="4">
        <gui_name language="en">Hyp Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software running in Hyp mode can store thread identifying information that is not visible to Non-secure software executing at EL0 or EL1, for hypervisor management purposes.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-hvbar.html" name="HVBAR" size="4">
        <gui_name language="en">Hyp Vector Base Address Register</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-icc_hsre.html" name="ICC_HSRE" size="4">
        <gui_name language="en">Interrupt Controller Hyp System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField conditional="false" enumerationId="ICC_HSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICC_HSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_eisr.html" name="ICH_EISR" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_EISR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_elrsr.html" name="ICH_ELRSR" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">Indicates which List registers contain valid interrupts.</description>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_ELRSR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_hcr.html" name="ICH_HCR" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField conditional="false" name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR and ICV_DIR.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_HCR_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrn.html" name="ICH_LR15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField conditional="false" enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField conditional="false" name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_misr.html" name="ICH_MISR" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_MISR_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_vmcr.html" name="ICH_VMCR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField conditional="false" name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField conditional="false" name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VMCR_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-ich_vtr.html" name="ICH_VTR" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField conditional="false" name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField conditional="false" name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="ICH_VTR_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField conditional="false" name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vmpidr.html" name="VMPIDR" size="4">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR.</description>
        <bitField conditional="false" enumerationId="VMPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VMPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VMPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField conditional="false" name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField conditional="false" name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField conditional="false" name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_v80R_xml-00alp3_rc3/xhtml/AArch32-vpidr.html" name="VPIDR" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR.</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" enumerationId="VPIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>

    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Address.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Cache.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Debug.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Exception.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Float.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_GIC.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_ID.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Legacy.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Memory.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Other.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_PMU.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Reset.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Secure.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Special.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Thread.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Timer.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
    <xi:include href="Registers/System/ARMv8.0-R/V8_AARCH32_Virt.xml" xpointer="xmlns(namespace=http://www.arm.com/core_reg)xpointer(//namespace:enumeration)"/>
  </cr:register_list>

  <cr:register_list filter="AARCH32" name="System">

    <register_group xmlns="http://www.arm.com/core_reg" name="ImplementationDefined" xml:base="Registers/System/R52_AARCH32_ImpDef.xml">
      <gui_name language="en">Implementation Defined</gui_name>
      <description language="en">Implementation Defined</description>
      <register access="RW" name="CPUACTLR" size="8">
        <gui_name language="en">CPU Auxiliary Control Register</gui_name>
        <description language="en">CPU Auxiliary Control Register.</description>
      </register>
      <register access="RW" name="ATCMREGIONR" size="4">
        <gui_name language="en">TCM Region Register A</gui_name>
        <description language="en">TCM Region Register A.</description>
      </register>
      <register access="RW" name="BTCMREGIONR" size="4">
        <gui_name language="en">TCM Region Register B</gui_name>
        <description language="en">TCM Region Register B.</description>
      </register>
      <register access="RW" name="CTCMREGIONR" size="4">
        <gui_name language="en">TCM Region Register C</gui_name>
        <description language="en">TCM Region Register C.</description>
      </register>
      <register access="RW" name="CSCTLR" size="4">
        <gui_name language="en">Cache Segregation Control Register</gui_name>
        <description language="en">Cache Segregation Control Register.</description>
      </register>
      <register access="RW" name="BPCTLR" size="4">
        <gui_name language="en">Branch Predictor Control Register</gui_name>
        <description language="en">Branch Predictor Control Register.</description>
      </register>
      <register access="RW" name="MEMPROTCLR" size="4">
        <gui_name language="en">Memory Protection Control Register</gui_name>
        <description language="en">Memory Protection Control Register.</description>
      </register>
      <register access="RW" name="SLAVEPCTLR" size="4">
        <gui_name language="en">Slave Port Control Register</gui_name>
        <description language="en">Slave Port Control Register</description>
      </register>
      <register access="RW" name="PERIPHPREGIONR" size="4">
        <gui_name language="en">Peripheral Port Region Register</gui_name>
        <description language="en">Peripheral Port Region Register.</description>
      </register>
      <register access="RW" name="FLASHIFREGIONR" size="4">
        <gui_name language="en">Flash Interface Region Register</gui_name>
        <description language="en">Flash Interface Region Register.</description>
      </register>
      <register access="RO" name="BUILDOPTR" size="4">
        <gui_name language="en">Build Options Register</gui_name>
        <description language="en">Build Options Register.</description>
      </register>
      <register access="RO" name="PINOPTR" size="4">
        <gui_name language="en">Pin Options Register</gui_name>
        <description language="en">Pin Options Register.</description>
      </register>
      <register access="RO" name="CBAR" size="4">
        <gui_name language="en">Configuration Base Address Register</gui_name>
        <description language="en">Configuration Base Address Register.</description>
      </register>
      <register access="RW" name="QOSR" size="4">
        <gui_name language="en">Quality Of Service Register</gui_name>
        <description language="en">Quality Of Service Register.</description>
      </register>
      <register access="RW" name="BUSTIMEOUTR" size="4">
        <gui_name language="en">Bus Timeout Register</gui_name>
        <description language="en">Bus Timeout Register.</description>
      </register>
      <register access="RW" name="INTMONR" size="4">
        <gui_name language="en">Interrupt Monitoring Register</gui_name>
        <description language="en">Interrupt Monitoring Register.</description>
      </register>
      <register access="RW" name="ICERR0" size="4">
        <gui_name language="en">Instruction Cache Error Record Register 0</gui_name>
        <description language="en">Instruction Cache Error Record Register 0.</description>
      </register>
      <register access="RW" name="ICERR1" size="4">
        <gui_name language="en">Instruction Cache Error Record Registers 1</gui_name>
        <description language="en">Instruction Cache Error Record Registers 1.</description>
      </register>
      <register access="RW" name="DCERR0" size="4">
        <gui_name language="en">Data Cache Error Record Register 0</gui_name>
        <description language="en">Data Cache Error Record Register 0.</description>
      </register>
      <register access="RW" name="DCERR1" size="4">
        <gui_name language="en">Data Cache Error Record Registers 1</gui_name>
        <description language="en">Data Cache Error Record Registers 1.</description>
      </register>
      <register access="RW" name="TCMERR0" size="4">
        <gui_name language="en">TCM Error Record Register 0</gui_name>
        <description language="en">TCM Error Record Register 0.</description>
      </register>
      <register access="RW" name="TCMERR1" size="4">
        <gui_name language="en">TCM Error Record Register 1</gui_name>
        <description language="en">TCM Error Record Register 1.</description>
      </register>
      <register access="RO" name="TCMSYNDR0" size="4">
        <gui_name language="en">TCM Syndrome Register 0</gui_name>
        <description language="en">TCM Syndrome Register 0.</description>
      </register>
      <register access="RO" name="TCMSYNDR1" size="4">
        <gui_name language="en">TCM Syndrome Register 1</gui_name>
        <description language="en">TCM Syndrome Register 1.</description>
      </register>
      <register access="RW" name="FLASHERR0" size="4">
        <gui_name language="en">Flash Error Record Registers 0</gui_name>
        <description language="en">Flash Error Record Registers 0.</description>
      </register>
      <register access="RW" name="FLASHERR1" size="4">
        <gui_name language="en">Flash Error Record Registers 1</gui_name>
        <description language="en">Flash Error Record Registers 1.</description>
      </register>
      <register access="RO" name="TESTR0" size="4">
        <gui_name language="en">Test Register 0</gui_name>
        <description language="en">Test Register 0.</description>
      </register>
      <register access="WO" name="TESTR1" size="4">
        <gui_name language="en">Test Register 1</gui_name>
        <description language="en">Test Register 1.</description>
      </register>
    </register_group>

    <!-- <xi:include href="Registers/System/R52_AARCH32_ImpDef.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/> -->
  </cr:register_list>
</core_definition>
