<core_definition xmlns="http://www.arm.com/core_definition" xmlns:cr="http://www.arm.com/core_reg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:tcf="http://com.arm.targetconfigurationeditor" xsi:schemaLocation="http://www.arm.com/core_definition ../Schemas/core_definition.xsd" architecture="ARMv6M">
  <name>Cortex-M1</name>
  <internal_name>Cortex-M1</internal_name>
  <series>M</series>
  <cr:register_list name="Core" display_by_default="true">

    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R0" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R0</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R1" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R1</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R2" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R2</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R3" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R3</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R4" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R4</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R5" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R5</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R6" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R6</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R7" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R7</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R8" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R8</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R9" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R9</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R10" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R10</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R11" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R11</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="R12" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">R12</gui_name>
      <description language="en">General purpose register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">SP</gui_name>
      <description language="en">Stack pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP_MAIN" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">SP_main</gui_name>
      <description language="en">Main stack pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP_PROCESS" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">SP_process</gui_name>
      <description language="en">Process stack pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="LR" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">LR</gui_name>
      <description language="en">The Link Register receives the return address from PC when a Branch and Link (BL) instruction is executed</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PC" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">PC</gui_name>
      <description language="en">Program counter</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="xPSR" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">xPSR</gui_name>
      <description language="en">Program status register</description>
      <bitField conditional="false" name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative or less than flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry or borrow flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">Thumb state</description>
        <definition>[24]</definition>
      </bitField>
      <bitField access="RO" conditional="false" name="EXCEPTION_NUMBER" enumerationId="CORE_XPSR_EXCEPTION_NUMBER">
        <gui_name language="en">Exception Number</gui_name>
        <description language="en">Number of executing exception</description>
        <definition>[5:0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PRIMASK" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">PRIMASK</gui_name>
      <description language="en">Special-Purpose Priority Mask Register</description>
      <bitField conditional="false" name="PM">
        <gui_name language="en">PM</gui_name>
        <description language="en">When set, raises execution priority to 0</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="CONTROL" size="4" xml:base="Registers/core_registers_m1.xml">
      <gui_name language="en">CONTROL</gui_name>
      <description language="en">The special-purpose CONTROL register.</description>
      <bitField conditional="false" name="SPSEL" enumerationId="CORE_CONTROL_SPSEL">
        <gui_name language="en">SPSEL</gui_name>
        <description language="en">Defines the stack to use</description>
        <definition>[1]</definition>
      </bitField>
    </register>

    <!-- Enumerations -->

    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CORE_XPSR_EXCEPTION_NUMBER" xml:base="Registers/core_registers_m1.xml">
      <tcf:enumItem number="0x001" name="Reset">
        <tcf:gui_name>Reset</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x002" name="NMI">
        <tcf:gui_name>NMI</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x003" name="Hard_Fault">
        <tcf:gui_name>Hard Fault</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x00B" name="SVCall">
        <tcf:gui_name>SVCall</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x00E" name="PendSV">
        <tcf:gui_name>PendSV</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x00F" name="SysTck">
        <tcf:gui_name>SysTck</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x000" name="NONE">
        <tcf:gui_name>None</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x010" name="External_Interrupt_0x00">
        <tcf:gui_name>External Interrupt 0x00</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x011" name="External_Interrupt_0x01">
        <tcf:gui_name>External Interrupt 0x01</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x012" name="External_Interrupt_0x02">
        <tcf:gui_name>External Interrupt 0x02</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x013" name="External_Interrupt_0x03">
        <tcf:gui_name>External Interrupt 0x03</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x014" name="External_Interrupt_0x04">
        <tcf:gui_name>External Interrupt 0x04</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x015" name="External_Interrupt_0x05">
        <tcf:gui_name>External Interrupt 0x05</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x016" name="External_Interrupt_0x06">
        <tcf:gui_name>External Interrupt 0x06</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x017" name="External_Interrupt_0x07">
        <tcf:gui_name>External Interrupt 0x07</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x018" name="External_Interrupt_0x08">
        <tcf:gui_name>External Interrupt 0x08</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x019" name="External_Interrupt_0x09">
        <tcf:gui_name>External Interrupt 0x09</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01A" name="External_Interrupt_0x0A">
        <tcf:gui_name>External Interrupt 0x0A</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01B" name="External_Interrupt_0x0B">
        <tcf:gui_name>External Interrupt 0x0B</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01C" name="External_Interrupt_0x0C">
        <tcf:gui_name>External Interrupt 0x0C</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01D" name="External_Interrupt_0x0D">
        <tcf:gui_name>External Interrupt 0x0D</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01E" name="External_Interrupt_0x0E">
        <tcf:gui_name>External Interrupt 0x0E</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x01F" name="External_Interrupt_0x0F">
        <tcf:gui_name>External Interrupt 0x0F</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x020" name="External_Interrupt_0x10">
        <tcf:gui_name>External Interrupt 0x10</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x021" name="External_Interrupt_0x11">
        <tcf:gui_name>External Interrupt 0x11</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x022" name="External_Interrupt_0x12">
        <tcf:gui_name>External Interrupt 0x12</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x023" name="External_Interrupt_0x13">
        <tcf:gui_name>External Interrupt 0x13</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x024" name="External_Interrupt_0x14">
        <tcf:gui_name>External Interrupt 0x14</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x025" name="External_Interrupt_0x15">
        <tcf:gui_name>External Interrupt 0x15</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x026" name="External_Interrupt_0x16">
        <tcf:gui_name>External Interrupt 0x16</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x027" name="External_Interrupt_0x17">
        <tcf:gui_name>External Interrupt 0x17</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x028" name="External_Interrupt_0x18">
        <tcf:gui_name>External Interrupt 0x18</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x029" name="External_Interrupt_0x19">
        <tcf:gui_name>External Interrupt 0x19</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02A" name="External_Interrupt_0x1A">
        <tcf:gui_name>External Interrupt 0x1A</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02B" name="External_Interrupt_0x1B">
        <tcf:gui_name>External Interrupt 0x1B</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02C" name="External_Interrupt_0x1C">
        <tcf:gui_name>External Interrupt 0x1C</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02D" name="External_Interrupt_0x1D">
        <tcf:gui_name>External Interrupt 0x1D</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02E" name="External_Interrupt_0x1E">
        <tcf:gui_name>External Interrupt 0x1E</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="0x02F" name="External_Interrupt_0x1F">
        <tcf:gui_name>External Interrupt 0x1F</tcf:gui_name>
      </tcf:enumItem>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CORE_CONTROL_SPSEL" xml:base="Registers/core_registers_m1.xml">
      <tcf:enumItem number="0" name="SP_main_in_use">
        <tcf:gui_name>SP_main is the current stack pointer</tcf:gui_name>
      </tcf:enumItem>
      <tcf:enumItem number="1" name="SP_process_in_use">
        <tcf:gui_name>SP_process is the current stack pointer</tcf:gui_name>
      </tcf:enumItem>
    </tcf:enumeration>

  </cr:register_list>
  <cr:register_list name="System">

    <peripheral xmlns="http://www.arm.com/core_reg" name="SysTick" offset="0x00000000" xml:base="Registers/system_registers_m1.xml">
      <gui_name language="en">SysTick</gui_name>
      <description language="en">System Timer registers</description>
      <register access="RW" name="SYST_CSR" size="4" offset="0xE000E010">
        <gui_name language="en">SysTick Control and Status</gui_name>
        <description language="en">Controls the system timer and provides status data</description>
        <bitField access="RO" conditional="false" name="COUNTFLAG" enumerationId="SYST_CSR_COUNTFLAG">
          <gui_name language="en">COUNTFLAG</gui_name>
          <description language="en">Indicates whether the counter has counted to 0 since the last read of this register</description>
          <definition>[16]</definition>
        </bitField>
        <bitField conditional="false" name="CLKSOURCE" enumerationId="SYST_CSR_CLKSOURCE">
          <gui_name language="en">CLKSOURCE</gui_name>
          <description language="en">Indicates the SysTick clock source</description>
          <definition>[2]</definition>
        </bitField>
        <bitField conditional="false" name="TICKINT" enumerationId="SYST_CSR_TICKINT">
          <gui_name language="en">TICKINT</gui_name>
          <description language="en">Indicates whether counting to 0 causes the status of the SysTick exception to change to pending</description>
          <definition>[1]</definition>
        </bitField>
        <bitField conditional="false" name="ENABLE" enumerationId="SYST_CSR_ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Indicates the enabled status of the SysTick counter</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_RVR" size="4" offset="0xE000E014">
        <gui_name language="en">SysTick Reload Value</gui_name>
        <description language="en">Sets or reads the reload value of the SYST_CVR register</description>
        <bitField conditional="false" name="RELOAD">
          <gui_name language="en">RELOAD</gui_name>
          <description language="en">The value to load into the SYST_CVR register when the counter reaches 0</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CVR" size="4" offset="0xE000E018">
        <gui_name language="en">SysTick Current Value</gui_name>
        <description language="en">Reads or clears the current counter value</description>
        <bitField conditional="false" name="CURRENT">
          <gui_name language="en">CURRENT</gui_name>
          <description language="en">This is the value of the counter at the time it is sampled</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="SYST_CALIB" size="4" offset="0xE000E01C">
        <gui_name language="en">SysTick Calibration Value</gui_name>
        <description language="en">Reads the calibration value and parameters for SysTick</description>
        <bitField conditional="false" name="NOREF" enumerationId="SYST_CALIB_NOREF">
          <gui_name language="en">NOREF</gui_name>
          <description language="en">Indicates whether the IMPLEMENTATION DEFINED reference clock is provided</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="SKEW" enumerationId="SYST_CALIB_SKEW">
          <gui_name language="en">SKEW</gui_name>
          <description language="en">Indicates whether the 10ms calibration value is exact</description>
          <definition>[30]</definition>
        </bitField>
        <bitField conditional="false" name="TENMS">
          <gui_name language="en">TENMS</gui_name>
          <description language="en">Optionally, holds a reload value to be used for 10ms (100Hz) timing, subject to system clock skew errors</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
    </peripheral>
    <peripheral xmlns="http://www.arm.com/core_reg" name="Control" offset="0x00000000" xml:base="Registers/system_registers_m1.xml">
      <gui_name language="en">System Control</gui_name>
      <description language="en">System Control registers</description>
      <register access="RW" name="ACTLR" size="4" offset="0xE000E008">
        <gui_name language="en">Auxiliary Control</gui_name>
        <description language="en">Disables certain aspects of functionality within the processor</description>
        <bitField conditional="false" name="ITCMUAEN" enumerationId="ENABLED_DISABLED">
          <gui_name language="en">ITCMUAEN</gui_name>
          <description language="en">Instruction TCM Upper Alias Enable</description>
          <definition>[4]</definition>
        </bitField>
        <bitField conditional="false" name="ITCMLAEN" enumerationId="ENABLED_DISABLED">
          <gui_name language="en">ITCMLAEN</gui_name>
          <description language="en">Instruction TCM Lower Alias Enable</description>
          <definition>[3]</definition>
        </bitField>
      </register>
      <register access="RW" name="ICSR" size="4" offset="0xE000ED04">
        <gui_name language="en">Interrupt Control State</gui_name>
        <description language="en">Controls and provides status information</description>
        <bitField conditional="false" name="NMIPENDSET" enumerationId="ICSR_NMIPENDSET">
          <gui_name language="en">NMIPENDSET</gui_name>
          <description language="en">Activates an NMI exception or reads back the current state</description>
          <definition>[31]</definition>
        </bitField>
        <bitField conditional="false" name="PENDSVSET" enumerationId="ICSR_PENDSET">
          <gui_name language="en">PENDSVSET</gui_name>
          <description language="en">Sets a pending PendSV interrupt or reads back the current state</description>
          <definition>[28]</definition>
        </bitField>
        <bitField access="WO" conditional="false" name="PENDSVCLR" enumerationId="ICSR_PENDCLR">
          <gui_name language="en">PENDSVCLR</gui_name>
          <description language="en">Clears a pending PendSV interrupt</description>
          <definition>[27]</definition>
        </bitField>
        <bitField conditional="false" name="PENDSTSET" enumerationId="ICSR_PENDSET">
          <gui_name language="en">PENDSTSET</gui_name>
          <description language="en">Sets a pending SysTick or reads back the current state</description>
          <definition>[26]</definition>
        </bitField>
        <bitField access="WO" conditional="false" name="PENDSTCLR" enumerationId="ICSR_PENDCLR">
          <gui_name language="en">PENDSTCLR</gui_name>
          <description language="en">Clears a pending SysTick, whether set here or by the timer hardware</description>
          <definition>[25]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="ISRPREEMPT" enumerationId="ICSR_PREEMPT">
          <gui_name language="en">ISRPREEMPT</gui_name>
          <description language="en">Indicates whether a pending exception will be serviced on exit from debug halt state</description>
          <definition>[23]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="ISRPENDING" enumerationId="ICSR_PENDING">
          <gui_name language="en">ISRPENDING</gui_name>
          <description language="en">Indicates if an external configurable, NVIC generated, interrupt is pending</description>
          <definition>[22]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="VECTPENDING">
          <gui_name language="en">VECTPENDING</gui_name>
          <description language="en">The exception number for the highest priority pending exception. 0 indicates no pending exceptions</description>
          <definition>[20:12]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="VECTACTIVE">
          <gui_name language="en">VECTACTIVE</gui_name>
          <description language="en">The exception number for the current executing exception</description>
          <definition>[8:0]</definition>
        </bitField>
      </register>
      <register access="RW" name="AIRCR" size="4" offset="0xE000ED0C">
        <gui_name language="en">Application Interrupt and Reset Control</gui_name>
        <description language="en">Sets or returns interrupt control data</description>
        <bitField access="WO" conditional="false" name="VECTKEY">
          <gui_name language="en">VECTKEY</gui_name>
          <description language="en">Vector Key</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="VECTKEYSTAT">
          <gui_name language="en">VECTKEYSTAT</gui_name>
          <description language="en">UNKNOWN</description>
          <definition>[31:16]</definition>
        </bitField>
        <bitField access="RO" conditional="false" name="ENDIANNESS" enumerationId="AIRCR_ENDIANNESS">
          <gui_name language="en">ENDIANNESS</gui_name>
          <description language="en">Indicates the memory system data endianness</description>
          <definition>[15]</definition>
        </bitField>
        <bitField access="WO" conditional="false" name="SYSRESETREQ" enumerationId="AIRCR_RESETREQ">
          <gui_name language="en">SYSRESETREQ</gui_name>
          <description language="en">System Reset Request</description>
          <definition>[2]</definition>
        </bitField>
        <bitField access="WO" conditional="false" name="VECTCLRACTIVE" enumerationId="AIRCR_VECTCLR">
          <gui_name language="en">VECTCLRACTIVE</gui_name>
          <description language="en">Clears all active state information for fixed and configurable exceptions</description>
          <definition>[1]</definition>
        </bitField>
      </register>
      <register access="RO" name="CCR" size="4" offset="0xE000ED14">
        <gui_name language="en">Configuration and Control</gui_name>
        <description language="en">Returns configuration and control data</description>
        <bitField conditional="false" name="STKALIGN">
          <gui_name language="en">STKALIGN</gui_name>
          <description language="en">On exception entry, the SP used prior to the exception is adjusted to be 8-byte aligned and the context to restore it is saved. The SP is restored on the associated exception return</description>
          <definition>[9]</definition>
        </bitField>
        <bitField conditional="false" name="UNALIGN_TRP">
          <gui_name language="en">UNALIGN_TRP</gui_name>
          <description language="en">Unaligned word and halfword accesses generate a HardFault exception</description>
          <definition>[3]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR2" size="4" offset="0xE000ED1C">
        <gui_name language="en">System Handler Priority Register 2</gui_name>
        <description language="en">Sets or returns priority for system handler 11</description>
        <bitField conditional="false" name="PRI_11">
          <gui_name language="en">PRI_11</gui_name>
          <description language="en">Priority of system handler 11, SVCall</description>
          <definition>[31:30]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHPR3" size="4" offset="0xE000ED20">
        <gui_name language="en">System Handler Priority Register 3</gui_name>
        <description language="en">Sets or returns priority for system handlers 14-15</description>
        <bitField conditional="false" name="PRI_15">
          <gui_name language="en">PRI_15</gui_name>
          <description language="en">Priority of system handler 15, SysTick</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField conditional="false" name="PRI_14">
          <gui_name language="en">PRI_14</gui_name>
          <description language="en">Priority of system handler 14, PendSV</description>
          <definition>[23:22]</definition>
        </bitField>
      </register>
      <register access="RW" name="SHCSR" size="4" offset="0xE000ED24">
        <gui_name language="en">System Handler Control and State</gui_name>
        <description language="en">Controls and provides the status of system handlers</description>
        <bitField conditional="false" name="SVCALLPENDED" enumerationId="SHCSR_SVCCALLPEND">
          <gui_name language="en">SVCALLPENDED</gui_name>
          <description language="en">This bit reflects the pending state on a read, and updates the pending state, to the value written, on a write</description>
          <definition>[15]</definition>
        </bitField>
      </register>
    </peripheral>
    <peripheral xmlns="http://www.arm.com/core_reg" name="ID" offset="0x00000000" xml:base="Registers/system_registers_m1.xml">
      <gui_name language="en">ID</gui_name>
      <description language="en">ID registers</description>
      <register access="RO" name="CPUID" size="4" offset="0xE000ED00">
        <gui_name language="en">CPUID Base</gui_name>
        <description language="en">Provides identification information for the processor</description>
        <bitField conditional="false" name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer code</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField conditional="false" name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">Implementation defined</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField conditional="false" name="Constant">
          <gui_name language="en">Constant</gui_name>
          <description language="en">Indicates the architecture</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField conditional="false" name="Partno">
          <gui_name language="en">Partno</gui_name>
          <description language="en">Indicates part number</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField conditional="false" name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">Indicates revision</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </peripheral>


    <peripheral xmlns="http://www.arm.com/core_reg" name="NVIC" offset="0x00000000" xml:base="Registers/nvic_registers_v6m.xml">
      <gui_name language="en">NVIC</gui_name>
      <description language="en">Nested Vectored Interrupt Controller registers</description>
      <register access="RW" name="NVIC_ISER0" size="4" offset="0xE000E100">
        <gui_name language="en">Interrupt Set-Enable 0</gui_name>
        <description language="en">Enables, or reads the enable state of a group of interrupts</description>
      </register>
      <register access="RW" name="NVIC_ICER0" size="4" offset="0xE000E180">
        <gui_name language="en">Interrupt Clear-Enable 0</gui_name>
        <description language="en">Disables, or reads the enable state of a group of interrupts</description>
      </register>
      <register access="RW" name="NVIC_ISPR0" size="4" offset="0xE000E200">
        <gui_name language="en">Interrupt Set-Pending 0</gui_name>
        <description language="en">For a group of interrupts, changes interrupt status to pending, or shows the current pending
status</description>
      </register>
      <register access="RW" name="NVIC_ICPR0" size="4" offset="0xE000E280">
        <gui_name language="en">Interrupt Set-Pending 0</gui_name>
        <description language="en">For a group of interrupts, clears the interrupt pending status, or shows the current pending
status</description>
      </register>
      <register access="RW" name="NVIC_IABR0" size="4" offset="0xE000E300">
        <gui_name language="en">Interrupt Active Bit 0</gui_name>
        <description language="en">For a group of 32 interrupts, shows whether each interrupt is active</description>
      </register>
      <register access="RW" name="NVIC_IPR0" size="4" offset="0xE000E400">
        <gui_name language="en">Interrupt Priority Register 0</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR1" size="4" offset="0xE000E404">
        <gui_name language="en">Interrupt Priority Register 1</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR2" size="4" offset="0xE000E408">
        <gui_name language="en">Interrupt Priority Register 2</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR3" size="4" offset="0xE000E40C">
        <gui_name language="en">Interrupt Priority Register 3</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR4" size="4" offset="0xE000E410">
        <gui_name language="en">Interrupt Priority Register 4</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR5" size="4" offset="0xE000E414">
        <gui_name language="en">Interrupt Priority Register 5</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR6" size="4" offset="0xE000E418">
        <gui_name language="en">Interrupt Priority Register 6</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
      <register access="RW" name="NVIC_IPR7" size="4" offset="0xE000E41C">
        <gui_name language="en">Interrupt Priority Register 7</gui_name>
        <description language="en">Sets or reads interrupt priorities</description>
      </register>
    </peripheral>

    <!-- Enumerations -->

    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CSR_COUNTFLAG" values="not_counted_to_0=0,counted_to_0=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CSR_CLKSOURCE" values="External_clock=0,Processor_clock=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CSR_TICKINT" values="Does_not_affect_exception_status=0,Changes_exception_status=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CSR_ENABLE" values="Counter_disabled=0,Counter_operating=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CALIB_NOREF" values="Implemented=0,Not_implemented=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SYST_CALIB_SKEW" values="Exact=0,Inexact=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ENABLED_DISABLED" values="Enabled=0,Disabled=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ICSR_NMIPENDSET" values="Do_not_activate=0,Activate_NMI_exception=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ICSR_PENDSET" values="Do_not_set=0,Set_pending=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ICSR_PENDCLR" values="Do_not_clear=0,Clear_pending=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ICSR_PREEMPT" values="Will_not_service=0,Will_service_pending_exception=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="ICSR_PENDING" values="Interrupt_not_pending=0,Interrupt_pending=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="AIRCR_ENDIANNESS" values="Little_endian=0,Big_endian=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="AIRCR_RESETREQ" values="Do_not_request_reset=0,Request_reset=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="AIRCR_VECTCLR" values="Do_not_clear=0,Clear_state_information=1" xml:base="Registers/system_registers_m1.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SHCSR_SVCCALLPEND" values="Not_pending=0,Pending=1" xml:base="Registers/system_registers_m1.xml"/>

  </cr:register_list>
</core_definition>
