<core_definition xmlns="http://www.arm.com/core_definition" xmlns:cr="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" architecture="ARMv8" xsi:schemaLocation="http://www.arm.com/core_definition ../Schemas/core_definition.xsd">
  <name>Cortex-A35</name>
  <internal_name>Cortex-A35</internal_name>
  <series>A</series>
  <reg_filter id="A35_AARCH64" gui_name="AArch64" core_state="AArch64"/>
  <reg_filter id="A35_AARCH32" gui_name="AArch32" core_state="AArch32"/>
  <cr:register_list filter="A35_AARCH32" name="Core" display_by_default="true">

    <register xmlns="http://www.arm.com/core_reg" name="R0" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R0</gui_name>
      <description language="en">R0</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R1" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R1</gui_name>
      <description language="en">R1</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R2" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R2</gui_name>
      <description language="en">R2</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R3" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R3</gui_name>
      <description language="en">R3</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R4" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R4</gui_name>
      <description language="en">R4</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R5" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R5</gui_name>
      <description language="en">R5</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R6" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R6</gui_name>
      <description language="en">R6</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R7" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R7</gui_name>
      <description language="en">R7</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R8" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R8</gui_name>
      <description language="en">R8</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R9" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R9</gui_name>
      <description language="en">R9</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R10" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R10</gui_name>
      <description language="en">R10</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R11" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R11</gui_name>
      <description language="en">R11</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R12" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">R12</gui_name>
      <description language="en">R12</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R13" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">SP</gui_name>
      <device_name type="alternative">SP</device_name>
      <description language="en">Stack Pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R14" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">LR</gui_name>
      <device_name type="alternative">LR</device_name>
      <description language="en">Link Register</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" name="R15" size="4" access="RW" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">PC</gui_name>
      <device_name type="alternative">PC</device_name>
      <description language="en">Program Counter</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cpsr.html" name="CPSR" size="4" xml:base="Registers/V8_AARCH32_Core.xml">
      <gui_name language="en">Current Processor State Register</gui_name>
      <description language="en">Holds the current processor state.</description>

      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative/Less than flag</description>
        <definition>[31]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero flag</description>
        <definition>[30]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry or Borrow or Extend flag</description>
        <definition>[29]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow flag</description>
        <definition>[28]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">Q</gui_name>
        <description language="en">Saturation flag</description>
        <definition>[27]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">IT</gui_name>
        <description language="en">If-Then execution state</description>
        <definition>[15:10][26:25]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IL" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution State bit.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for SIMD instructions</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">E</gui_name>
        <description language="en">Data endianness</description>
        <definition>[9]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">A</gui_name>
        <description language="en">Asynchronous abort disable</description>
        <definition>[8]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ disable</description>
        <definition>[7]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ disable</description>
        <definition>[6]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">T</gui_name>
        <description language="en">Thumb state</description>
        <definition>[5]</definition>
      </bitField>
      <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_M_V8" xml:base="CPSR/psrfields_V8.xml">
        <gui_name language="en">M</gui_name>
        <description language="en">Mode</description>
        <definition>[4:0]</definition>
      </bitField>

    </register>


    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="IRQ" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">IRQ</gui_name>
      <description language="en">Banked Core Registers In IRQ mode</description>
      <register name="R13_IRQ" size="4" access="RW">
        <gui_name language="en">SP_IRQ</gui_name>
        <device_name type="alternative">SP_IRQ</device_name>
        <description language="en">Stack Pointer in IRQ mode</description>
      </register>
      <register name="R14_IRQ" size="4" access="RW">
        <gui_name language="en">LR_IRQ</gui_name>
        <device_name type="alternative">LR_IRQ</device_name>
        <description language="en">Link Register in IRQ mode</description>
      </register>
      <register name="SPSR_IRQ" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_irq.html" size="4" access="RW">
        <gui_name language="en">SPSR_IRQ</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="FIQ" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">FIQ</gui_name>
      <description language="en">Banked Core Registers In FIQ mode</description>
      <register name="R8_FIQ" size="4" access="RW">
        <gui_name language="en">R8_FIQ</gui_name>
        <description language="en">R8 in FIQ mode</description>
      </register>
      <register name="R9_FIQ" size="4" access="RW">
        <gui_name language="en">R9_FIQ</gui_name>
        <description language="en">R9 in FIQ mode</description>
      </register>
      <register name="R10_FIQ" size="4" access="RW">
        <gui_name language="en">R10_FIQ</gui_name>
        <description language="en">R10 in FIQ mode</description>
      </register>
      <register name="R11_FIQ" size="4" access="RW">
        <gui_name language="en">R11_FIQ</gui_name>
        <description language="en">R11 in FIQ mode</description>
      </register>
      <register name="R12_FIQ" size="4" access="RW">
        <gui_name language="en">R12_FIQ</gui_name>
        <description language="en">R12 in FIQ mode</description>
      </register>
      <register name="R13_FIQ" size="4" access="RW">
        <gui_name language="en">SP_FIQ</gui_name>
        <device_name type="alternative">SP_FIQ</device_name>
        <description language="en">Stack Pointer in FIQ mode</description>
      </register>
      <register name="R14_FIQ" size="4" access="RW">
        <gui_name language="en">LR_FIQ</gui_name>
        <device_name type="alternative">LR_FIQ</device_name>
        <description language="en">Link Register in FIQ mode</description>
      </register>
      <register name="SPSR_FIQ" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_fiq.html" size="4" access="RW">
        <gui_name language="en">SPSR_FIQ</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="UND" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">UND</gui_name>
      <description language="en">Banked Core Registers In UND mode</description>
      <register name="R13_UND" size="4" access="RW">
        <gui_name language="en">SP_UND</gui_name>
        <device_name type="alternative">SP_UND</device_name>
        <description language="en">Stack Pointer in UND mode</description>
      </register>
      <register name="R14_UND" size="4" access="RW">
        <gui_name language="en">LR_UND</gui_name>
        <device_name type="alternative">LR_UND</device_name>
        <description language="en">Link Register in UND mode</description>
      </register>
      <register name="SPSR_UND" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_und.html" size="4" access="RW">
        <gui_name language="en">SPSR_UND</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="ABT" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">ABT</gui_name>
      <description language="en">Banked Core Registers In ABT mode</description>
      <register name="R13_ABT" size="4" access="RW">
        <gui_name language="en">SP_ABT</gui_name>
        <device_name type="alternative">SP_ABT</device_name>
        <description language="en">Stack Pointer in ABT mode</description>
      </register>
      <register name="R14_ABT" size="4" access="RW">
        <gui_name language="en">LR_ABT</gui_name>
        <device_name type="alternative">LR_ABT</device_name>
        <description language="en">Link Register in ABT mode</description>
      </register>
      <register name="SPSR_ABT" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_abt.html" size="4" access="RW">
        <gui_name language="en">SPSR_ABT</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="SVC" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">SVC</gui_name>
      <description language="en">Banked Core Registers In SVC mode</description>
      <register name="R13_SVC" size="4" access="RW">
        <gui_name language="en">SP_SVC</gui_name>
        <device_name type="alternative">SP_SVC</device_name>
        <description language="en">Stack Pointer in SVC mode</description>
      </register>
      <register name="R14_SVC" size="4" access="RW">
        <gui_name language="en">LR_SVC</gui_name>
        <device_name type="alternative">LR_SVC</device_name>
        <description language="en">Link Register in SVC mode</description>
      </register>
      <register name="SPSR_SVC" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_svc.html" size="4" access="RW">
        <gui_name language="en">SPSR_SVC</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="MON" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">MON</gui_name>
      <description language="en">Banked Core Registers In MON mode</description>
      <register name="R13_MON" size="4" access="RW">
        <gui_name language="en">SP_MON</gui_name>
        <device_name type="alternative">SP_MON</device_name>
        <description language="en">Stack Pointer in MON mode</description>
      </register>
      <register name="R14_MON" size="4" access="RW">
        <gui_name language="en">LR_MON</gui_name>
        <device_name type="alternative">LR_MON</device_name>
        <description language="en">Link Register in MON mode</description>
      </register>
      <register name="SPSR_MON" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_mon.html" size="4" access="RW">
        <gui_name language="en">SPSR_MON</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" xmlns:xi="http://www.w3.org/2001/XInclude" name="HYP" xml:base="Registers/banked_registers_V8_aarch32.xml">
      <gui_name language="en">HYP</gui_name>
      <description language="en">Banked Core Registers In HYP mode</description>
      <register name="SPSR_HYP" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_hyp.html" size="4" access="RW">
        <gui_name language="en">SPSR_HYP</gui_name>
        <description language="en">Saved Program Status Register</description>

        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="N" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative/Less than flag</description>
          <definition>[31]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Z" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero flag</description>
          <definition>[30]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="C" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry or Borrow or Extend flag</description>
          <definition>[29]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="V" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow flag</description>
          <definition>[28]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="Q" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">Q</gui_name>
          <description language="en">Saturation flag</description>
          <definition>[27]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="IT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">IT</gui_name>
          <description language="en">If-Then execution state</description>
          <definition>[15:10][26:25]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="J" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">J</gui_name>
          <description language="en">Jazelle state</description>
          <definition>[24]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="GE" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for SIMD instructions</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="E" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">E</gui_name>
          <description language="en">Data endianness</description>
          <definition>[9]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="A" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous abort disable</description>
          <definition>[8]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="I" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ disable</description>
          <definition>[7]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="F" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ disable</description>
          <definition>[6]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="T" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">T</gui_name>
          <description language="en">Thumb state</description>
          <definition>[5]</definition>
        </bitField>
        <bitField xmlns="http://www.arm.com/core_reg" conditional="false" name="M" enumerationId="CPSR_MODE_BIT" xml:base="CPSR/psrfields_V6_7.xml">
          <gui_name language="en">M</gui_name>
          <description language="en">Mode</description>
          <definition>[4:0]</definition>
        </bitField>

      </register>
      <register name="R13_HYP" size="4" access="RW">
        <gui_name language="en">SP_HYP</gui_name>
        <device_name type="alternative">SP_HYP</device_name>
        <description language="en">Stack Pointer in HYP mode</description>
      </register>
      <register name="ELR_HYP" size="4" access="RW">
        <gui_name language="en">ELR_HYP</gui_name>
        <description language="en">Exception Link Register</description>
      </register>
    </register_group>


    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8" values="AArch64_EL0t=0x0,AArch64_EL1t=0x04,AArch64_EL1h=0x05,AArch64_EL2t=0x08,AArch64_EL2h=0x09,AArch64_EL3t=0x0C,AArch64_EL3h=0x0D,AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_MON=0x16,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8R" values="AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>

  </cr:register_list>
  <cr:register_list filter="A35_AARCH64" name="Core" display_by_default="true">

    <register xmlns="http://www.arm.com/core_reg" access="RW" name="CPSR" size="4" hidden="true" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">Current Processor State Register</gui_name>
      <description language="en">Holds the current processor state.</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X0" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X0</gui_name>
      <description language="en">X0</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X1" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X1</gui_name>
      <description language="en">X1</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X2" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X2</gui_name>
      <description language="en">X2</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X3" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X3</gui_name>
      <description language="en">X3</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X4" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X4</gui_name>
      <description language="en">X4</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X5" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X5</gui_name>
      <description language="en">X5</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X6" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X6</gui_name>
      <description language="en">X6</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X7" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X7</gui_name>
      <description language="en">X7</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X8" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X8</gui_name>
      <description language="en">X8</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X9" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X9</gui_name>
      <description language="en">X9</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X10" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X10</gui_name>
      <description language="en">X10</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X11" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X11</gui_name>
      <description language="en">X11</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X12" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X12</gui_name>
      <description language="en">X12</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X13" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X13</gui_name>
      <description language="en">X13</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X14" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X14</gui_name>
      <description language="en">X14</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X15" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X15</gui_name>
      <description language="en">X15</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X16" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X16</gui_name>
      <description language="en">X16</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X17" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X17</gui_name>
      <description language="en">X17</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X18" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X18</gui_name>
      <description language="en">X18</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X19" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X19</gui_name>
      <description language="en">X19</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X20" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X20</gui_name>
      <description language="en">X20</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X21" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X21</gui_name>
      <description language="en">X21</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X22" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X22</gui_name>
      <description language="en">X22</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X23" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X23</gui_name>
      <description language="en">X23</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X24" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X24</gui_name>
      <description language="en">X24</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X25" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X25</gui_name>
      <description language="en">X25</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X26" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X26</gui_name>
      <description language="en">X26</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X27" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X27</gui_name>
      <description language="en">X27</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X28" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X28</gui_name>
      <description language="en">X28</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X29" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X29</gui_name>
      <description language="en">X29</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="X30" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">X30</gui_name>
      <device_name type="alternative">LR</device_name>
      <description language="en">X30</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="PC" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">PC</gui_name>
      <description language="en">Program Counter</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="SP" size="8" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">SP</gui_name>
      <description language="en">Stack Pointer</description>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W0" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W0</gui_name>
      <description language="en">W0</description>
      <device_register high_bit="31" low_bit="0" name="X0" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W1" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W1</gui_name>
      <description language="en">W1</description>
      <device_register high_bit="31" low_bit="0" name="X1" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W2" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W2</gui_name>
      <description language="en">W2</description>
      <device_register high_bit="31" low_bit="0" name="X2" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W3" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W3</gui_name>
      <description language="en">W3</description>
      <device_register high_bit="31" low_bit="0" name="X3" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W4" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W4</gui_name>
      <description language="en">W4</description>
      <device_register high_bit="31" low_bit="0" name="X4" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W5" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W5</gui_name>
      <description language="en">W5</description>
      <device_register high_bit="31" low_bit="0" name="X5" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W6" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W6</gui_name>
      <description language="en">W6</description>
      <device_register high_bit="31" low_bit="0" name="X6" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W7" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W7</gui_name>
      <description language="en">W7</description>
      <device_register high_bit="31" low_bit="0" name="X7" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W8" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W8</gui_name>
      <description language="en">W8</description>
      <device_register high_bit="31" low_bit="0" name="X8" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W9" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W9</gui_name>
      <description language="en">W9</description>
      <device_register high_bit="31" low_bit="0" name="X9" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W10" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W10</gui_name>
      <description language="en">W10</description>
      <device_register high_bit="31" low_bit="0" name="X10" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W11" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W11</gui_name>
      <description language="en">W11</description>
      <device_register high_bit="31" low_bit="0" name="X11" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W12" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W12</gui_name>
      <description language="en">W12</description>
      <device_register high_bit="31" low_bit="0" name="X12" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W13" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W13</gui_name>
      <description language="en">W13</description>
      <device_register high_bit="31" low_bit="0" name="X13" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W14" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W14</gui_name>
      <description language="en">W14</description>
      <device_register high_bit="31" low_bit="0" name="X14" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W15" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W15</gui_name>
      <description language="en">W15</description>
      <device_register high_bit="31" low_bit="0" name="X15" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W16" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W16</gui_name>
      <description language="en">W16</description>
      <device_register high_bit="31" low_bit="0" name="X16" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W17" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W17</gui_name>
      <description language="en">W17</description>
      <device_register high_bit="31" low_bit="0" name="X17" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W18" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W18</gui_name>
      <description language="en">W18</description>
      <device_register high_bit="31" low_bit="0" name="X18" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W19" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W19</gui_name>
      <description language="en">W19</description>
      <device_register high_bit="31" low_bit="0" name="X19" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W20" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W20</gui_name>
      <description language="en">W20</description>
      <device_register high_bit="31" low_bit="0" name="X20" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W21" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W21</gui_name>
      <description language="en">W21</description>
      <device_register high_bit="31" low_bit="0" name="X21" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W22" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W22</gui_name>
      <description language="en">W22</description>
      <device_register high_bit="31" low_bit="0" name="X22" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W23" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W23</gui_name>
      <description language="en">W23</description>
      <device_register high_bit="31" low_bit="0" name="X23" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W24" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W24</gui_name>
      <description language="en">W24</description>
      <device_register high_bit="31" low_bit="0" name="X24" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W25" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W25</gui_name>
      <description language="en">W25</description>
      <device_register high_bit="31" low_bit="0" name="X25" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W26" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W26</gui_name>
      <description language="en">W26</description>
      <device_register high_bit="31" low_bit="0" name="X26" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W27" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W27</gui_name>
      <description language="en">W27</description>
      <device_register high_bit="31" low_bit="0" name="X27" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W28" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W28</gui_name>
      <description language="en">W28</description>
      <device_register high_bit="31" low_bit="0" name="X28" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W29" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W29</gui_name>
      <description language="en">W29</description>
      <device_register high_bit="31" low_bit="0" name="X29" shift="0"/>
    </register>
    <register xmlns="http://www.arm.com/core_reg" access="RW" name="W30" size="4" xml:base="Registers/V8_AARCH64_Core.xml">
      <gui_name language="en">W30</gui_name>
      <description language="en">W30</description>
      <device_register high_bit="31" low_bit="0" name="X30" shift="0"/>
    </register>


    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8" values="AArch64_EL0t=0x0,AArch64_EL1t=0x04,AArch64_EL1h=0x05,AArch64_EL2t=0x08,AArch64_EL2h=0x09,AArch64_EL3t=0x0C,AArch64_EL3h=0x0D,AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_MON=0x16,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="CPSR_M_V8R" values="AArch32_USR=0x10,AArch32_FIQ=0x11,AArch32_IRQ=0x12,AArch32_SVC=0x13,AArch32_UND=0x1B,AArch32_ABT=0x17,AArch32_HYP=0x1A,AArch32_SYS=0x1F" xml:base="Registers/CPSR/V8_virt.xml"/>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_T" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Processor_in_ARM_state_if_J_is_0_or_Jazelle_state_if_J_is_1" number="0"/>
      <tcf:enumItem name="Processor_in_Thumb_state_if_J_is_0_or_ThumbEE_state_if_J_is_1" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_M" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="EL0t_mode_from_AArch64_User_mode_from_AArch32" number="0"/>
      <tcf:enumItem name="FIQ_mode_from_AArch32" number="1"/>
      <tcf:enumItem name="IRQ_mode_from_AArch32" number="2"/>
      <tcf:enumItem name="Supervisor_mode_from_AArch32" number="3"/>
      <tcf:enumItem name="EL1t_mode_from_AArch64" number="4"/>
      <tcf:enumItem name="EL1h_mode_from_AArch64" number="5"/>
      <tcf:enumItem name="Monitor_mode_from_AArch32" number="6"/>
      <tcf:enumItem name="Abort_mode_from_AArch32" number="7"/>
      <tcf:enumItem name="EL2t_mode_from_AArch64" number="8"/>
      <tcf:enumItem name="EL2h_mode_from_AArch64" number="9"/>
      <tcf:enumItem name="Hyp_mode_from_AArch32" number="10"/>
      <tcf:enumItem name="Undefined_mode_from_AArch32" number="11"/>
      <tcf:enumItem name="EL3t_mode_from_AArch64" number="12"/>
      <tcf:enumItem name="EL3h_mode_from_AArch64" number="13"/>
      <tcf:enumItem name="System_mode_from_AArch32" number="15"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_F" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_I" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_I" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_M" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="EL0t_mode_from_AArch64_User_mode_from_AArch32" number="0"/>
      <tcf:enumItem name="FIQ_mode_from_AArch32" number="1"/>
      <tcf:enumItem name="IRQ_mode_from_AArch32" number="2"/>
      <tcf:enumItem name="Supervisor_mode_from_AArch32" number="3"/>
      <tcf:enumItem name="EL1t_mode_from_AArch64" number="4"/>
      <tcf:enumItem name="EL1h_mode_from_AArch64" number="5"/>
      <tcf:enumItem name="Monitor_mode_from_AArch32" number="6"/>
      <tcf:enumItem name="Abort_mode_from_AArch32" number="7"/>
      <tcf:enumItem name="EL2t_mode_from_AArch64" number="8"/>
      <tcf:enumItem name="EL2h_mode_from_AArch64" number="9"/>
      <tcf:enumItem name="Hyp_mode_from_AArch32" number="10"/>
      <tcf:enumItem name="Undefined_mode_from_AArch32" number="11"/>
      <tcf:enumItem name="EL3t_mode_from_AArch64" number="12"/>
      <tcf:enumItem name="EL3h_mode_from_AArch64" number="13"/>
      <tcf:enumItem name="System_mode_from_AArch32" number="15"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSEL_SP" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Use_SP_EL0_at_all_exception_levels" number="0"/>
      <tcf:enumItem name="Use_SP_ELx_for_exception_level_ELx" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_NRW" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_came_from_AArch64" number="0"/>
      <tcf:enumItem name="Exception_came_from_AArch32" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_NRW" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_came_from_AArch64" number="0"/>
      <tcf:enumItem name="Exception_came_from_AArch32" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_M" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="EL0t_mode_from_AArch64_User_mode_from_AArch32" number="0"/>
      <tcf:enumItem name="FIQ_mode_from_AArch32" number="1"/>
      <tcf:enumItem name="IRQ_mode_from_AArch32" number="2"/>
      <tcf:enumItem name="Supervisor_mode_from_AArch32" number="3"/>
      <tcf:enumItem name="EL1t_mode_from_AArch64" number="4"/>
      <tcf:enumItem name="EL1h_mode_from_AArch64" number="5"/>
      <tcf:enumItem name="Monitor_mode_from_AArch32" number="6"/>
      <tcf:enumItem name="Abort_mode_from_AArch32" number="7"/>
      <tcf:enumItem name="EL2t_mode_from_AArch64" number="8"/>
      <tcf:enumItem name="EL2h_mode_from_AArch64" number="9"/>
      <tcf:enumItem name="Hyp_mode_from_AArch32" number="10"/>
      <tcf:enumItem name="Undefined_mode_from_AArch32" number="11"/>
      <tcf:enumItem name="EL3t_mode_from_AArch64" number="12"/>
      <tcf:enumItem name="EL3h_mode_from_AArch64" number="13"/>
      <tcf:enumItem name="System_mode_from_AArch32" number="15"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_I" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_F" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_D" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_are_not_masked" number="0"/>
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_targeted_at_the_current_exception_level_or_lower_are_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_A" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_D" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_are_not_masked" number="0"/>
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_targeted_at_the_current_exception_level_or_lower_are_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_NRW" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_came_from_AArch64" number="0"/>
      <tcf:enumItem name="Exception_came_from_AArch32" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL1_A" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL2_F" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_D" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_are_not_masked" number="0"/>
      <tcf:enumItem name="Debug_exceptions_from_Watchpoint_Breakpoint_and_Single_step_units_targeted_at_the_current_exception_level_or_lower_are_masked" number="1"/>
    </tcf:enumeration>
    <tcf:enumeration xmlns:tcf="http://com.arm.targetconfigurationeditor" name="SPSR_EL3_A" xml:base="Registers/V8_AARCH64_Core.xml">
      <tcf:enumItem name="Exception_not_masked" number="0"/>
      <tcf:enumItem name="Exception_masked" number="1"/>
    </tcf:enumeration>

  </cr:register_list>
  <cr:register_list filter="A35_AARCH32" name="SIMD">

    <register_group xmlns="http://www.arm.com/core_reg" name="Quad" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Quad</gui_name>
      <description language="en">128-bit registers</description>
      <register access="RW" name="Q0" size="16">
        <gui_name language="en">Q0</gui_name>
        <description language="en">Q0</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q1" size="16">
        <gui_name language="en">Q1</gui_name>
        <description language="en">Q1</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q2" size="16">
        <gui_name language="en">Q2</gui_name>
        <description language="en">Q2</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q3" size="16">
        <gui_name language="en">Q3</gui_name>
        <description language="en">Q3</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q4" size="16">
        <gui_name language="en">Q4</gui_name>
        <description language="en">Q4</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q5" size="16">
        <gui_name language="en">Q5</gui_name>
        <description language="en">Q5</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q6" size="16">
        <gui_name language="en">Q6</gui_name>
        <description language="en">Q6</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q7" size="16">
        <gui_name language="en">Q7</gui_name>
        <description language="en">Q7</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q8" size="16">
        <gui_name language="en">Q8</gui_name>
        <description language="en">Q8</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q9" size="16">
        <gui_name language="en">Q9</gui_name>
        <description language="en">Q9</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q10" size="16">
        <gui_name language="en">Q10</gui_name>
        <description language="en">Q10</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q11" size="16">
        <gui_name language="en">Q11</gui_name>
        <description language="en">Q11</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q12" size="16">
        <gui_name language="en">Q12</gui_name>
        <description language="en">Q12</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q13" size="16">
        <gui_name language="en">Q13</gui_name>
        <description language="en">Q13</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q14" size="16">
        <gui_name language="en">Q14</gui_name>
        <description language="en">Q14</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="Q15" size="16">
        <gui_name language="en">Q15</gui_name>
        <description language="en">Q15</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Double" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Double</gui_name>
      <description language="en">64-bit registers</description>
      <register access="RW" format="Float" name="D0" size="8">
        <gui_name language="en">D0</gui_name>
        <description language="en">D0</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D1" size="8">
        <gui_name language="en">D1</gui_name>
        <description language="en">D1</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D2" size="8">
        <gui_name language="en">D2</gui_name>
        <description language="en">D2</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D3" size="8">
        <gui_name language="en">D3</gui_name>
        <description language="en">D3</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D4" size="8">
        <gui_name language="en">D4</gui_name>
        <description language="en">D4</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D5" size="8">
        <gui_name language="en">D5</gui_name>
        <description language="en">D5</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D6" size="8">
        <gui_name language="en">D6</gui_name>
        <description language="en">D6</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D7" size="8">
        <gui_name language="en">D7</gui_name>
        <description language="en">D7</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D8" size="8">
        <gui_name language="en">D8</gui_name>
        <description language="en">D8</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D9" size="8">
        <gui_name language="en">D9</gui_name>
        <description language="en">D9</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D10" size="8">
        <gui_name language="en">D10</gui_name>
        <description language="en">D10</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D11" size="8">
        <gui_name language="en">D11</gui_name>
        <description language="en">D11</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D12" size="8">
        <gui_name language="en">D12</gui_name>
        <description language="en">D12</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D13" size="8">
        <gui_name language="en">D13</gui_name>
        <description language="en">D13</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D14" size="8">
        <gui_name language="en">D14</gui_name>
        <description language="en">D14</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D15" size="8">
        <gui_name language="en">D15</gui_name>
        <description language="en">D15</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D16" size="8">
        <gui_name language="en">D16</gui_name>
        <description language="en">D16</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D17" size="8">
        <gui_name language="en">D17</gui_name>
        <description language="en">D17</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D18" size="8">
        <gui_name language="en">D18</gui_name>
        <description language="en">D18</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D19" size="8">
        <gui_name language="en">D19</gui_name>
        <description language="en">D19</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D20" size="8">
        <gui_name language="en">D20</gui_name>
        <description language="en">D20</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D21" size="8">
        <gui_name language="en">D21</gui_name>
        <description language="en">D21</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D22" size="8">
        <gui_name language="en">D22</gui_name>
        <description language="en">D22</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D23" size="8">
        <gui_name language="en">D23</gui_name>
        <description language="en">D23</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D24" size="8">
        <gui_name language="en">D24</gui_name>
        <description language="en">D24</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D25" size="8">
        <gui_name language="en">D25</gui_name>
        <description language="en">D25</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D26" size="8">
        <gui_name language="en">D26</gui_name>
        <description language="en">D26</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D27" size="8">
        <gui_name language="en">D27</gui_name>
        <description language="en">D27</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D28" size="8">
        <gui_name language="en">D28</gui_name>
        <description language="en">D28</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D29" size="8">
        <gui_name language="en">D29</gui_name>
        <description language="en">D29</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D30" size="8">
        <gui_name language="en">D30</gui_name>
        <description language="en">D30</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="63" low_bit="0" name="Q15" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D31" size="8">
        <gui_name language="en">D31</gui_name>
        <description language="en">D31</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
        <device_register high_bit="127" low_bit="64" name="Q15" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Single" xml:base="Registers/SIMD/V8_AARCH32_SIMD.xml">
      <gui_name language="en">Single</gui_name>
      <description language="en">32-bit registers</description>
      <register access="RW" format="Float" name="S0" size="4">
        <gui_name language="en">S0</gui_name>
        <description language="en">S0</description>
        <device_register high_bit="31" low_bit="0" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S1" size="4">
        <gui_name language="en">S1</gui_name>
        <description language="en">S1</description>
        <device_register high_bit="63" low_bit="32" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S2" size="4">
        <gui_name language="en">S2</gui_name>
        <description language="en">S2</description>
        <device_register high_bit="95" low_bit="64" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S3" size="4">
        <gui_name language="en">S3</gui_name>
        <description language="en">S3</description>
        <device_register high_bit="127" low_bit="96" name="Q0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S4" size="4">
        <gui_name language="en">S4</gui_name>
        <description language="en">S4</description>
        <device_register high_bit="31" low_bit="0" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S5" size="4">
        <gui_name language="en">S5</gui_name>
        <description language="en">S5</description>
        <device_register high_bit="63" low_bit="32" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S6" size="4">
        <gui_name language="en">S6</gui_name>
        <description language="en">S6</description>
        <device_register high_bit="95" low_bit="64" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S7" size="4">
        <gui_name language="en">S7</gui_name>
        <description language="en">S7</description>
        <device_register high_bit="127" low_bit="96" name="Q1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S8" size="4">
        <gui_name language="en">S8</gui_name>
        <description language="en">S8</description>
        <device_register high_bit="31" low_bit="0" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S9" size="4">
        <gui_name language="en">S9</gui_name>
        <description language="en">S9</description>
        <device_register high_bit="63" low_bit="32" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S10" size="4">
        <gui_name language="en">S10</gui_name>
        <description language="en">S10</description>
        <device_register high_bit="95" low_bit="64" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S11" size="4">
        <gui_name language="en">S11</gui_name>
        <description language="en">S11</description>
        <device_register high_bit="127" low_bit="96" name="Q2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S12" size="4">
        <gui_name language="en">S12</gui_name>
        <description language="en">S12</description>
        <device_register high_bit="31" low_bit="0" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S13" size="4">
        <gui_name language="en">S13</gui_name>
        <description language="en">S13</description>
        <device_register high_bit="63" low_bit="32" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S14" size="4">
        <gui_name language="en">S14</gui_name>
        <description language="en">S14</description>
        <device_register high_bit="95" low_bit="64" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S15" size="4">
        <gui_name language="en">S15</gui_name>
        <description language="en">S15</description>
        <device_register high_bit="127" low_bit="96" name="Q3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S16" size="4">
        <gui_name language="en">S16</gui_name>
        <description language="en">S16</description>
        <device_register high_bit="31" low_bit="0" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S17" size="4">
        <gui_name language="en">S17</gui_name>
        <description language="en">S17</description>
        <device_register high_bit="63" low_bit="32" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S18" size="4">
        <gui_name language="en">S18</gui_name>
        <description language="en">S18</description>
        <device_register high_bit="95" low_bit="64" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S19" size="4">
        <gui_name language="en">S19</gui_name>
        <description language="en">S19</description>
        <device_register high_bit="127" low_bit="96" name="Q4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S20" size="4">
        <gui_name language="en">S20</gui_name>
        <description language="en">S20</description>
        <device_register high_bit="31" low_bit="0" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S21" size="4">
        <gui_name language="en">S21</gui_name>
        <description language="en">S21</description>
        <device_register high_bit="63" low_bit="32" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S22" size="4">
        <gui_name language="en">S22</gui_name>
        <description language="en">S22</description>
        <device_register high_bit="95" low_bit="64" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S23" size="4">
        <gui_name language="en">S23</gui_name>
        <description language="en">S23</description>
        <device_register high_bit="127" low_bit="96" name="Q5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S24" size="4">
        <gui_name language="en">S24</gui_name>
        <description language="en">S24</description>
        <device_register high_bit="31" low_bit="0" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S25" size="4">
        <gui_name language="en">S25</gui_name>
        <description language="en">S25</description>
        <device_register high_bit="63" low_bit="32" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S26" size="4">
        <gui_name language="en">S26</gui_name>
        <description language="en">S26</description>
        <device_register high_bit="95" low_bit="64" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S27" size="4">
        <gui_name language="en">S27</gui_name>
        <description language="en">S27</description>
        <device_register high_bit="127" low_bit="96" name="Q6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S28" size="4">
        <gui_name language="en">S28</gui_name>
        <description language="en">S28</description>
        <device_register high_bit="31" low_bit="0" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S29" size="4">
        <gui_name language="en">S29</gui_name>
        <description language="en">S29</description>
        <device_register high_bit="63" low_bit="32" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S30" size="4">
        <gui_name language="en">S30</gui_name>
        <description language="en">S30</description>
        <device_register high_bit="95" low_bit="64" name="Q7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S31" size="4">
        <gui_name language="en">S31</gui_name>
        <description language="en">S31</description>
        <device_register high_bit="127" low_bit="96" name="Q7" shift="0"/>
      </register>
    </register_group>

    <!--        <xi:include href="Registers/SIMD/V8_AARCH32_SIMD.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/>-->
  </cr:register_list>
  <cr:register_list filter="A35_AARCH64" name="SIMD">

    <register_group xmlns="http://www.arm.com/core_reg" name="Vector" xml:base="Registers/SIMD/V8_AARCH64_SIMD.xml">
      <gui_name language="en">Vector</gui_name>
      <description language="en">SIMD registers</description>
      <register access="RW" name="V0" size="16">
        <gui_name language="en">V0</gui_name>
        <description language="en">V0</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V1" size="16">
        <gui_name language="en">V1</gui_name>
        <description language="en">V1</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V2" size="16">
        <gui_name language="en">V2</gui_name>
        <description language="en">V2</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V3" size="16">
        <gui_name language="en">V3</gui_name>
        <description language="en">V3</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V4" size="16">
        <gui_name language="en">V4</gui_name>
        <description language="en">V4</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V5" size="16">
        <gui_name language="en">V5</gui_name>
        <description language="en">V5</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V6" size="16">
        <gui_name language="en">V6</gui_name>
        <description language="en">V6</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V7" size="16">
        <gui_name language="en">V7</gui_name>
        <description language="en">V7</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V8" size="16">
        <gui_name language="en">V8</gui_name>
        <description language="en">V8</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V9" size="16">
        <gui_name language="en">V9</gui_name>
        <description language="en">V9</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V10" size="16">
        <gui_name language="en">V10</gui_name>
        <description language="en">V10</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V11" size="16">
        <gui_name language="en">V11</gui_name>
        <description language="en">V11</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V12" size="16">
        <gui_name language="en">V12</gui_name>
        <description language="en">V12</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V13" size="16">
        <gui_name language="en">V13</gui_name>
        <description language="en">V13</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V14" size="16">
        <gui_name language="en">V14</gui_name>
        <description language="en">V14</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V15" size="16">
        <gui_name language="en">V15</gui_name>
        <description language="en">V15</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V16" size="16">
        <gui_name language="en">V16</gui_name>
        <description language="en">V16</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V17" size="16">
        <gui_name language="en">V17</gui_name>
        <description language="en">V17</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V18" size="16">
        <gui_name language="en">V18</gui_name>
        <description language="en">V18</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V19" size="16">
        <gui_name language="en">V19</gui_name>
        <description language="en">V19</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V20" size="16">
        <gui_name language="en">V20</gui_name>
        <description language="en">V20</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V21" size="16">
        <gui_name language="en">V21</gui_name>
        <description language="en">V21</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V22" size="16">
        <gui_name language="en">V22</gui_name>
        <description language="en">V22</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V23" size="16">
        <gui_name language="en">V23</gui_name>
        <description language="en">V23</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V24" size="16">
        <gui_name language="en">V24</gui_name>
        <description language="en">V24</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V25" size="16">
        <gui_name language="en">V25</gui_name>
        <description language="en">V25</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V26" size="16">
        <gui_name language="en">V26</gui_name>
        <description language="en">V26</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V27" size="16">
        <gui_name language="en">V27</gui_name>
        <description language="en">V27</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V28" size="16">
        <gui_name language="en">V28</gui_name>
        <description language="en">V28</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V29" size="16">
        <gui_name language="en">V29</gui_name>
        <description language="en">V29</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V30" size="16">
        <gui_name language="en">V30</gui_name>
        <description language="en">V30</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
      <register access="RW" name="V31" size="16">
        <gui_name language="en">V31</gui_name>
        <description language="en">V31</description>
        <array element_bits="16" format="Float" index_from_lsb="true" name="F16">
          <gui_name language="en">F16</gui_name>
        </array>
        <array element_bits="32" format="Float" index_from_lsb="true" name="F32">
          <gui_name language="en">F32</gui_name>
        </array>
        <array element_bits="64" format="Float" index_from_lsb="true" name="F64">
          <gui_name language="en">F64</gui_name>
        </array>
        <array element_bits="8" format="UnsignedInt" index_from_lsb="true" name="U8">
          <gui_name language="en">U8</gui_name>
        </array>
        <array element_bits="16" format="UnsignedInt" index_from_lsb="true" name="U16">
          <gui_name language="en">U16</gui_name>
        </array>
        <array element_bits="32" format="UnsignedInt" index_from_lsb="true" name="U32">
          <gui_name language="en">U32</gui_name>
        </array>
        <array element_bits="64" format="UnsignedInt" index_from_lsb="true" name="U64">
          <gui_name language="en">U64</gui_name>
        </array>
        <array element_bits="8" format="Int" index_from_lsb="true" name="S8">
          <gui_name language="en">S8</gui_name>
        </array>
        <array element_bits="16" format="Int" index_from_lsb="true" name="S16">
          <gui_name language="en">S16</gui_name>
        </array>
        <array element_bits="32" format="Int" index_from_lsb="true" name="S32">
          <gui_name language="en">S32</gui_name>
        </array>
        <array element_bits="64" format="Int" index_from_lsb="true" name="S64">
          <gui_name language="en">S64</gui_name>
        </array>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Quad" xml:base="Registers/SIMD/V8_AARCH64_SIMD.xml">
      <gui_name language="en">Quad</gui_name>
      <description language="en">128-bit registers</description>
      <register access="RW" name="Q0" size="16">
        <gui_name language="en">Q0</gui_name>
        <description language="en">Q0</description>
        <device_register high_bit="127" low_bit="0" name="V0" shift="0"/>
      </register>
      <register access="RW" name="Q1" size="16">
        <gui_name language="en">Q1</gui_name>
        <description language="en">Q1</description>
        <device_register high_bit="127" low_bit="0" name="V1" shift="0"/>
      </register>
      <register access="RW" name="Q2" size="16">
        <gui_name language="en">Q2</gui_name>
        <description language="en">Q2</description>
        <device_register high_bit="127" low_bit="0" name="V2" shift="0"/>
      </register>
      <register access="RW" name="Q3" size="16">
        <gui_name language="en">Q3</gui_name>
        <description language="en">Q3</description>
        <device_register high_bit="127" low_bit="0" name="V3" shift="0"/>
      </register>
      <register access="RW" name="Q4" size="16">
        <gui_name language="en">Q4</gui_name>
        <description language="en">Q4</description>
        <device_register high_bit="127" low_bit="0" name="V4" shift="0"/>
      </register>
      <register access="RW" name="Q5" size="16">
        <gui_name language="en">Q5</gui_name>
        <description language="en">Q5</description>
        <device_register high_bit="127" low_bit="0" name="V5" shift="0"/>
      </register>
      <register access="RW" name="Q6" size="16">
        <gui_name language="en">Q6</gui_name>
        <description language="en">Q6</description>
        <device_register high_bit="127" low_bit="0" name="V6" shift="0"/>
      </register>
      <register access="RW" name="Q7" size="16">
        <gui_name language="en">Q7</gui_name>
        <description language="en">Q7</description>
        <device_register high_bit="127" low_bit="0" name="V7" shift="0"/>
      </register>
      <register access="RW" name="Q8" size="16">
        <gui_name language="en">Q8</gui_name>
        <description language="en">Q8</description>
        <device_register high_bit="127" low_bit="0" name="V8" shift="0"/>
      </register>
      <register access="RW" name="Q9" size="16">
        <gui_name language="en">Q9</gui_name>
        <description language="en">Q9</description>
        <device_register high_bit="127" low_bit="0" name="V9" shift="0"/>
      </register>
      <register access="RW" name="Q10" size="16">
        <gui_name language="en">Q10</gui_name>
        <description language="en">Q10</description>
        <device_register high_bit="127" low_bit="0" name="V10" shift="0"/>
      </register>
      <register access="RW" name="Q11" size="16">
        <gui_name language="en">Q11</gui_name>
        <description language="en">Q11</description>
        <device_register high_bit="127" low_bit="0" name="V11" shift="0"/>
      </register>
      <register access="RW" name="Q12" size="16">
        <gui_name language="en">Q12</gui_name>
        <description language="en">Q12</description>
        <device_register high_bit="127" low_bit="0" name="V12" shift="0"/>
      </register>
      <register access="RW" name="Q13" size="16">
        <gui_name language="en">Q13</gui_name>
        <description language="en">Q13</description>
        <device_register high_bit="127" low_bit="0" name="V13" shift="0"/>
      </register>
      <register access="RW" name="Q14" size="16">
        <gui_name language="en">Q14</gui_name>
        <description language="en">Q14</description>
        <device_register high_bit="127" low_bit="0" name="V14" shift="0"/>
      </register>
      <register access="RW" name="Q15" size="16">
        <gui_name language="en">Q15</gui_name>
        <description language="en">Q15</description>
        <device_register high_bit="127" low_bit="0" name="V15" shift="0"/>
      </register>
      <register access="RW" name="Q16" size="16">
        <gui_name language="en">Q16</gui_name>
        <description language="en">Q16</description>
        <device_register high_bit="127" low_bit="0" name="V16" shift="0"/>
      </register>
      <register access="RW" name="Q17" size="16">
        <gui_name language="en">Q17</gui_name>
        <description language="en">Q17</description>
        <device_register high_bit="127" low_bit="0" name="V17" shift="0"/>
      </register>
      <register access="RW" name="Q18" size="16">
        <gui_name language="en">Q18</gui_name>
        <description language="en">Q18</description>
        <device_register high_bit="127" low_bit="0" name="V18" shift="0"/>
      </register>
      <register access="RW" name="Q19" size="16">
        <gui_name language="en">Q19</gui_name>
        <description language="en">Q19</description>
        <device_register high_bit="127" low_bit="0" name="V19" shift="0"/>
      </register>
      <register access="RW" name="Q20" size="16">
        <gui_name language="en">Q20</gui_name>
        <description language="en">Q20</description>
        <device_register high_bit="127" low_bit="0" name="V20" shift="0"/>
      </register>
      <register access="RW" name="Q21" size="16">
        <gui_name language="en">Q21</gui_name>
        <description language="en">Q21</description>
        <device_register high_bit="127" low_bit="0" name="V21" shift="0"/>
      </register>
      <register access="RW" name="Q22" size="16">
        <gui_name language="en">Q22</gui_name>
        <description language="en">Q22</description>
        <device_register high_bit="127" low_bit="0" name="V22" shift="0"/>
      </register>
      <register access="RW" name="Q23" size="16">
        <gui_name language="en">Q23</gui_name>
        <description language="en">Q23</description>
        <device_register high_bit="127" low_bit="0" name="V23" shift="0"/>
      </register>
      <register access="RW" name="Q24" size="16">
        <gui_name language="en">Q24</gui_name>
        <description language="en">Q24</description>
        <device_register high_bit="127" low_bit="0" name="V24" shift="0"/>
      </register>
      <register access="RW" name="Q25" size="16">
        <gui_name language="en">Q25</gui_name>
        <description language="en">Q25</description>
        <device_register high_bit="127" low_bit="0" name="V25" shift="0"/>
      </register>
      <register access="RW" name="Q26" size="16">
        <gui_name language="en">Q26</gui_name>
        <description language="en">Q26</description>
        <device_register high_bit="127" low_bit="0" name="V26" shift="0"/>
      </register>
      <register access="RW" name="Q27" size="16">
        <gui_name language="en">Q27</gui_name>
        <description language="en">Q27</description>
        <device_register high_bit="127" low_bit="0" name="V27" shift="0"/>
      </register>
      <register access="RW" name="Q28" size="16">
        <gui_name language="en">Q28</gui_name>
        <description language="en">Q28</description>
        <device_register high_bit="127" low_bit="0" name="V28" shift="0"/>
      </register>
      <register access="RW" name="Q29" size="16">
        <gui_name language="en">Q29</gui_name>
        <description language="en">Q29</description>
        <device_register high_bit="127" low_bit="0" name="V29" shift="0"/>
      </register>
      <register access="RW" name="Q30" size="16">
        <gui_name language="en">Q30</gui_name>
        <description language="en">Q30</description>
        <device_register high_bit="127" low_bit="0" name="V30" shift="0"/>
      </register>
      <register access="RW" name="Q31" size="16">
        <gui_name language="en">Q31</gui_name>
        <description language="en">Q31</description>
        <device_register high_bit="127" low_bit="0" name="V31" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Double" xml:base="Registers/SIMD/V8_AARCH64_SIMD.xml">
      <gui_name language="en">Double</gui_name>
      <description language="en">64-bit registers</description>
      <register access="RW" format="Float" name="D0" size="8">
        <gui_name language="en">D0</gui_name>
        <description language="en">D0</description>
        <device_register high_bit="63" low_bit="0" name="V0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D1" size="8">
        <gui_name language="en">D1</gui_name>
        <description language="en">D1</description>
        <device_register high_bit="63" low_bit="0" name="V1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D2" size="8">
        <gui_name language="en">D2</gui_name>
        <description language="en">D2</description>
        <device_register high_bit="63" low_bit="0" name="V2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D3" size="8">
        <gui_name language="en">D3</gui_name>
        <description language="en">D3</description>
        <device_register high_bit="63" low_bit="0" name="V3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D4" size="8">
        <gui_name language="en">D4</gui_name>
        <description language="en">D4</description>
        <device_register high_bit="63" low_bit="0" name="V4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D5" size="8">
        <gui_name language="en">D5</gui_name>
        <description language="en">D5</description>
        <device_register high_bit="63" low_bit="0" name="V5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D6" size="8">
        <gui_name language="en">D6</gui_name>
        <description language="en">D6</description>
        <device_register high_bit="63" low_bit="0" name="V6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D7" size="8">
        <gui_name language="en">D7</gui_name>
        <description language="en">D7</description>
        <device_register high_bit="63" low_bit="0" name="V7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D8" size="8">
        <gui_name language="en">D8</gui_name>
        <description language="en">D8</description>
        <device_register high_bit="63" low_bit="0" name="V8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D9" size="8">
        <gui_name language="en">D9</gui_name>
        <description language="en">D9</description>
        <device_register high_bit="63" low_bit="0" name="V9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D10" size="8">
        <gui_name language="en">D10</gui_name>
        <description language="en">D10</description>
        <device_register high_bit="63" low_bit="0" name="V10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D11" size="8">
        <gui_name language="en">D11</gui_name>
        <description language="en">D11</description>
        <device_register high_bit="63" low_bit="0" name="V11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D12" size="8">
        <gui_name language="en">D12</gui_name>
        <description language="en">D12</description>
        <device_register high_bit="63" low_bit="0" name="V12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D13" size="8">
        <gui_name language="en">D13</gui_name>
        <description language="en">D13</description>
        <device_register high_bit="63" low_bit="0" name="V13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D14" size="8">
        <gui_name language="en">D14</gui_name>
        <description language="en">D14</description>
        <device_register high_bit="63" low_bit="0" name="V14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D15" size="8">
        <gui_name language="en">D15</gui_name>
        <description language="en">D15</description>
        <device_register high_bit="63" low_bit="0" name="V15" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D16" size="8">
        <gui_name language="en">D16</gui_name>
        <description language="en">D16</description>
        <device_register high_bit="63" low_bit="0" name="V16" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D17" size="8">
        <gui_name language="en">D17</gui_name>
        <description language="en">D17</description>
        <device_register high_bit="63" low_bit="0" name="V17" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D18" size="8">
        <gui_name language="en">D18</gui_name>
        <description language="en">D18</description>
        <device_register high_bit="63" low_bit="0" name="V18" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D19" size="8">
        <gui_name language="en">D19</gui_name>
        <description language="en">D19</description>
        <device_register high_bit="63" low_bit="0" name="V19" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D20" size="8">
        <gui_name language="en">D20</gui_name>
        <description language="en">D20</description>
        <device_register high_bit="63" low_bit="0" name="V20" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D21" size="8">
        <gui_name language="en">D21</gui_name>
        <description language="en">D21</description>
        <device_register high_bit="63" low_bit="0" name="V21" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D22" size="8">
        <gui_name language="en">D22</gui_name>
        <description language="en">D22</description>
        <device_register high_bit="63" low_bit="0" name="V22" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D23" size="8">
        <gui_name language="en">D23</gui_name>
        <description language="en">D23</description>
        <device_register high_bit="63" low_bit="0" name="V23" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D24" size="8">
        <gui_name language="en">D24</gui_name>
        <description language="en">D24</description>
        <device_register high_bit="63" low_bit="0" name="V24" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D25" size="8">
        <gui_name language="en">D25</gui_name>
        <description language="en">D25</description>
        <device_register high_bit="63" low_bit="0" name="V25" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D26" size="8">
        <gui_name language="en">D26</gui_name>
        <description language="en">D26</description>
        <device_register high_bit="63" low_bit="0" name="V26" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D27" size="8">
        <gui_name language="en">D27</gui_name>
        <description language="en">D27</description>
        <device_register high_bit="63" low_bit="0" name="V27" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D28" size="8">
        <gui_name language="en">D28</gui_name>
        <description language="en">D28</description>
        <device_register high_bit="63" low_bit="0" name="V28" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D29" size="8">
        <gui_name language="en">D29</gui_name>
        <description language="en">D29</description>
        <device_register high_bit="63" low_bit="0" name="V29" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D30" size="8">
        <gui_name language="en">D30</gui_name>
        <description language="en">D30</description>
        <device_register high_bit="63" low_bit="0" name="V30" shift="0"/>
      </register>
      <register access="RW" format="Float" name="D31" size="8">
        <gui_name language="en">D31</gui_name>
        <description language="en">D31</description>
        <device_register high_bit="63" low_bit="0" name="V31" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Single" xml:base="Registers/SIMD/V8_AARCH64_SIMD.xml">
      <gui_name language="en">Single</gui_name>
      <description language="en">32-bit registers</description>
      <register access="RW" format="Float" name="S0" size="4">
        <gui_name language="en">S0</gui_name>
        <description language="en">S0</description>
        <device_register high_bit="31" low_bit="0" name="V0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S1" size="4">
        <gui_name language="en">S1</gui_name>
        <description language="en">S1</description>
        <device_register high_bit="31" low_bit="0" name="V1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S2" size="4">
        <gui_name language="en">S2</gui_name>
        <description language="en">S2</description>
        <device_register high_bit="31" low_bit="0" name="V2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S3" size="4">
        <gui_name language="en">S3</gui_name>
        <description language="en">S3</description>
        <device_register high_bit="31" low_bit="0" name="V3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S4" size="4">
        <gui_name language="en">S4</gui_name>
        <description language="en">S4</description>
        <device_register high_bit="31" low_bit="0" name="V4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S5" size="4">
        <gui_name language="en">S5</gui_name>
        <description language="en">S5</description>
        <device_register high_bit="31" low_bit="0" name="V5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S6" size="4">
        <gui_name language="en">S6</gui_name>
        <description language="en">S6</description>
        <device_register high_bit="31" low_bit="0" name="V6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S7" size="4">
        <gui_name language="en">S7</gui_name>
        <description language="en">S7</description>
        <device_register high_bit="31" low_bit="0" name="V7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S8" size="4">
        <gui_name language="en">S8</gui_name>
        <description language="en">S8</description>
        <device_register high_bit="31" low_bit="0" name="V8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S9" size="4">
        <gui_name language="en">S9</gui_name>
        <description language="en">S9</description>
        <device_register high_bit="31" low_bit="0" name="V9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S10" size="4">
        <gui_name language="en">S10</gui_name>
        <description language="en">S10</description>
        <device_register high_bit="31" low_bit="0" name="V10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S11" size="4">
        <gui_name language="en">S11</gui_name>
        <description language="en">S11</description>
        <device_register high_bit="31" low_bit="0" name="V11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S12" size="4">
        <gui_name language="en">S12</gui_name>
        <description language="en">S12</description>
        <device_register high_bit="31" low_bit="0" name="V12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S13" size="4">
        <gui_name language="en">S13</gui_name>
        <description language="en">S13</description>
        <device_register high_bit="31" low_bit="0" name="V13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S14" size="4">
        <gui_name language="en">S14</gui_name>
        <description language="en">S14</description>
        <device_register high_bit="31" low_bit="0" name="V14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S15" size="4">
        <gui_name language="en">S15</gui_name>
        <description language="en">S15</description>
        <device_register high_bit="31" low_bit="0" name="V15" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S16" size="4">
        <gui_name language="en">S16</gui_name>
        <description language="en">S16</description>
        <device_register high_bit="31" low_bit="0" name="V16" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S17" size="4">
        <gui_name language="en">S17</gui_name>
        <description language="en">S17</description>
        <device_register high_bit="31" low_bit="0" name="V17" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S18" size="4">
        <gui_name language="en">S18</gui_name>
        <description language="en">S18</description>
        <device_register high_bit="31" low_bit="0" name="V18" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S19" size="4">
        <gui_name language="en">S19</gui_name>
        <description language="en">S19</description>
        <device_register high_bit="31" low_bit="0" name="V19" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S20" size="4">
        <gui_name language="en">S20</gui_name>
        <description language="en">S20</description>
        <device_register high_bit="31" low_bit="0" name="V20" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S21" size="4">
        <gui_name language="en">S21</gui_name>
        <description language="en">S21</description>
        <device_register high_bit="31" low_bit="0" name="V21" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S22" size="4">
        <gui_name language="en">S22</gui_name>
        <description language="en">S22</description>
        <device_register high_bit="31" low_bit="0" name="V22" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S23" size="4">
        <gui_name language="en">S23</gui_name>
        <description language="en">S23</description>
        <device_register high_bit="31" low_bit="0" name="V23" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S24" size="4">
        <gui_name language="en">S24</gui_name>
        <description language="en">S24</description>
        <device_register high_bit="31" low_bit="0" name="V24" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S25" size="4">
        <gui_name language="en">S25</gui_name>
        <description language="en">S25</description>
        <device_register high_bit="31" low_bit="0" name="V25" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S26" size="4">
        <gui_name language="en">S26</gui_name>
        <description language="en">S26</description>
        <device_register high_bit="31" low_bit="0" name="V26" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S27" size="4">
        <gui_name language="en">S27</gui_name>
        <description language="en">S27</description>
        <device_register high_bit="31" low_bit="0" name="V27" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S28" size="4">
        <gui_name language="en">S28</gui_name>
        <description language="en">S28</description>
        <device_register high_bit="31" low_bit="0" name="V28" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S29" size="4">
        <gui_name language="en">S29</gui_name>
        <description language="en">S29</description>
        <device_register high_bit="31" low_bit="0" name="V29" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S30" size="4">
        <gui_name language="en">S30</gui_name>
        <description language="en">S30</description>
        <device_register high_bit="31" low_bit="0" name="V30" shift="0"/>
      </register>
      <register access="RW" format="Float" name="S31" size="4">
        <gui_name language="en">S31</gui_name>
        <description language="en">S31</description>
        <device_register high_bit="31" low_bit="0" name="V31" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Half" xml:base="Registers/SIMD/V8_AARCH64_SIMD.xml">
      <gui_name language="en">Half</gui_name>
      <description language="en">16-bit registers</description>
      <register access="RW" format="Float" name="H0" size="2">
        <gui_name language="en">H0</gui_name>
        <description language="en">H0</description>
        <device_register high_bit="15" low_bit="0" name="V0" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H1" size="2">
        <gui_name language="en">H1</gui_name>
        <description language="en">H1</description>
        <device_register high_bit="15" low_bit="0" name="V1" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H2" size="2">
        <gui_name language="en">H2</gui_name>
        <description language="en">H2</description>
        <device_register high_bit="15" low_bit="0" name="V2" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H3" size="2">
        <gui_name language="en">H3</gui_name>
        <description language="en">H3</description>
        <device_register high_bit="15" low_bit="0" name="V3" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H4" size="2">
        <gui_name language="en">H4</gui_name>
        <description language="en">H4</description>
        <device_register high_bit="15" low_bit="0" name="V4" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H5" size="2">
        <gui_name language="en">H5</gui_name>
        <description language="en">H5</description>
        <device_register high_bit="15" low_bit="0" name="V5" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H6" size="2">
        <gui_name language="en">H6</gui_name>
        <description language="en">H6</description>
        <device_register high_bit="15" low_bit="0" name="V6" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H7" size="2">
        <gui_name language="en">H7</gui_name>
        <description language="en">H7</description>
        <device_register high_bit="15" low_bit="0" name="V7" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H8" size="2">
        <gui_name language="en">H8</gui_name>
        <description language="en">H8</description>
        <device_register high_bit="15" low_bit="0" name="V8" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H9" size="2">
        <gui_name language="en">H9</gui_name>
        <description language="en">H9</description>
        <device_register high_bit="15" low_bit="0" name="V9" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H10" size="2">
        <gui_name language="en">H10</gui_name>
        <description language="en">H10</description>
        <device_register high_bit="15" low_bit="0" name="V10" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H11" size="2">
        <gui_name language="en">H11</gui_name>
        <description language="en">H11</description>
        <device_register high_bit="15" low_bit="0" name="V11" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H12" size="2">
        <gui_name language="en">H12</gui_name>
        <description language="en">H12</description>
        <device_register high_bit="15" low_bit="0" name="V12" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H13" size="2">
        <gui_name language="en">H13</gui_name>
        <description language="en">H13</description>
        <device_register high_bit="15" low_bit="0" name="V13" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H14" size="2">
        <gui_name language="en">H14</gui_name>
        <description language="en">H14</description>
        <device_register high_bit="15" low_bit="0" name="V14" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H15" size="2">
        <gui_name language="en">H15</gui_name>
        <description language="en">H15</description>
        <device_register high_bit="15" low_bit="0" name="V15" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H16" size="2">
        <gui_name language="en">H16</gui_name>
        <description language="en">H16</description>
        <device_register high_bit="15" low_bit="0" name="V16" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H17" size="2">
        <gui_name language="en">H17</gui_name>
        <description language="en">H17</description>
        <device_register high_bit="15" low_bit="0" name="V17" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H18" size="2">
        <gui_name language="en">H18</gui_name>
        <description language="en">H18</description>
        <device_register high_bit="15" low_bit="0" name="V18" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H19" size="2">
        <gui_name language="en">H19</gui_name>
        <description language="en">H19</description>
        <device_register high_bit="15" low_bit="0" name="V19" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H20" size="2">
        <gui_name language="en">H20</gui_name>
        <description language="en">H20</description>
        <device_register high_bit="15" low_bit="0" name="V20" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H21" size="2">
        <gui_name language="en">H21</gui_name>
        <description language="en">H21</description>
        <device_register high_bit="15" low_bit="0" name="V21" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H22" size="2">
        <gui_name language="en">H22</gui_name>
        <description language="en">H22</description>
        <device_register high_bit="15" low_bit="0" name="V22" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H23" size="2">
        <gui_name language="en">H23</gui_name>
        <description language="en">H23</description>
        <device_register high_bit="15" low_bit="0" name="V23" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H24" size="2">
        <gui_name language="en">H24</gui_name>
        <description language="en">H24</description>
        <device_register high_bit="15" low_bit="0" name="V24" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H25" size="2">
        <gui_name language="en">H25</gui_name>
        <description language="en">H25</description>
        <device_register high_bit="15" low_bit="0" name="V25" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H26" size="2">
        <gui_name language="en">H26</gui_name>
        <description language="en">H26</description>
        <device_register high_bit="15" low_bit="0" name="V26" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H27" size="2">
        <gui_name language="en">H27</gui_name>
        <description language="en">H27</description>
        <device_register high_bit="15" low_bit="0" name="V27" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H28" size="2">
        <gui_name language="en">H28</gui_name>
        <description language="en">H28</description>
        <device_register high_bit="15" low_bit="0" name="V28" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H29" size="2">
        <gui_name language="en">H29</gui_name>
        <description language="en">H29</description>
        <device_register high_bit="15" low_bit="0" name="V29" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H30" size="2">
        <gui_name language="en">H30</gui_name>
        <description language="en">H30</description>
        <device_register high_bit="15" low_bit="0" name="V30" shift="0"/>
      </register>
      <register access="RW" format="Float" name="H31" size="2">
        <gui_name language="en">H31</gui_name>
        <description language="en">H31</description>
        <device_register high_bit="15" low_bit="0" name="V31" shift="0"/>
      </register>
    </register_group>

    <!--     <xi:include href="Registers/SIMD/V8_AARCH64_SIMD.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/>-->
  </cr:register_list>
  <cr:register_list filter="A35_AARCH32" name="System">

    <register_group xmlns="http://www.arm.com/core_reg" name="Address" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Address.xml">
      <gui_name language="en">Address</gui_name>
      <description language="en">Address</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats12nsopr.html" name="ATS12NSOPR" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only PL1 Read</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL1 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats12nsopw.html" name="ATS12NSOPW" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only PL1 Write</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL1 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats12nsour.html" name="ATS12NSOUR" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only Unprivileged Read</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL0 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats12nsouw.html" name="ATS12NSOUW" size="4">
        <gui_name language="en">Address Translate Stages 1 and 2 Non-secure Only Unprivileged Write</gui_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for PL0 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1cpr.html" name="ATS1CPR" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state PL1 Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL1 and the current Security state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1cpw.html" name="ATS1CPW" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state PL1 Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL1 and the current Security state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1cur.html" name="ATS1CUR" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state Unprivileged Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL0 and the current Security state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1cuw.html" name="ATS1CUW" size="4">
        <gui_name language="en">Address Translate Stage 1 Current state Unprivileged Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL0 and the current Security state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1hr.html" name="ATS1HR" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1hw.html" name="ATS1HW" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="PAR" size="4">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="PAR_64" size="8">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="S_PAR" size="4">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="S_PAR_64" size="8">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="N_PAR" size="4">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-par.html" name="N_PAR_64" size="8">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">When updating the PAR with the result of the translation operation, this bit is set as follows:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PAR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Cache" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Cache.xml">
      <gui_name language="en">Cache</gui_name>
      <description language="en">Cache</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-bpiall.html" name="BPIALL" size="4">
        <gui_name language="en">Branch Predictor Invalidate All</gui_name>
        <description language="en">Invalidate all entries from branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-bpiallis.html" name="BPIALLIS" size="4">
        <gui_name language="en">Branch Predictor Invalidate All, Inner Shareable</gui_name>
        <description language="en">Invalidate all entries from branch predictors Inner Shareable.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-bpimva.html" name="BPIMVA" size="4">
        <gui_name language="en">Branch Predictor Invalidate by VA</gui_name>
        <description language="en">Invalidate virtual address from branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dccimvac.html" name="DCCIMVAC" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by VA to PoC</gui_name>
        <description language="en">Clean and Invalidate data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dccisw.html" name="DCCISW" size="4">
        <gui_name language="en">Data Cache line Clean and Invalidate by Set/Way</gui_name>
        <description language="en">Clean and Invalidate data or unified cache line by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dccmvac.html" name="DCCMVAC" size="4">
        <gui_name language="en">Data Cache line Clean by VA to PoC</gui_name>
        <description language="en">Clean data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dccmvau.html" name="DCCMVAU" size="4">
        <gui_name language="en">Data Cache line Clean by VA to PoU</gui_name>
        <description language="en">Clean data or unified cache line by virtual address to PoU.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dccsw.html" name="DCCSW" size="4">
        <gui_name language="en">Data Cache line Clean by Set/Way</gui_name>
        <description language="en">Clean data or unified cache line by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dcimvac.html" name="DCIMVAC" size="4">
        <gui_name language="en">Data Cache line Invalidate by VA to PoC</gui_name>
        <description language="en">Invalidate data or unified cache line by virtual address to PoC.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dcisw.html" name="DCISW" size="4">
        <gui_name language="en">Data Cache line Invalidate by Set/Way</gui_name>
        <description language="en">Invalidate data or unified cache line by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-iciallu.html" name="ICIALLU" size="4">
        <gui_name language="en">Instruction Cache Invalidate All to PoU</gui_name>
        <description language="en">Invalidate all instruction caches to PoU. If branch predictors are architecturally visible, also flush branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icialluis.html" name="ICIALLUIS" size="4">
        <gui_name language="en">Instruction Cache Invalidate All to PoU, Inner Shareable</gui_name>
        <description language="en">Invalidate all instruction caches Inner Shareable to PoU. If branch predictors are architecturally visible, also flush branch predictors.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icimvau.html" name="ICIMVAU" size="4">
        <gui_name language="en">Instruction Cache line Invalidate by VA to PoU</gui_name>
        <description language="en">Invalidate instruction cache line by virtual address to PoU.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Debug" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Debug.xml">
      <gui_name language="en">Debug</gui_name>
      <description language="en">Debug</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgauthstatus.html" name="DBGAUTHSTATUS" size="4">
        <gui_name language="en">Debug Authentication Status register</gui_name>
        <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug.</description>
        <bitField enumerationId="DBGAUTHSTATUS_SNID" name="SNID">
          <gui_name language="en">SNID</gui_name>
          <description language="en">Secure non-invasive debug.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_SID" name="SID">
          <gui_name language="en">SID</gui_name>
          <description language="en">Secure invasive debug.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_NSNID" name="NSNID">
          <gui_name language="en">NSNID</gui_name>
          <description language="en">Non-secure non-invasive debug.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_NSID" name="NSID">
          <gui_name language="en">NSID</gui_name>
          <description language="en">Non-secure invasive debug.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR0" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR2" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR3" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR4" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR5" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR6" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR7" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR8" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR9" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR10" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR11" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR12" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR13" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR14" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR15" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
        <bitField enumerationId="DBGBCR_n_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR0" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR1" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR2" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR3" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR4" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR5" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR6" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR7" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR8" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR9" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR10" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR11" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR12" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR13" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR14" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR15" size="4">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR0" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR1" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR2" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR3" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR4" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR5" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR6" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR7" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR8" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR9" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR10" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR11" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR12" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR13" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR14" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR15" size="4">
        <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
        <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">VMID value for comparison.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgclaimclr.html" name="DBGCLAIMCLR" size="4">
        <gui_name language="en">Debug Claim Tag Clear register</gui_name>
        <description language="en">Used by software to read the values of the CLAIM tag bits, and to clear these bits to 0...</description>
        <bitField name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Read or clear CLAIM tag bits. Reading this field returns the current value of the CLAIM tag bits.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgclaimset.html" name="DBGCLAIMSET" size="4">
        <gui_name language="en">Debug Claim Tag Set register</gui_name>
        <description language="en">Used by software to set the CLAIM tag bits to 1...</description>
        <bitField name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Set CLAIM tag bits. RAO.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdccint.html" name="DBGDCCINT" size="4">
        <gui_name language="en">DCC Interrupt Enable Register</gui_name>
        <description language="en">Enables interrupt requests to be signaled based on the DCC status flags.</description>
        <bitField enumerationId="DBGDCCINT_RX" name="RX">
          <gui_name language="en">RX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRRX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="DBGDCCINT_TX" name="TX">
          <gui_name language="en">TX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRTX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[29]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid.html" name="DBGDEVID" size="4">
        <gui_name language="en">Debug Device ID register 0</gui_name>
        <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
        <bitField enumerationId="DBGDEVID_CIDMask" name="CIDMask">
          <gui_name language="en">CIDMask</gui_name>
          <description language="en">Indicates the level of support for the Context ID matching breakpoint masking capability.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_AuxRegs" name="AuxRegs">
          <gui_name language="en">AuxRegs</gui_name>
          <description language="en">Indicates support for Auxiliary registers.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_DoubleLock" name="DoubleLock">
          <gui_name language="en">DoubleLock</gui_name>
          <description language="en">Indicates the presence of the DBGOSDLR, OS Double Lock Register.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_VirtExtns" name="VirtExtns">
          <gui_name language="en">VirtExtns</gui_name>
          <description language="en">Indicates whether EL2 is implemented.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_VectorCatch" name="VectorCatch">
          <gui_name language="en">VectorCatch</gui_name>
          <description language="en">Defines the form of Vector Catch exception implemented.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_BPAddrMask" name="BPAddrMask">
          <gui_name language="en">BPAddrMask</gui_name>
          <description language="en">Indicates the level of support for the instruction address matching breakpoint masking capability.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_WPAddrMask" name="WPAddrMask">
          <gui_name language="en">WPAddrMask</gui_name>
          <description language="en">Indicates the level of support for the data address matching watchpoint masking capability.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="DBGDEVID_PCSample" name="PCSample">
          <gui_name language="en">PCSample</gui_name>
          <description language="en">Indicates the level of PC Sample-based Profiling support using external debug registers.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid1.html" name="DBGDEVID1" size="4">
        <gui_name language="en">Debug Device ID register 1</gui_name>
        <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
        <bitField enumerationId="DBGDEVID1_PCSROffset" name="PCSROffset">
          <gui_name language="en">PCSROffset</gui_name>
          <description language="en">This field indicates the offset applied to PC samples returned by reads of EDPCSR.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid2.html" name="DBGDEVID2" size="4">
        <gui_name language="en">Debug Device ID register 2</gui_name>
        <description language="en">Reserved for future descriptions of features of the debug implementation.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdidr.html" name="DBGDIDR" size="4">
        <gui_name language="en">Debug ID Register</gui_name>
        <description language="en">Specifies which version of the Debug architecture is implemented, and some features of the debug implementation.</description>
        <bitField name="WRPs">
          <gui_name language="en">WRPs</gui_name>
          <description language="en">The number of watchpoints implemented, minus 1.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField name="BRPs">
          <gui_name language="en">BRPs</gui_name>
          <description language="en">The number of breakpoints implemented, minus 1.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="CTX_CMPs">
          <gui_name language="en">CTX_CMPs</gui_name>
          <description language="en">The number of breakpoints that can be used for Context matching, minus 1.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="DBGDIDR_Version" name="Version">
          <gui_name language="en">Version</gui_name>
          <description language="en">The Debug architecture version.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="nSUHD_imp">
          <gui_name language="en">nSUHD_imp</gui_name>
          <description language="en">In ARMv7-A, was Secure User Halting Debug not implemented.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="DBGDIDR_SE_imp" name="SE_imp">
          <gui_name language="en">SE_imp</gui_name>
          <description language="en">EL3 implemented.</description>
          <definition>[12]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdrar.html" name="DBGDRAR" size="4">
        <gui_name language="en">Debug ROM Address Register</gui_name>
        <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
        <bitField name="ROMADDR_31_12">
          <gui_name language="en">ROMADDR_31_12</gui_name>
          <description language="en">Bits[31:12] of the ROM table physical address. Bits [11:0] of the address are zero.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField enumerationId="DBGDRAR_Valid" name="Valid">
          <gui_name language="en">Valid</gui_name>
          <description language="en">This field indicates whether the ROM Table address is valid.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdrar.html" name="DBGDRAR_64" size="8">
        <gui_name language="en">Debug ROM Address Register</gui_name>
        <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
        <bitField name="ROMADDR_47_12">
          <gui_name language="en">ROMADDR_47_12</gui_name>
          <description language="en">Bits[47:12] of the ROM table physical address.</description>
          <definition>[47:12]</definition>
        </bitField>
        <bitField enumerationId="DBGDRAR_Valid" name="Valid">
          <gui_name language="en">Valid</gui_name>
          <description language="en">This field indicates whether the ROM Table address is valid.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdsar.html" name="DBGDSAR" size="4">
        <gui_name language="en">Debug Self Address Register</gui_name>
        <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
        <bitField name="Offset">
          <gui_name language="en">Offset</gui_name>
          <description language="en">This register value is RAZ.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdsar.html" name="DBGDSAR_64" size="8">
        <gui_name language="en">Debug Self Address Register</gui_name>
        <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
        <bitField name="Offset">
          <gui_name language="en">Offset</gui_name>
          <description language="en">This register value is RAZ.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdscrext.html" name="DBGDSCRext" size="4">
        <gui_name language="en">Debug Status and Control Register, External View</gui_name>
        <description language="en">Main control register for the debug implementation.</description>
        <bitField name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">DTRRX full. Used for save/restore of EDSCR.RXfull.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">DTRTX full. Used for save/restore of EDSCR.TXfull.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="RXO">
          <gui_name language="en">RXO</gui_name>
          <description language="en">Used for save/restore of EDSCR.RXO.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="TXU">
          <gui_name language="en">TXU</gui_name>
          <description language="en">Used for save/restore of EDSCR.TXU.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField name="INTdis">
          <gui_name language="en">INTdis</gui_name>
          <description language="en">Used for save/restore of EDSCR.INTdis.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Used for save/restore of EDSCR.TDA.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure status. Returns the inverse of IsSecure(). This bit is RO.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRext_SPNIDdis" name="SPNIDdis">
          <gui_name language="en">SPNIDdis</gui_name>
          <description language="en">Secure privileged profiling disabled status bit. This bit is RO.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRext_SPIDdis" name="SPIDdis">
          <gui_name language="en">SPIDdis</gui_name>
          <description language="en">Secure privileged AArch32 invasive self-hosted debug disabled status bit. This bit is RO and depends on the value of SDCR.SPD and the pseudocode function AArch32.SelfHostedSecurePrivilegedInvasiveDebugEnabled().</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRext_MDBGen" name="MDBGen">
          <gui_name language="en">MDBGen</gui_name>
          <description language="en">Monitor debug events enable. Enable Breakpoint, Watchpoint, and Vector Catch exceptions.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField name="HDE">
          <gui_name language="en">HDE</gui_name>
          <description language="en">Used for save/restore of EDSCR.HDE.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRext_UDCCdis" name="UDCCdis">
          <gui_name language="en">UDCCdis</gui_name>
          <description language="en">Traps EL0 accesses to the DCC registers to Undefined mode.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField name="ERR">
          <gui_name language="en">ERR</gui_name>
          <description language="en">Used for save/restore of EDSCR.ERR.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRext_MOE" name="MOE">
          <gui_name language="en">MOE</gui_name>
          <description language="en">Method of Entry for debug exception.</description>
          <definition>[5:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdscrint.html" name="DBGDSCRint" size="4">
        <gui_name language="en">Debug Status and Control Register, Internal View</gui_name>
        <description language="en">Main control register for the debug implementation. This is an internal, read-only view.</description>
        <bitField name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">DTRRX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">DTRTX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure status.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField name="SPNIDdis">
          <gui_name language="en">SPNIDdis</gui_name>
          <description language="en">Secure privileged non-invasive debug disable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField name="SPIDdis">
          <gui_name language="en">SPIDdis</gui_name>
          <description language="en">Secure privileged invasive debug disable.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField name="MDBGen">
          <gui_name language="en">MDBGen</gui_name>
          <description language="en">Monitor debug events enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField name="UDCCdis">
          <gui_name language="en">UDCCdis</gui_name>
          <description language="en">User mode access to Debug Communications Channel disable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="DBGDSCRint_MOE" name="MOE">
          <gui_name language="en">MOE</gui_name>
          <description language="en">Method of Entry for debug exception.</description>
          <definition>[5:2]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgosdlr.html" name="DBGOSDLR" size="4">
        <gui_name language="en">Debug OS Double Lock Register</gui_name>
        <description language="en">Locks out the external debug interface.</description>
        <bitField enumerationId="DBGOSDLR_DLK" name="DLK">
          <gui_name language="en">DLK</gui_name>
          <description language="en">OS Double Lock control bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoseccr.html" name="DBGOSECCR" size="4">
        <gui_name language="en">Debug OS Lock Exception Catch Control Register</gui_name>
        <description language="en">Provides a mechanism for an operating system to access the contents of EDECCR that are otherwise invisible to software, so it can save/restore the contents of EDECCR over powerdown on behalf of the external debugger.</description>
        <bitField name="EDECCR">
          <gui_name language="en">EDECCR</gui_name>
          <description language="en">Used for save/restore to EDECCR over powerdown.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoslar.html" name="DBGOSLAR" size="4">
        <gui_name language="en">Debug OS Lock Access Register</gui_name>
        <description language="en">Provides a lock for the debug registers. The OS lock also disables some Software debug events.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoslsr.html" name="DBGOSLSR" size="4">
        <gui_name language="en">Debug OS Lock Status Register</gui_name>
        <description language="en">Provides status information for the OS lock.</description>
        <bitField name="OSLM_1">
          <gui_name language="en">OSLM_1</gui_name>
          <description language="en">See below for description of the OSLM field.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="nTT">
          <gui_name language="en">nTT</gui_name>
          <description language="en">Not 32-bit access. This bit is always RAZ. It indicates that a 32-bit access is needed to write the key to the OS Lock Access Register.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="DBGOSLSR_OSLK" name="OSLK">
          <gui_name language="en">OSLK</gui_name>
          <description language="en">OS Lock Status.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="DBGOSLSR_OSLM_0" name="OSLM_0">
          <gui_name language="en">OSLM_0</gui_name>
          <description language="en">OS lock model implemented. Identifies the form of OS save and restore mechanism implemented.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgprcr.html" name="DBGPRCR" size="4">
        <gui_name language="en">Debug Power Control Register</gui_name>
        <description language="en">Controls behavior of the PE on powerdown request.</description>
        <bitField enumerationId="DBGPRCR_CORENPDRQ" name="CORENPDRQ">
          <gui_name language="en">CORENPDRQ</gui_name>
          <description language="en">Core no powerdown request. Requests emulation of powerdown.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgvcr.html" name="DBGVCR" size="4">
        <gui_name language="en">Debug Vector Catch Register</gui_name>
        <description language="en">Controls Vector Catch debug events.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR0" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR2" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR3" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR4" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR5" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR6" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR7" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR8" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR9" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR10" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR11" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR12" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR13" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR14" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR15" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
        <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwfar.html" name="DBGWFAR" size="4">
        <gui_name language="en">Debug Watchpoint Fault Address Register</gui_name>
        <description language="en">Previously returned information about the address of the instruction that accessed a watchpointed address. Is now deprecated and RES0.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR0" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR1" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR2" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR3" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR4" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR5" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR6" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR7" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR8" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR9" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR10" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR11" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR12" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR13" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR14" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR15" size="4">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[31:2] of the address value for comparison.</description>
          <definition>[31:2]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hdcr.html" name="HDCR" size="4">
        <gui_name language="en">Hyp Debug Control Register</gui_name>
        <description language="en">Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</description>
        <bitField enumerationId="HDCR_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps Non-secure EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access. Traps Non-secure EL1 System register accesses to the powerdown debug registers to Hyp mode.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap debug access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HDCR_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hypervisor Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps Non-secure EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR to Hyp mode.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL1 modes, and from Non-secure EL0 modes if unprivileged access is enabled.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sdcr-s.html" name="SDCR" size="4">
        <gui_name language="en">Secure Debug Control Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, controls debug and performance monitors functionality in Secure state.</description>
        <bitField enumerationId="SDCR_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="SDCR_EDAD" name="EDAD">
          <gui_name language="en">EDAD</gui_name>
          <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SDCR_SPME" name="SPME">
          <gui_name language="en">SPME</gui_name>
          <description language="en">Secure Performance Monitors enable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="SDCR_SPD" name="SPD">
          <gui_name language="en">SPD</gui_name>
          <description language="en">AArch32 Secure privileged debug. Enables or disables debug exceptions from Secure state, other than Breakpoint Instruction exceptions.</description>
          <definition>[15:14]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sder-s.html" name="SDER" size="4">
        <gui_name language="en">Secure Debug Enable Register</gui_name>
        <description language="en">Controls invasive and non-invasive debug in the Secure EL0 mode.</description>
        <bitField enumerationId="SDER_SUNIDEN" name="SUNIDEN">
          <gui_name language="en">SUNIDEN</gui_name>
          <description language="en">Secure User Non-Invasive Debug Enable:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SDER_SUIDEN" name="SUIDEN">
          <gui_name language="en">SUIDEN</gui_name>
          <description language="en">Secure User Invasive Debug Enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Exception" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Exception.xml">
      <gui_name language="en">Exception</gui_name>
      <description language="en">Exception</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="S_ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="N_ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="S_AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="N_AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfar.html" name="DFAR" size="4">
        <gui_name language="en">Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfar.html" name="S_DFAR" size="4">
        <gui_name language="en">Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfar.html" name="N_DFAR" size="4">
        <gui_name language="en">Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfsr.html" name="DFSR" size="4">
        <gui_name language="en">Data Fault Status Register</gui_name>
        <description language="en">Holds status information about the last data fault.</description>
        <bitField enumerationId="DFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="DFSR_AET" name="AET">
          <gui_name language="en">AET</gui_name>
          <description language="en">Asynchronous Error Type. When the RAS Extension is implemented, this field describes the state of the PE after taking an asynchronous Data Abort exception.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DFSR_CM" name="CM">
          <gui_name language="en">CM</gui_name>
          <description language="en">Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="DFSR_WnR" name="WnR">
          <gui_name language="en">WnR</gui_name>
          <description language="en">Write not Read bit. Indicates whether the abort was caused by a write or a read instruction.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="DFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfsr.html" name="S_DFSR" size="4">
        <gui_name language="en">Data Fault Status Register</gui_name>
        <description language="en">Holds status information about the last data fault.</description>
        <bitField enumerationId="DFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="DFSR_AET" name="AET">
          <gui_name language="en">AET</gui_name>
          <description language="en">Asynchronous Error Type. When the RAS Extension is implemented, this field describes the state of the PE after taking an asynchronous Data Abort exception.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DFSR_CM" name="CM">
          <gui_name language="en">CM</gui_name>
          <description language="en">Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="DFSR_WnR" name="WnR">
          <gui_name language="en">WnR</gui_name>
          <description language="en">Write not Read bit. Indicates whether the abort was caused by a write or a read instruction.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="DFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dfsr.html" name="N_DFSR" size="4">
        <gui_name language="en">Data Fault Status Register</gui_name>
        <description language="en">Holds status information about the last data fault.</description>
        <bitField enumerationId="DFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="DFSR_AET" name="AET">
          <gui_name language="en">AET</gui_name>
          <description language="en">Asynchronous Error Type. When the RAS Extension is implemented, this field describes the state of the PE after taking an asynchronous Data Abort exception.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DFSR_CM" name="CM">
          <gui_name language="en">CM</gui_name>
          <description language="en">Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="DFSR_WnR" name="WnR">
          <gui_name language="en">WnR</gui_name>
          <description language="en">Write not Read bit. Indicates whether the abort was caused by a write or a read instruction.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="DFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hadfsr.html" name="HADFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Data Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-haifsr.html" name="HAIFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Prefetch Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hdfar.html" name="HDFAR" size="4">
        <gui_name language="en">Hyp Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hifar.html" name="HIFAR" size="4">
        <gui_name language="en">Hyp Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hpfar.html" name="HPFAR" size="4">
        <gui_name language="en">Hyp IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to Hyp mode.</description>
        <bitField name="FIPA_39_12">
          <gui_name language="en">FIPA_39_12</gui_name>
          <description language="en">Bits [39:12] of the faulting intermediate physical address.</description>
          <definition>[31:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hsr.html" name="HSR" size="4">
        <gui_name language="en">Hyp Syndrome Register</gui_name>
        <description language="en">Holds syndrome information for an exception taken to Hyp mode.</description>
        <bitField enumerationId="HSR_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="HSR_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction length bit. Indicates the size of the instruction that has been trapped to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x5 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x8">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction. Valid only when AM[2] is 0, indicating an immediate form of the LDC or STC instruction.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField enumerationId="HSR_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="HSR_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_TA" name="TA">
            <gui_name language="en">TA</gui_name>
            <description language="en">Indicates trapped use of Advanced SIMD functionality.</description>
            <definition>[5]</definition>
          </bitField>
          <bitField name="coproc">
            <gui_name language="en">coproc</gui_name>
            <description language="en">When the TA field returns the value 1, this field returns the value 1010, otherwise this field is RES0.</description>
            <definition>[3:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x11 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x12">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x13">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_CCKNOWNPASS" name="CCKNOWNPASS">
            <gui_name language="en">CCKNOWNPASS</gui_name>
            <description language="en">Indicates whether the instruction might have failed its condition code check.</description>
            <definition>[19]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="HSR_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="HSR_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="HSR_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="HSR_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="HSR_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="HSR_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField enumerationId="HSR_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="HSR_AET" name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en">Asynchronous Error Type.</description>
            <definition>[11]</definition>
          </bitField>
          <bitField enumerationId="HSR_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="HSR_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance. For a synchronous fault, identifies fault that comes from a cache maintenance or address translation instruction.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="HSR_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="HSR_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="HSR_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hvbar.html" name="HVBAR" size="4">
        <gui_name language="en">Hyp Vector Base Address Register</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifar.html" name="IFAR" size="4">
        <gui_name language="en">Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifar.html" name="S_IFAR" size="4">
        <gui_name language="en">Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifar.html" name="N_IFAR" size="4">
        <gui_name language="en">Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifsr.html" name="IFSR" size="4">
        <gui_name language="en">Instruction Fault Status Register</gui_name>
        <description language="en">Holds status information about the last instruction fault.</description>
        <bitField enumerationId="IFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="IFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifsr.html" name="S_IFSR" size="4">
        <gui_name language="en">Instruction Fault Status Register</gui_name>
        <description language="en">Holds status information about the last instruction fault.</description>
        <bitField enumerationId="IFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="IFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ifsr.html" name="N_IFSR" size="4">
        <gui_name language="en">Instruction Fault Status Register</gui_name>
        <description language="en">Holds status information about the last instruction fault.</description>
        <bitField enumerationId="IFSR_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="IFSR_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-isr.html" name="ISR" size="4">
        <gui_name language="en">Interrupt Status Register</gui_name>
        <description language="en">Shows whether any IRQ, FIQ, or external abort is pending. In an implementation that includes EL2, when the register is accessed from Non-secure EL1, a pending interrupt might be a physical interrupt or a virtual interrupt, and the architecture does not provide any mechanism that software executing at Non-secure EL1 can use to determine whether a pending interrupt is physical or virtual. For all other accesses, any indicated interrupt must be a physical interrupt.</description>
        <bitField enumerationId="ISR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Asynchronous external abort pending bit:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ISR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ pending bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ISR_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ pending bit. Indicates whether an FIQ interrupt is pending.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvbar-s.html" name="MVBAR" size="4">
        <gui_name language="en">Monitor Vector Base Address Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, holds the vector base address for any exception that is taken to Monitor mode...</description>
        <bitField name="Reserved">
          <gui_name language="en">Reserved</gui_name>
          <description language="en">Reserved, see Configurations.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vbar.html" name="VBAR" size="4">
        <gui_name language="en">Vector Base Address Register</gui_name>
        <description language="en">When high exception vectors are not selected, holds the vector base address for exceptions that are not taken to Monitor mode or to Hyp mode...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vbar.html" name="S_VBAR" size="4">
        <gui_name language="en">Vector Base Address Register</gui_name>
        <description language="en">When high exception vectors are not selected, holds the vector base address for exceptions that are not taken to Monitor mode or to Hyp mode...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vbar.html" name="N_VBAR" size="4">
        <gui_name language="en">Vector Base Address Register</gui_name>
        <description language="en">When high exception vectors are not selected, holds the vector base address for exceptions that are not taken to Monitor mode or to Hyp mode...</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Float" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Float.xml">
      <gui_name language="en">Float</gui_name>
      <description language="en">Float</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fpexc.html" name="FPEXC" size="4">
        <gui_name language="en">Floating-Point Exception Control register</gui_name>
        <description language="en">Provides a global enable for the implemented Advanced SIMD and floating-point functionality, and reports floating-point status information.</description>
        <bitField name="EX">
          <gui_name language="en">EX</gui_name>
          <description language="en">Exception bit. In ARMv8, this bit is RAZ/WI.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enables access to the Advanced SIMD and floating-point functionality from all Exception levels, except that setting this field to 0 does not disable the following:</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_DEX" name="DEX">
          <gui_name language="en">DEX</gui_name>
          <description language="en">Defined synchronous exception on floating-point execution.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="FP2V">
          <gui_name language="en">FP2V</gui_name>
          <description language="en">FPINST2 instruction valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="VV">
          <gui_name language="en">VV</gui_name>
          <description language="en">VECITR valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_TFV" name="TFV">
          <gui_name language="en">TFV</gui_name>
          <description language="en">Trapped Fault Valid bit. Valid only when the value of FPEXC.DEX is 1. When valid, it indicates the cause of the exception and therefore whether the FPEXC.{IDF, IXF, UFF, OFF, DZF, IOF} bits are valid.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField name="VECITR">
          <gui_name language="en">VECITR</gui_name>
          <description language="en">Vector iteration count. In ARMv8, this field is RES1.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_IDF" name="IDF">
          <gui_name language="en">IDF</gui_name>
          <description language="en">Input Denormal trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Input Denormal exception occurred while FPSCR.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_IXF" name="IXF">
          <gui_name language="en">IXF</gui_name>
          <description language="en">Inexact trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Inexact exception occurred while FPSCR.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_UFF" name="UFF">
          <gui_name language="en">UFF</gui_name>
          <description language="en">Underflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Underflow exception occurred while FPSCR.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_OFF" name="OFF">
          <gui_name language="en">OFF</gui_name>
          <description language="en">Overflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Overflow exception occurred while FPSCR.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_DZF" name="DZF">
          <gui_name language="en">DZF</gui_name>
          <description language="en">Divide by Zero trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether a Divide by Zero exception occurred while FPSCR.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="FPEXC_IOF" name="IOF">
          <gui_name language="en">IOF</gui_name>
          <description language="en">Invalid Operation trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Invalid Operation exception occurred while FPSCR.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fpscr.html" name="FPSCR" size="4">
        <gui_name language="en">Floating-Point Status and Control Register</gui_name>
        <description language="en">Provides floating-point system status information and control.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal floating-point exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact floating-point exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow floating-point exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow floating-point exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Divide by Zero floating-point exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation floating-point exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative floating-point exception bit. This bit is set to 1 to indicate that the Input Denormal floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative floating-point exception bit. This bit is set to 1 to indicate that the Inexact floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Underflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Overflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Divide by Zero cumulative floating-point exception bit. This bit is set to 1 to indicate that the Divide by Zero floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative floating-point exception bit. This bit is set to 1 to indicate that the Invalid Operation floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fpsid.html" name="FPSID" size="4">
        <gui_name language="en">Floating-Point System ID register</gui_name>
        <description language="en">Provides top-level information about the floating-point implementation...</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer codes are the same as those used for the MIDR.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField enumerationId="FPSID_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software bit.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="FPSID_Subarchitecture" name="Subarchitecture">
          <gui_name language="en">Subarchitecture</gui_name>
          <description language="en">Subarchitecture version number.</description>
          <definition>[22:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED part number for the floating-point implementation, assigned by the implementer.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field distinguishes between different production variants of a single product.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the floating-point implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr0.html" name="MVFR0" size="4">
        <gui_name language="en">Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR0_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr1.html" name="MVFR1" size="4">
        <gui_name language="en">Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr2.html" name="MVFR2" size="4">
        <gui_name language="en">Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR2_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR2_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="GIC" xml:base="Registers/System/ARMv8.0/V8_AARCH32_GIC.xml">
      <gui_name language="en">GIC</gui_name>
      <description language="en">GIC</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap0rn.html" name="ICC_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="ICC_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="S_ICC_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="S_ICC_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="S_ICC_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="S_ICC_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="N_ICC_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="N_ICC_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="N_ICC_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ap1rn.html" name="N_ICC_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_asgi1r.html" name="ICC_ASGI1R" size="8">
        <gui_name language="en">Interrupt Controller Alias Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the Security state that is not the current Security state.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_ASGI1R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_bpr0.html" name="ICC_BPR0" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_bpr1.html" name="ICC_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_bpr1.html" name="S_ICC_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_bpr1.html" name="N_ICC_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ctlr.html" name="ICC_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ctlr.html" name="S_ICC_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_ctlr.html" name="N_ICC_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_dir.html" name="ICC_DIR" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_eoir0.html" name="ICC_EOIR0" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 0 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR0 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_eoir1.html" name="ICC_EOIR1" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 1 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_hppir0.html" name="ICC_HPPIR0" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending Group 0 interrupt on the CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_hppir1.html" name="ICC_HPPIR1" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending Group 1 interrupt on the CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_hsre.html" name="ICC_HSRE" size="4">
        <gui_name language="en">Interrupt Controller Hyp System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField enumerationId="ICC_HSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_igrpen0.html" name="ICC_IGRPEN0" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether Group 0 interrupts are enabled or not.</description>
        <bitField enumerationId="ICC_IGRPEN0_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_igrpen1.html" name="ICC_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_igrpen1.html" name="S_ICC_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_igrpen1.html" name="N_ICC_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_mctlr.html" name="ICC_MCTLR" size="4">
        <gui_name language="en">Interrupt Controller Monitor Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_MCTLR_nDS" name="nDS">
          <gui_name language="en">nDS</gui_name>
          <description language="en">Disable Security not supported. Read-only and writes are ignored.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="RM">
          <gui_name language="en">RM</gui_name>
          <description language="en">SBZ.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL1NS" name="EOImode_EL1NS">
          <gui_name language="en">EOImode_EL1NS</gui_name>
          <description language="en">EOI mode for interrupts handled at Non-secure EL1 and EL2.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL1S" name="EOImode_EL1S">
          <gui_name language="en">EOImode_EL1S</gui_name>
          <description language="en">EOI mode for interrupts handled at Secure EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL3" name="EOImode_EL3">
          <gui_name language="en">EOImode_EL3</gui_name>
          <description language="en">EOI mode for interrupts handled at EL3.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_CBPR_EL1NS" name="CBPR_EL1NS">
          <gui_name language="en">CBPR_EL1NS</gui_name>
          <description language="en">Common Binary Point Register, EL1 Non-secure.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_CBPR_EL1S" name="CBPR_EL1S">
          <gui_name language="en">CBPR_EL1S</gui_name>
          <description language="en">Common Binary Point Register, EL1 Secure.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_mgrpen1.html" name="ICC_MGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Monitor Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled or not.</description>
        <bitField enumerationId="ICC_MGRPEN1_EnableGrp1S" name="EnableGrp1S">
          <gui_name language="en">EnableGrp1S</gui_name>
          <description language="en">Enables Group 1 interrupts for the Secure state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_MGRPEN1_EnableGrp1NS" name="EnableGrp1NS">
          <gui_name language="en">EnableGrp1NS</gui_name>
          <description language="en">Enables Group 1 interrupts for the Non-secure state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_msre.html" name="ICC_MSRE" size="4">
        <gui_name language="en">Interrupt Controller Monitor System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL3.</description>
        <bitField enumerationId="ICC_MSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE and ICC_HSRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_pmr.html" name="ICC_PMR" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides an interrupt priority filter. Only interrupts with a higher priority than the value in this register are signaled to the PE.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the CPU interface. If the priority of an interrupt is higher than the value indicated by this field, the interface signals the interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_rpr.html" name="ICC_RPR" size="4">
        <gui_name language="en">Interrupt Controller Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the CPU interface.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the CPU interface. This is the group priority of the current active interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_sgi0r.html" name="ICC_SGI0R" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 0 Register</gui_name>
        <description language="en">Generates Secure Group 0 SGIs.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_SGI0R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_sgi1r.html" name="ICC_SGI1R" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the current Security state.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_SGI1R_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_sre.html" name="ICC_SRE" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL0 and EL1.</description>
        <bitField enumerationId="ICC_SRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_sre.html" name="S_ICC_SRE" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL0 and EL1.</description>
        <bitField enumerationId="ICC_SRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_sre.html" name="N_ICC_SRE" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL0 and EL1.</description>
        <bitField enumerationId="ICC_SRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_eisr.html" name="ICH_EISR" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_elrsr.html" name="ICH_ELRSR" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">Indicates which List registers contain valid interrupts.</description>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_hcr.html" name="ICH_HCR" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR and ICV_DIR.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_misr.html" name="ICH_MISR" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField enumerationId="ICH_MISR_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_vmcr.html" name="ICH_VMCR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_vtr.html" name="ICH_VTR" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap0rn.html" name="ICV_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ap1rn.html" name="ICV_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_bpr0.html" name="ICV_BPR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 0 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_bpr1.html" name="ICV_BPR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for virtual Group 0 and virtual Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_ctlr.html" name="ICV_CTLR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC virtual CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICV_CTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_dir.html" name="ICV_DIR" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Virtual Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified virtual interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the virtual interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_eoir0.html" name="ICV_EOIR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 0 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR0 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_eoir1.html" name="ICV_EOIR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 1 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_hppir0.html" name="ICV_HPPIR0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 0 interrupt on the virtual CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_hppir1.html" name="ICV_HPPIR1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 1 interrupt on the virtual CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_igrpen0.html" name="ICV_IGRPEN0" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 0 interrupts are enabled or not.</description>
        <bitField enumerationId="ICV_IGRPEN0_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_igrpen1.html" name="ICV_IGRPEN1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICV_IGRPEN1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 1 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_pmr.html" name="ICV_PMR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides a virtual interrupt priority filter. Only virtual interrupts with a higher priority than the value in this register are signaled to the PE.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the virtual CPU interface. If the priority of a virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icv_rpr.html" name="ICV_RPR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the virtual CPU interface.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the virtual CPU interface. This is the group priority of the current active virtual interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="ID" xml:base="Registers/System/ARMv8.0/V8_AARCH32_ID.xml">
      <gui_name language="en">ID</gui_name>
      <description language="en">ID</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aidr.html" name="AIDR" size="4">
        <gui_name language="en">Auxiliary ID Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED identification information...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ccsidr.html" name="CCSIDR" size="4">
        <gui_name language="en">Current Cache Size ID Register</gui_name>
        <description language="en">Provides information about the architecture of the currently selected cache.</description>
        <bitField name="UNKNOWN">
          <gui_name language="en">UNKNOWN</gui_name>
          <description language="en">Reserved, UNKNOWN.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">(Number of sets in cache) - 1, therefore a value of 0 indicates 1 set in the cache. The number of sets does not have to be a power of 2.</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField name="Associativity">
          <gui_name language="en">Associativity</gui_name>
          <description language="en">(Associativity of cache) - 1, therefore a value of 0 indicates an associativity of 1. The associativity does not have to be a power of 2.</description>
          <definition>[12:3]</definition>
        </bitField>
        <bitField name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">(Log2(Number of bytes in cache line)) - 4.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-clidr.html" name="CLIDR" size="4">
        <gui_name language="en">Cache Level ID Register</gui_name>
        <description language="en">Identifies the type of cache, or caches, that are implemented at each level and can be managed using the architected cache maintenance instructions that operate by set/way, up to a maximum of seven levels. Also identifies the Level of Coherence (LoC) and Level of Unification (LoU) for the cache hierarchy.</description>
        <bitField enumerationId="CLIDR_ICB" name="ICB">
          <gui_name language="en">ICB</gui_name>
          <description language="en">Inner cache boundary. This field indicates the boundary for caching Inner Cacheable memory regions.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField name="LoUU">
          <gui_name language="en">LoUU</gui_name>
          <description language="en">Level of Unification Uniprocessor for the cache hierarchy.</description>
          <definition>[29:27]</definition>
        </bitField>
        <bitField name="LoC">
          <gui_name language="en">LoC</gui_name>
          <description language="en">Level of Coherence for the cache hierarchy.</description>
          <definition>[26:24]</definition>
        </bitField>
        <bitField name="LoUIS">
          <gui_name language="en">LoUIS</gui_name>
          <description language="en">Level of Unification Inner Shareable for the cache hierarchy.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype7">
          <gui_name language="en">Ctype7</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype6">
          <gui_name language="en">Ctype6</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[17:15]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype5">
          <gui_name language="en">Ctype5</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[14:12]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype4">
          <gui_name language="en">Ctype4</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[11:9]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype3">
          <gui_name language="en">Ctype3</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[8:6]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype2">
          <gui_name language="en">Ctype2</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[5:3]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_Ctype_n" name="Ctype1">
          <gui_name language="en">Ctype1</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-csselr.html" name="CSSELR" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache).</description>
        <bitField enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level of required cache.</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not Data bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-csselr.html" name="S_CSSELR" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache).</description>
        <bitField enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level of required cache.</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not Data bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-csselr.html" name="N_CSSELR" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR, by specifying the required cache level and the cache type (either instruction or data cache).</description>
        <bitField enumerationId="CSSELR_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level of required cache.</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField enumerationId="CSSELR_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not Data bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ctr.html" name="CTR" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches.</description>
        <bitField name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache writeback granule. Log2 of the number of words of the maximum size of memory that can be overwritten as a result of the eviction of a cache entry that has had a memory location in it modified.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives reservation granule. Log2 of the number of words of the maximum size of the reservation granule that has been implemented for the Load-Exclusive and Store-Exclusive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the data caches and unified caches that are controlled by the PE.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="CTR_L1Ip" name="L1Ip">
          <gui_name language="en">L1Ip</gui_name>
          <description language="en">Level 1 instruction cache policy. Indicates the indexing and tagging policy for the L1 instruction cache.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the instruction caches that are controlled by the PE.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fpsid.html" name="FPSID" size="4">
        <gui_name language="en">Floating-Point System ID register</gui_name>
        <description language="en">Provides top-level information about the floating-point implementation...</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">Implementer codes are the same as those used for the MIDR.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField enumerationId="FPSID_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software bit.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="FPSID_Subarchitecture" name="Subarchitecture">
          <gui_name language="en">Subarchitecture</gui_name>
          <description language="en">Subarchitecture version number.</description>
          <definition>[22:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED part number for the floating-point implementation, assigned by the implementer.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field distinguishes between different production variants of a single product.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the floating-point implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_afr0.html" name="ID_AFR0" size="4">
        <gui_name language="en">Auxiliary Feature Register 0</gui_name>
        <description language="en">Provides information about the IMPLEMENTATION DEFINED features of the PE in AArch32 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_dfr0.html" name="ID_DFR0" size="4">
        <gui_name language="en">Debug Feature Register 0</gui_name>
        <description language="en">Provides top level information about the debug system in AArch32 state...</description>
        <bitField enumerationId="ID_DFR0_PerfMon" name="PerfMon">
          <gui_name language="en">PerfMon</gui_name>
          <description language="en">Performance Monitors. Support for System registers-based ARM Performance Monitors Extension, using registers in the coproc == 1111 encoding space, for A and R profile processors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_MProfDbg" name="MProfDbg">
          <gui_name language="en">MProfDbg</gui_name>
          <description language="en">M Profile Debug. Support for memory-mapped debug model for M profile processors.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_MMapTrc" name="MMapTrc">
          <gui_name language="en">MMapTrc</gui_name>
          <description language="en">Memory Mapped Trace. Support for memory-mapped trace model.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_CopTrc" name="CopTrc">
          <gui_name language="en">CopTrc</gui_name>
          <description language="en">Support for System registers-based trace model, using registers in the coproc == 1110 encoding space.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField name="MMapDbg">
          <gui_name language="en">MMapDbg</gui_name>
          <description language="en">Memory Mapped Debug. Support for v7 memory-mapped debug model, for A and R profile processors.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField name="CopSDbg">
          <gui_name language="en">CopSDbg</gui_name>
          <description language="en">Support for  a System registers-based Secure debug model, using registers in the coproc = 1110 encoding space, for an A profile processor that includes EL3.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_CopDbg" name="CopDbg">
          <gui_name language="en">CopDbg</gui_name>
          <description language="en">Support for System registers-based debug model, using registers in the coproc == 1110 encoding space, for A and R profile processors.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar0.html" name="ID_ISAR0" size="4">
        <gui_name language="en">Instruction Set Attribute Register 0</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR0_Divide" name="Divide">
          <gui_name language="en">Divide</gui_name>
          <description language="en">Indicates the implemented Divide instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_Debug" name="Debug">
          <gui_name language="en">Debug</gui_name>
          <description language="en">Indicates the implemented Debug instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_Coproc" name="Coproc">
          <gui_name language="en">Coproc</gui_name>
          <description language="en">Indicates the implemented System register access instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_CmpBranch" name="CmpBranch">
          <gui_name language="en">CmpBranch</gui_name>
          <description language="en">Indicates the implemented combined Compare and Branch instructions in the T32 instruction set.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_BitField" name="BitField">
          <gui_name language="en">BitField</gui_name>
          <description language="en">Indicates the implemented BitField instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_BitCount" name="BitCount">
          <gui_name language="en">BitCount</gui_name>
          <description language="en">Indicates the implemented Bit Counting instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_Swap" name="Swap">
          <gui_name language="en">Swap</gui_name>
          <description language="en">Indicates the implemented Swap instructions in the A32 instruction set.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar1.html" name="ID_ISAR1" size="4">
        <gui_name language="en">Instruction Set Attribute Register 1</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR1_Jazelle" name="Jazelle">
          <gui_name language="en">Jazelle</gui_name>
          <description language="en">Indicates the implemented Jazelle extension instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Interwork" name="Interwork">
          <gui_name language="en">Interwork</gui_name>
          <description language="en">Indicates the implemented Interworking instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Immediate" name="Immediate">
          <gui_name language="en">Immediate</gui_name>
          <description language="en">Indicates the implemented data-processing instructions with long immediates.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_IfThen" name="IfThen">
          <gui_name language="en">IfThen</gui_name>
          <description language="en">Indicates the implemented If-Then instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Extend" name="Extend">
          <gui_name language="en">Extend</gui_name>
          <description language="en">Indicates the implemented Extend instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Except_AR" name="Except_AR">
          <gui_name language="en">Except_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile exception-handling instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Except" name="Except">
          <gui_name language="en">Except</gui_name>
          <description language="en">Indicates the implemented exception-handling instructions in the ARM instruction set.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_Endian" name="Endian">
          <gui_name language="en">Endian</gui_name>
          <description language="en">Indicates the implemented Endian instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar2.html" name="ID_ISAR2" size="4">
        <gui_name language="en">Instruction Set Attribute Register 2</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR2_Reversal" name="Reversal">
          <gui_name language="en">Reversal</gui_name>
          <description language="en">Indicates the implemented Reversal instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_PSR_AR" name="PSR_AR">
          <gui_name language="en">PSR_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile instructions to manipulate the PSR.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_MultU" name="MultU">
          <gui_name language="en">MultU</gui_name>
          <description language="en">Indicates the implemented advanced unsigned Multiply instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_MultS" name="MultS">
          <gui_name language="en">MultS</gui_name>
          <description language="en">Indicates the implemented advanced signed Multiply instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_Mult" name="Mult">
          <gui_name language="en">Mult</gui_name>
          <description language="en">Indicates the implemented additional Multiply instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_MultiAccessInt" name="MultiAccessInt">
          <gui_name language="en">MultiAccessInt</gui_name>
          <description language="en">Indicates the support for interruptible multi-access instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_MemHint" name="MemHint">
          <gui_name language="en">MemHint</gui_name>
          <description language="en">Indicates the implemented Memory Hint instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_LoadStore" name="LoadStore">
          <gui_name language="en">LoadStore</gui_name>
          <description language="en">Indicates the implemented additional load/store instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar3.html" name="ID_ISAR3" size="4">
        <gui_name language="en">Instruction Set Attribute Register 3</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR3_T32EE" name="T32EE">
          <gui_name language="en">T32EE</gui_name>
          <description language="en">Indicates the implemented T32EE instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_TrueNOP" name="TrueNOP">
          <gui_name language="en">TrueNOP</gui_name>
          <description language="en">Indicates the implemented true NOP instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_T32Copy" name="T32Copy">
          <gui_name language="en">T32Copy</gui_name>
          <description language="en">Indicates the support for T32 non flag-setting MOV instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_TabBranch" name="TabBranch">
          <gui_name language="en">TabBranch</gui_name>
          <description language="en">Indicates the implemented Table Branch instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_SynchPrim" name="SynchPrim">
          <gui_name language="en">SynchPrim</gui_name>
          <description language="en">Used in conjunction with ID_ISAR4.SynchPrim_frac to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_SVC" name="SVC">
          <gui_name language="en">SVC</gui_name>
          <description language="en">Indicates the implemented SVC instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_SIMD" name="SIMD">
          <gui_name language="en">SIMD</gui_name>
          <description language="en">Indicates the implemented SIMD instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_Saturate" name="Saturate">
          <gui_name language="en">Saturate</gui_name>
          <description language="en">Indicates the implemented Saturate instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar4.html" name="ID_ISAR4" size="4">
        <gui_name language="en">Instruction Set Attribute Register 4</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR4_SWP_frac" name="SWP_frac">
          <gui_name language="en">SWP_frac</gui_name>
          <description language="en">Indicates support for the memory system locking the bus for SWP or SWPB instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_PSR_M" name="PSR_M">
          <gui_name language="en">PSR_M</gui_name>
          <description language="en">Indicates the implemented M profile instructions to modify the PSRs.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_SynchPrim_frac" name="SynchPrim_frac">
          <gui_name language="en">SynchPrim_frac</gui_name>
          <description language="en">Used in conjunction with ID_ISAR3.SynchPrim to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_Barrier" name="Barrier">
          <gui_name language="en">Barrier</gui_name>
          <description language="en">Indicates the implemented Barrier instructions in the A32 and T32 instruction sets.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_SMC" name="SMC">
          <gui_name language="en">SMC</gui_name>
          <description language="en">Indicates the implemented SMC instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_Writeback" name="Writeback">
          <gui_name language="en">Writeback</gui_name>
          <description language="en">Indicates the support for Writeback addressing modes.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_WithShifts" name="WithShifts">
          <gui_name language="en">WithShifts</gui_name>
          <description language="en">Indicates the support for instructions with shifts.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_Unpriv" name="Unpriv">
          <gui_name language="en">Unpriv</gui_name>
          <description language="en">Indicates the implemented unprivileged instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_isar5.html" name="ID_ISAR5" size="4">
        <gui_name language="en">Instruction Set Attribute Register 5</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR5_CRC32" name="CRC32">
          <gui_name language="en">CRC32</gui_name>
          <description language="en">Indicates whether the CRC32 instructions are implemented in AArch32 state.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_SHA2" name="SHA2">
          <gui_name language="en">SHA2</gui_name>
          <description language="en">Indicates whether the SHA2 instructions are implemented in AArch32 state.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_SHA1" name="SHA1">
          <gui_name language="en">SHA1</gui_name>
          <description language="en">Indicates whether the SHA1 instructions are implemented in AArch32 state.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_AES" name="AES">
          <gui_name language="en">AES</gui_name>
          <description language="en">Indicates whether the AES instructions are implemented in AArch32 state.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_SEVL" name="SEVL">
          <gui_name language="en">SEVL</gui_name>
          <description language="en">Indicates whether the SEVL instruction is implemented in AArch32 state.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_mmfr0.html" name="ID_MMFR0" size="4">
        <gui_name language="en">Memory Model Feature Register 0</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR0_InnerShr" name="InnerShr">
          <gui_name language="en">InnerShr</gui_name>
          <description language="en">Innermost Shareability. Indicates the innermost shareability domain implemented.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_FCSE" name="FCSE">
          <gui_name language="en">FCSE</gui_name>
          <description language="en">Indicates whether the implementation includes the FCSE.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_AuxReg" name="AuxReg">
          <gui_name language="en">AuxReg</gui_name>
          <description language="en">Auxiliary Registers. Indicates support for Auxiliary registers.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_TCM" name="TCM">
          <gui_name language="en">TCM</gui_name>
          <description language="en">Indicates support for TCMs and associated DMAs.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_ShareLvl" name="ShareLvl">
          <gui_name language="en">ShareLvl</gui_name>
          <description language="en">Shareability Levels. Indicates the number of shareability levels implemented.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_OuterShr" name="OuterShr">
          <gui_name language="en">OuterShr</gui_name>
          <description language="en">Outermost Shareability. Indicates the outermost shareability domain implemented.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_PMSA" name="PMSA">
          <gui_name language="en">PMSA</gui_name>
          <description language="en">Indicates support for a PMSA.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_VMSA" name="VMSA">
          <gui_name language="en">VMSA</gui_name>
          <description language="en">Indicates support for a VMSA.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_mmfr1.html" name="ID_MMFR1" size="4">
        <gui_name language="en">Memory Model Feature Register 1</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR1_BPred" name="BPred">
          <gui_name language="en">BPred</gui_name>
          <description language="en">Branch Predictor. Indicates branch predictor management requirements.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1TstCln" name="L1TstCln">
          <gui_name language="en">L1TstCln</gui_name>
          <description language="en">Level 1 cache Test and Clean. Indicates the supported Level 1 data cache test and clean operations, for Harvard or unified cache implementations.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1Uni" name="L1Uni">
          <gui_name language="en">L1Uni</gui_name>
          <description language="en">Level 1 Unified cache. Indicates the supported entire Level 1 cache maintenance operations for a unified cache implementation.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1Hvd" name="L1Hvd">
          <gui_name language="en">L1Hvd</gui_name>
          <description language="en">Level 1 Harvard cache. Indicates the supported entire Level 1 cache maintenance operations for a Harvard cache implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1UniSW" name="L1UniSW">
          <gui_name language="en">L1UniSW</gui_name>
          <description language="en">Level 1 Unified cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a unified cache implementation.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1HvdSW" name="L1HvdSW">
          <gui_name language="en">L1HvdSW</gui_name>
          <description language="en">Level 1 Harvard cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1UniVA" name="L1UniVA">
          <gui_name language="en">L1UniVA</gui_name>
          <description language="en">Level 1 Unified cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a unified cache implementation.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_L1HvdVA" name="L1HvdVA">
          <gui_name language="en">L1HvdVA</gui_name>
          <description language="en">Level 1 Harvard cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a Harvard cache implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_mmfr2.html" name="ID_MMFR2" size="4">
        <gui_name language="en">Memory Model Feature Register 2</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR2_HWAccFlg" name="HWAccFlg">
          <gui_name language="en">HWAccFlg</gui_name>
          <description language="en">Hardware Access Flag. In earlier versions of the ARM Architecture, this field indicates support for a Hardware Access flag, as part of the VMSAv7 implementation.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_WFIStall" name="WFIStall">
          <gui_name language="en">WFIStall</gui_name>
          <description language="en">Wait For Interrupt Stall. Indicates the support for Wait For Interrupt (WFI) stalling.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_MemBarr" name="MemBarr">
          <gui_name language="en">MemBarr</gui_name>
          <description language="en">Memory Barrier.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_UniTLB" name="UniTLB">
          <gui_name language="en">UniTLB</gui_name>
          <description language="en">Unified TLB. Indicates the supported TLB maintenance operations, for a unified TLB implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="HvdTLB">
          <gui_name language="en">HvdTLB</gui_name>
          <description language="en">If the Unified TLB field (UniTLB, bits [19:16]) is not 0000, then the meaning of this field is IMPLEMENTATION DEFINED. ARM deprecates the use of this field by software.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_L1HvdRng" name="L1HvdRng">
          <gui_name language="en">L1HvdRng</gui_name>
          <description language="en">Level 1 Harvard cache Range. Indicates the supported Level 1 cache maintenance range operations, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_L1HvdBG" name="L1HvdBG">
          <gui_name language="en">L1HvdBG</gui_name>
          <description language="en">Level 1 Harvard cache Background fetch. Indicates the supported Level 1 cache background fetch operations, for a Harvard cache implementation. When supported, background fetch operations are non-blocking operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_L1HvdFG" name="L1HvdFG">
          <gui_name language="en">L1HvdFG</gui_name>
          <description language="en">Level 1 Harvard cache Foreground fetch. Indicates the supported Level 1 cache foreground fetch operations, for a Harvard cache implementation. When supported, foreground fetch operations are blocking operations.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_mmfr3.html" name="ID_MMFR3" size="4">
        <gui_name language="en">Memory Model Feature Register 3</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR3_Supersec" name="Supersec">
          <gui_name language="en">Supersec</gui_name>
          <description language="en">Supersections. On a VMSA implementation, indicates whether Supersections are supported.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_CMemSz" name="CMemSz">
          <gui_name language="en">CMemSz</gui_name>
          <description language="en">Cached Memory Size. Indicates the physical memory size supported by the caches.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_CohWalk" name="CohWalk">
          <gui_name language="en">CohWalk</gui_name>
          <description language="en">Coherent Walk. Indicates whether Translation table updates require a clean to the point of unification.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_MaintBcst" name="MaintBcst">
          <gui_name language="en">MaintBcst</gui_name>
          <description language="en">Maintenance Broadcast. Indicates whether Cache, TLB, and branch predictor operations are broadcast.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_BPMaint" name="BPMaint">
          <gui_name language="en">BPMaint</gui_name>
          <description language="en">Branch Predictor Maintenance. Indicates the supported branch predictor maintenance operations in an implementation with hierarchical cache maintenance operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_CMaintSW" name="CMaintSW">
          <gui_name language="en">CMaintSW</gui_name>
          <description language="en">Cache Maintenance by Set/Way. Indicates the supported cache maintenance operations by set/way, in an implementation with hierarchical caches.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_CMaintVA" name="CMaintVA">
          <gui_name language="en">CMaintVA</gui_name>
          <description language="en">Cache Maintenance by  Virtual Address. Indicates the supported cache maintenance operations by VA, in an implementation with hierarchical caches.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_mmfr4.html" name="ID_MMFR4" size="4">
        <gui_name language="en">Memory Model Feature Register 4</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR4_AC2" name="AC2">
          <gui_name language="en">AC2</gui_name>
          <description language="en">Indicates the extension of the ACTLR and HACTLR registers using ACTLR2 and HACTLR2.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR4_SpecSEI" name="SpecSEI">
          <gui_name language="en">SpecSEI</gui_name>
          <description language="en">Describes whether the PE can generate SError interrupt exceptions from speculative reads of memory, including speculative instruction fetches.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_pfr0.html" name="ID_PFR0" size="4">
        <gui_name language="en">Processor Feature Register 0</gui_name>
        <description language="en">Gives top-level information about the instruction sets supported by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_PFR0_RAS" name="RAS">
          <gui_name language="en">RAS</gui_name>
          <description language="en">RAS Extension version.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_State3" name="State3">
          <gui_name language="en">State3</gui_name>
          <description language="en">T32EE instruction set support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_State2" name="State2">
          <gui_name language="en">State2</gui_name>
          <description language="en">Jazelle extension support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_State1" name="State1">
          <gui_name language="en">State1</gui_name>
          <description language="en">T32 instruction set support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_State0" name="State0">
          <gui_name language="en">State0</gui_name>
          <description language="en">A32 instruction set support.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-id_pfr1.html" name="ID_PFR1" size="4">
        <gui_name language="en">Processor Feature Register 1</gui_name>
        <description language="en">Gives information about the AArch32 programmers' model...</description>
        <bitField enumerationId="ID_PFR1_GIC" name="GIC">
          <gui_name language="en">GIC</gui_name>
          <description language="en">System register GIC CPU interface.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_Virt_frac" name="Virt_frac">
          <gui_name language="en">Virt_frac</gui_name>
          <description language="en">Virtualization fractional field. When the Virtualization field is 0000, determines the support for features from the ARMv7 Virtualization Extensions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_Sec_frac" name="Sec_frac">
          <gui_name language="en">Sec_frac</gui_name>
          <description language="en">Security fractional field. When the Security field is 0000, determines the support for features from the ARMv7 Security Extensions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_GenTimer" name="GenTimer">
          <gui_name language="en">GenTimer</gui_name>
          <description language="en">Generic Timer support.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_Virtualization" name="Virtualization">
          <gui_name language="en">Virtualization</gui_name>
          <description language="en">Virtualization support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_MProgMod" name="MProgMod">
          <gui_name language="en">MProgMod</gui_name>
          <description language="en">M profile programmers' model support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_Security" name="Security">
          <gui_name language="en">Security</gui_name>
          <description language="en">Security support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_ProgMod" name="ProgMod">
          <gui_name language="en">ProgMod</gui_name>
          <description language="en">Support for the standard programmers' model for ARMv4 and later. Model must support User, FIQ, IRQ, Supervisor, Abort, Undefined, and System modes.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-midr.html" name="MIDR" size="4">
        <gui_name language="en">Main ID Register</gui_name>
        <description language="en">Provides identification information for the PE, including an implementer code for the device and a device ID number.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mpidr.html" name="MPIDR" size="4">
        <gui_name language="en">Multiprocessor Affinity Register</gui_name>
        <description language="en">In a multiprocessor system, provides an additional PE identification mechanism for scheduling purposes.</description>
        <bitField enumerationId="MPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="MPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="MPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr0.html" name="MVFR0" size="4">
        <gui_name language="en">Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR0_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr1.html" name="MVFR1" size="4">
        <gui_name language="en">Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvfr2.html" name="MVFR2" size="4">
        <gui_name language="en">Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR2_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR2_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-revidr.html" name="REVIDR" size="4">
        <gui_name language="en">Revision ID Register</gui_name>
        <description language="en">Provides implementation-specific minor revision information.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tcmtr.html" name="TCMTR" size="4">
        <gui_name language="en">TCM Type Register</gui_name>
        <description language="en">Provides information about the implementation of the TCM.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbtr.html" name="TLBTR" size="4">
        <gui_name language="en">TLB Type Register</gui_name>
        <description language="en">Provides information about the TLB implementation. The register must define whether the implementation provides separate instruction and data TLBs, or a unified TLB. Normally, the IMPLEMENTATION DEFINED information in this register includes the number of lockable entries in the TLB.</description>
        <bitField enumerationId="TLBTR_nU" name="nU">
          <gui_name language="en">nU</gui_name>
          <description language="en">Not Unified TLB.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vmpidr.html" name="VMPIDR" size="4">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR.</description>
        <bitField enumerationId="VMPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vpidr.html" name="VPIDR" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="VPIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="IMP_DEF" xml:base="Registers/System/ARMv8.0/V8_AARCH32_IMP_DEF.xml">
      <gui_name language="en">IMP_DEF</gui_name>
      <description language="en">IMP_DEF</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="S_ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="N_ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="S_ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="N_ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="S_ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-adfsr.html" name="N_ADFSR" size="4">
        <gui_name language="en">Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Data Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aidr.html" name="AIDR" size="4">
        <gui_name language="en">Auxiliary ID Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED identification information...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="S_AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-aifsr.html" name="N_AIFSR" size="4">
        <gui_name language="en">Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for Prefetch Abort exceptions taken to EL1 modes, and EL3 modes when EL3 is implemented and is using AArch32.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="S_AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="N_AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="S_AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="N_AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr.html" name="HACTLR" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register</gui_name>
        <description language="en">Controls IMPLEMENTATION DEFINED features of Hyp mode operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr2-ns.html" name="HACTLR2" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the HACTLR register to hold IMPLEMENTATION DEFINED trap functionality.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hadfsr.html" name="HADFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Data Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-haifsr.html" name="HAIFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Prefetch Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair0.html" name="HAMAIR0" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR0. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair1.html" name="HAMAIR1" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR1. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR1.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Legacy" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Legacy.xml">
      <gui_name language="en">Legacy</gui_name>
      <description language="en">Legacy</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cp15dmb.html" name="CP15DMB" size="4">
        <gui_name language="en">Data Memory Barrier System instruction</gui_name>
        <description language="en">Performs a Data Memory Barrier...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cp15dsb.html" name="CP15DSB" size="4">
        <gui_name language="en">Data Synchronization Barrier System instruction</gui_name>
        <description language="en">Performs a Data Synchronization Barrier...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cp15isb.html" name="CP15ISB" size="4">
        <gui_name language="en">Instruction Synchronization Barrier System instruction</gui_name>
        <description language="en">Performs an Instruction Synchronization Barrier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fcseidr.html" name="FCSEIDR" size="4">
        <gui_name language="en">FCSE Process ID register</gui_name>
        <description language="en">Identifies whether the Fast Context Switch Extension (FCSE) is implemented...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-jidr.html" name="JIDR" size="4">
        <gui_name language="en">Jazelle ID Register</gui_name>
        <description language="en">A Jazelle register, which identified the Jazelle architecture version.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-jmcr.html" name="JMCR" size="4">
        <gui_name language="en">Jazelle Main Configuration Register</gui_name>
        <description language="en">A Jazelle register, which provides control of the Jazelle extension.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-joscr.html" name="JOSCR" size="4">
        <gui_name language="en">Jazelle OS Control Register</gui_name>
        <description language="en">A Jazelle register, which provides operating system control of the Jazelle Extension.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Memory" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Memory.xml">
      <gui_name language="en">Memory</gui_name>
      <description language="en">Memory</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="S_AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair0.html" name="N_AMAIR0" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="S_AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-amair1.html" name="N_AMAIR1" size="4">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">When using the Long-descriptor format translation tables for stage 1 translations, provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-contextidr.html" name="CONTEXTIDR" size="4">
        <gui_name language="en">Context ID Register</gui_name>
        <description language="en">Identifies the current Process Identifier and, when using the Short-descriptor translation table format, the Address Space Identifier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-contextidr.html" name="S_CONTEXTIDR" size="4">
        <gui_name language="en">Context ID Register</gui_name>
        <description language="en">Identifies the current Process Identifier and, when using the Short-descriptor translation table format, the Address Space Identifier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-contextidr.html" name="N_CONTEXTIDR" size="4">
        <gui_name language="en">Context ID Register</gui_name>
        <description language="en">Identifies the current Process Identifier and, when using the Short-descriptor translation table format, the Address Space Identifier...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dacr.html" name="DACR" size="4">
        <gui_name language="en">Domain Access Control Register</gui_name>
        <description language="en">Defines the access permission for each of the sixteen memory domains.</description>
        <bitField enumerationId="DACR_D_n" name="D15">
          <gui_name language="en">D15</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D14">
          <gui_name language="en">D14</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D13">
          <gui_name language="en">D13</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D12">
          <gui_name language="en">D12</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D11">
          <gui_name language="en">D11</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D10">
          <gui_name language="en">D10</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D9">
          <gui_name language="en">D9</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D8">
          <gui_name language="en">D8</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D7">
          <gui_name language="en">D7</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D6">
          <gui_name language="en">D6</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D5">
          <gui_name language="en">D5</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D4">
          <gui_name language="en">D4</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D3">
          <gui_name language="en">D3</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D2">
          <gui_name language="en">D2</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D1">
          <gui_name language="en">D1</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D0">
          <gui_name language="en">D0</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dacr.html" name="S_DACR" size="4">
        <gui_name language="en">Domain Access Control Register</gui_name>
        <description language="en">Defines the access permission for each of the sixteen memory domains.</description>
        <bitField enumerationId="DACR_D_n" name="D15">
          <gui_name language="en">D15</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D14">
          <gui_name language="en">D14</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D13">
          <gui_name language="en">D13</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D12">
          <gui_name language="en">D12</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D11">
          <gui_name language="en">D11</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D10">
          <gui_name language="en">D10</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D9">
          <gui_name language="en">D9</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D8">
          <gui_name language="en">D8</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D7">
          <gui_name language="en">D7</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D6">
          <gui_name language="en">D6</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D5">
          <gui_name language="en">D5</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D4">
          <gui_name language="en">D4</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D3">
          <gui_name language="en">D3</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D2">
          <gui_name language="en">D2</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D1">
          <gui_name language="en">D1</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D0">
          <gui_name language="en">D0</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dacr.html" name="N_DACR" size="4">
        <gui_name language="en">Domain Access Control Register</gui_name>
        <description language="en">Defines the access permission for each of the sixteen memory domains.</description>
        <bitField enumerationId="DACR_D_n" name="D15">
          <gui_name language="en">D15</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D14">
          <gui_name language="en">D14</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D13">
          <gui_name language="en">D13</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D12">
          <gui_name language="en">D12</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D11">
          <gui_name language="en">D11</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D10">
          <gui_name language="en">D10</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D9">
          <gui_name language="en">D9</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D8">
          <gui_name language="en">D8</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D7">
          <gui_name language="en">D7</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D6">
          <gui_name language="en">D6</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D5">
          <gui_name language="en">D5</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D4">
          <gui_name language="en">D4</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D3">
          <gui_name language="en">D3</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D2">
          <gui_name language="en">D2</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D1">
          <gui_name language="en">D1</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DACR_D_n" name="D0">
          <gui_name language="en">D0</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair0.html" name="HAMAIR0" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR0. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair1.html" name="HAMAIR1" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR1. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hmair0.html" name="HMAIR0" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with HMAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode...</description>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hmair1.html" name="HMAIR1" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with HMAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode...</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-htcr.html" name="HTCR" size="4">
        <gui_name language="en">Hyp Translation Control Register</gui_name>
        <description language="en">The control register for stage 1 of the EL2 translation regime.</description>
        <bitField enumerationId="HTCR_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="HTCR_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="HTCR_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by HTTBR. The region size is 2^(32-T0SZ) bytes.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-httbr.html" name="HTTBR" size="8">
        <gui_name language="en">Hyp Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of an address translation in the EL2 translation regime, and other information for this translation regime.</description>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair0.html" name="MAIR0" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair0.html" name="S_MAIR0" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair0.html" name="N_MAIR0" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with MAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair1.html" name="MAIR1" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair1.html" name="S_MAIR1" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mair1.html" name="N_MAIR1" size="4">
        <gui_name language="en">Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with MAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations...</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-nmrr.html" name="NMRR" size="4">
        <gui_name language="en">Normal Memory Remap Register</gui_name>
        <description language="en">Provides additional mapping controls for memory regions that are mapped as Normal memory by their entry in the PRRR...</description>
        <bitField enumerationId="NMRR_OR_n" name="OR7">
          <gui_name language="en">OR7</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR6">
          <gui_name language="en">OR6</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR5">
          <gui_name language="en">OR5</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR4">
          <gui_name language="en">OR4</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR3">
          <gui_name language="en">OR3</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR2">
          <gui_name language="en">OR2</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR1">
          <gui_name language="en">OR1</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR0">
          <gui_name language="en">OR0</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR7">
          <gui_name language="en">IR7</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR6">
          <gui_name language="en">IR6</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR5">
          <gui_name language="en">IR5</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR4">
          <gui_name language="en">IR4</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR3">
          <gui_name language="en">IR3</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR2">
          <gui_name language="en">IR2</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR1">
          <gui_name language="en">IR1</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR0">
          <gui_name language="en">IR0</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-nmrr.html" name="S_NMRR" size="4">
        <gui_name language="en">Normal Memory Remap Register</gui_name>
        <description language="en">Provides additional mapping controls for memory regions that are mapped as Normal memory by their entry in the PRRR...</description>
        <bitField enumerationId="NMRR_OR_n" name="OR7">
          <gui_name language="en">OR7</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR6">
          <gui_name language="en">OR6</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR5">
          <gui_name language="en">OR5</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR4">
          <gui_name language="en">OR4</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR3">
          <gui_name language="en">OR3</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR2">
          <gui_name language="en">OR2</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR1">
          <gui_name language="en">OR1</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR0">
          <gui_name language="en">OR0</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR7">
          <gui_name language="en">IR7</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR6">
          <gui_name language="en">IR6</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR5">
          <gui_name language="en">IR5</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR4">
          <gui_name language="en">IR4</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR3">
          <gui_name language="en">IR3</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR2">
          <gui_name language="en">IR2</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR1">
          <gui_name language="en">IR1</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR0">
          <gui_name language="en">IR0</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-nmrr.html" name="N_NMRR" size="4">
        <gui_name language="en">Normal Memory Remap Register</gui_name>
        <description language="en">Provides additional mapping controls for memory regions that are mapped as Normal memory by their entry in the PRRR...</description>
        <bitField enumerationId="NMRR_OR_n" name="OR7">
          <gui_name language="en">OR7</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR6">
          <gui_name language="en">OR6</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR5">
          <gui_name language="en">OR5</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR4">
          <gui_name language="en">OR4</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR3">
          <gui_name language="en">OR3</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR2">
          <gui_name language="en">OR2</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR1">
          <gui_name language="en">OR1</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="NMRR_OR_n" name="OR0">
          <gui_name language="en">OR0</gui_name>
          <description language="en">Outer Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR7">
          <gui_name language="en">IR7</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR6">
          <gui_name language="en">IR6</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR5">
          <gui_name language="en">IR5</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR4">
          <gui_name language="en">IR4</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR3">
          <gui_name language="en">IR3</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR2">
          <gui_name language="en">IR2</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR1">
          <gui_name language="en">IR1</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="NMRR_IR_n" name="IR0">
          <gui_name language="en">IR0</gui_name>
          <description language="en">Inner Cacheable property mapping for memory attributes n, if the region is mapped as Normal memory by the PRRR.TR&lt;n&gt; entry. n is the value of the TEX[0], C, and B bits concatenated.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-prrr.html" name="PRRR" size="4">
        <gui_name language="en">Primary Region Remap Register</gui_name>
        <description language="en">Controls the top level mapping of the TEX[0], C, and B memory region attributes.</description>
        <bitField enumerationId="PRRR_NOS_n" name="NOS7">
          <gui_name language="en">NOS7</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS6">
          <gui_name language="en">NOS6</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS5">
          <gui_name language="en">NOS5</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS4">
          <gui_name language="en">NOS4</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS3">
          <gui_name language="en">NOS3</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS2">
          <gui_name language="en">NOS2</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS1">
          <gui_name language="en">NOS1</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS0">
          <gui_name language="en">NOS0</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS1" name="NS1">
          <gui_name language="en">NS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Normal memory regions.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS0" name="NS0">
          <gui_name language="en">NS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Normal memory regions.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField name="DS1">
          <gui_name language="en">DS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField name="DS0">
          <gui_name language="en">DS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR7">
          <gui_name language="en">TR7</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR6">
          <gui_name language="en">TR6</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR5">
          <gui_name language="en">TR5</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR4">
          <gui_name language="en">TR4</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR3">
          <gui_name language="en">TR3</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR2">
          <gui_name language="en">TR2</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR1">
          <gui_name language="en">TR1</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR0">
          <gui_name language="en">TR0</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-prrr.html" name="S_PRRR" size="4">
        <gui_name language="en">Primary Region Remap Register</gui_name>
        <description language="en">Controls the top level mapping of the TEX[0], C, and B memory region attributes.</description>
        <bitField enumerationId="PRRR_NOS_n" name="NOS7">
          <gui_name language="en">NOS7</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS6">
          <gui_name language="en">NOS6</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS5">
          <gui_name language="en">NOS5</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS4">
          <gui_name language="en">NOS4</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS3">
          <gui_name language="en">NOS3</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS2">
          <gui_name language="en">NOS2</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS1">
          <gui_name language="en">NOS1</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS0">
          <gui_name language="en">NOS0</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS1" name="NS1">
          <gui_name language="en">NS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Normal memory regions.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS0" name="NS0">
          <gui_name language="en">NS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Normal memory regions.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField name="DS1">
          <gui_name language="en">DS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField name="DS0">
          <gui_name language="en">DS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR7">
          <gui_name language="en">TR7</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR6">
          <gui_name language="en">TR6</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR5">
          <gui_name language="en">TR5</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR4">
          <gui_name language="en">TR4</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR3">
          <gui_name language="en">TR3</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR2">
          <gui_name language="en">TR2</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR1">
          <gui_name language="en">TR1</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR0">
          <gui_name language="en">TR0</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-prrr.html" name="N_PRRR" size="4">
        <gui_name language="en">Primary Region Remap Register</gui_name>
        <description language="en">Controls the top level mapping of the TEX[0], C, and B memory region attributes.</description>
        <bitField enumerationId="PRRR_NOS_n" name="NOS7">
          <gui_name language="en">NOS7</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS6">
          <gui_name language="en">NOS6</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS5">
          <gui_name language="en">NOS5</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS4">
          <gui_name language="en">NOS4</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS3">
          <gui_name language="en">NOS3</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS2">
          <gui_name language="en">NOS2</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS1">
          <gui_name language="en">NOS1</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NOS_n" name="NOS0">
          <gui_name language="en">NOS0</gui_name>
          <description language="en">Not Outer Shareable. NOS&lt;n&gt; is the Outer Shareable property for memory attributes n, if the region is mapped as Normal memory that is not Inner Non-cacheable, Outer Non-cacheable, and the appropriate PRRR.{NS0, NS1} field identifies the region as shareable. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS1" name="NS1">
          <gui_name language="en">NS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Normal memory regions.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PRRR_NS0" name="NS0">
          <gui_name language="en">NS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Normal memory regions.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField name="DS1">
          <gui_name language="en">DS1</gui_name>
          <description language="en">Mapping of S = 1 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField name="DS0">
          <gui_name language="en">DS0</gui_name>
          <description language="en">Mapping of S = 0 attribute for Device memory. In ARMv8, all types of Device memory are Outer Shareable, and therefore this bit is RES1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR7">
          <gui_name language="en">TR7</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR6">
          <gui_name language="en">TR6</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR5">
          <gui_name language="en">TR5</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR4">
          <gui_name language="en">TR4</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR3">
          <gui_name language="en">TR3</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR2">
          <gui_name language="en">TR2</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR1">
          <gui_name language="en">TR1</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="PRRR_TR_n" name="TR0">
          <gui_name language="en">TR0</gui_name>
          <description language="en">TR&lt;n&gt; is the primary TEX mapping for memory attributes n, and defines the mapped memory type for a region with attributes n. n is the value of the concatenation of the {TEX[0], C, B} bits from the translation table descriptor.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbcr.html" name="TTBCR" size="4">
        <gui_name language="en">Translation Table Base Control Register</gui_name>
        <description language="en">The control register for stage 1 of the PL1&amp;0 translation regime. Its controls include...</description>
        <bitField enumerationId="TTBCR_EAE" name="EAE">
          <gui_name language="en">EAE</gui_name>
          <description language="en">Extended Address Enable.</description>
          <definition>[31]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbcr.html" name="S_TTBCR" size="4">
        <gui_name language="en">Translation Table Base Control Register</gui_name>
        <description language="en">The control register for stage 1 of the PL1&amp;0 translation regime. Its controls include...</description>
        <bitField enumerationId="TTBCR_EAE" name="EAE">
          <gui_name language="en">EAE</gui_name>
          <description language="en">Extended Address Enable.</description>
          <definition>[31]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbcr.html" name="N_TTBCR" size="4">
        <gui_name language="en">Translation Table Base Control Register</gui_name>
        <description language="en">The control register for stage 1 of the PL1&amp;0 translation regime. Its controls include...</description>
        <bitField enumerationId="TTBCR_EAE" name="EAE">
          <gui_name language="en">EAE</gui_name>
          <description language="en">Extended Address Enable.</description>
          <definition>[31]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="TTBR0" size="4">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB0">
          <gui_name language="en">TTB0</gui_name>
          <description language="en">Translation table base address, bits[31:x], where x is 14-(TTBCR.N).</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="TTBR0_64" size="8">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="S_TTBR0" size="4">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB0">
          <gui_name language="en">TTB0</gui_name>
          <description language="en">Translation table base address, bits[31:x], where x is 14-(TTBCR.N).</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="S_TTBR0_64" size="8">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="N_TTBR0" size="4">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB0">
          <gui_name language="en">TTB0</gui_name>
          <description language="en">Translation table base address, bits[31:x], where x is 14-(TTBCR.N).</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR0_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr0.html" name="N_TTBR0_64" size="8">
        <gui_name language="en">Translation Table Base Register 0</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="TTBR1" size="4">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB1">
          <gui_name language="en">TTB1</gui_name>
          <description language="en">Translation table base address, bits[31:14].</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR1.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="TTBR1_64" size="8">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="S_TTBR1" size="4">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB1">
          <gui_name language="en">TTB1</gui_name>
          <description language="en">Translation table base address, bits[31:14].</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR1.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="S_TTBR1_64" size="8">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="N_TTBR1" size="4">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="TTB1">
          <gui_name language="en">TTB1</gui_name>
          <description language="en">Translation table base address, bits[31:14].</description>
          <definition>[31:7]</definition>
        </bitField>
        <bitField name="IRGN_0">
          <gui_name language="en">IRGN_0</gui_name>
          <description language="en">See the IRGN[1] description.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_NOS" name="NOS">
          <gui_name language="en">NOS</gui_name>
          <description language="en">Not Outer Shareable. When the value of TTBR1.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_RGN" name="RGN">
          <gui_name language="en">RGN</gui_name>
          <description language="en">Region bits.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">The effect of this bit is IMPLEMENTATION DEFINED. If the translation table implementation does not include any IMPLEMENTATION DEFINED features this bit is UNK/SBZP.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_S" name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Shareable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="TTBR1_IRGN_1" name="IRGN_1">
          <gui_name language="en">IRGN_1</gui_name>
          <description language="en">Inner region bits. IRGN[1:0] indicate the Inner Cacheability attributes for the memory associated with the translation table walks.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ttbr1.html" name="N_TTBR1_64" size="8">
        <gui_name language="en">Translation Table Base Register 1</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TTBCR.A1 field selects either TTBR0.ASID or TTBR1.ASID.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vtcr.html" name="VTCR" size="4">
        <gui_name language="en">Virtualization Translation Control Register</gui_name>
        <description language="en">The control register for stage 2 of the Non-secure PL1&amp;0 translation regime.</description>
        <bitField enumerationId="VTCR_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="VTCR_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="VTCR_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="VTCR_SL0" name="SL0">
          <gui_name language="en">SL0</gui_name>
          <description language="en">Starting level for translation table walks using VTTBR.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Sign extension bit. This bit must be programmed to the value of T0SZ[3]. If it is not, then the behavior is CONSTRAINED UNPREDICTABLE and the stage 2 T0SZ value is treated as an UNKNOWN value, see .</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by VTTBR. The region size is 2^(32-T0SZ) bytes.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vttbr.html" name="VTTBR" size="8">
        <gui_name language="en">Virtualization Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the Non-secure PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">The VMID for the translation table.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Other" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Other.xml">
      <gui_name language="en">Other</gui_name>
      <description language="en">Other</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="S_ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr.html" name="N_ACTLR" size="4">
        <gui_name language="en">Auxiliary Control Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="S_ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-actlr2.html" name="N_ACTLR2" size="4">
        <gui_name language="en">Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the ACTLR register to hold IMPLEMENTATION DEFINED trap functionality for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cpacr.html" name="CPACR" size="4">
        <gui_name language="en">Architectural Feature Access Control Register</gui_name>
        <description language="en">Controls access to trace, and to Advanced SIMD and floating-point functionality from EL0, EL1, and EL3...</description>
        <bitField enumerationId="CPACR_ASEDIS" name="ASEDIS">
          <gui_name language="en">ASEDIS</gui_name>
          <description language="en">Disables PL0 and PL1 execution of Advanced SIMD instructions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="CPACR_TRCDIS" name="TRCDIS">
          <gui_name language="en">TRCDIS</gui_name>
          <description language="en">Traps PL0 and PL1 System register accesses to all implemented trace registers to Undefined mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="cp11">
          <gui_name language="en">cp11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the cp10 field then this field is UNKNOWN on a direct read of the CPACR.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="CPACR_cp10" name="cp10">
          <gui_name language="en">cp10</gui_name>
          <description language="en">Defines the access rights for the floating-point and Advanced SIMD functionality.</description>
          <definition>[21:20]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr.html" name="HACTLR" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register</gui_name>
        <description language="en">Controls IMPLEMENTATION DEFINED features of Hyp mode operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr2-ns.html" name="HACTLR2" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the HACTLR register to hold IMPLEMENTATION DEFINED trap functionality.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hsctlr.html" name="HSCTLR" size="4">
        <gui_name language="en">Hyp System Control Register</gui_name>
        <description language="en">Provides top level control of the system operation in Hyp mode.</description>
        <bitField enumerationId="HSCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on entry to Hyp mode, the endianness of stage 1 translation table walks in the EL2 translation regime, and the endianness of stage 2 translation table walks in the PL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL2.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL2.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL2 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sctlr.html" name="SCTLR" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Provides the top level control of the system, including its memory system.</description>
        <bitField enumerationId="SCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_AFE" name="AFE">
          <gui_name language="en">AFE</gui_name>
          <description language="en">Access Flag Enable. When using the Short-descriptor translation table format for the PL1&amp;0 translation regime, this bit enables use of the AP[0] bit in the translation descriptors as the Access flag, and restricts access permissions in the translation descriptors to the simplified model.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_TRE" name="TRE">
          <gui_name language="en">TRE</gui_name>
          <description language="en">TEX remap enable. This bit enables remapping of the TEX[2:1] bits in the PL1&amp;0 translation regime for use as two translation table bits that can be managed by the operating system. Enabling this remapping also changes the scheme used to describe the memory region attributes in the VMSA.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on branch to an exception vector or coming out of reset, and the endianness of stage 1 translation table walks in the PL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_UWXN" name="UWXN">
          <gui_name language="en">UWXN</gui_name>
          <description language="en">Unprivileged write permission implies PL1 XN (Execute-never). This bit can force all memory regions that are writable at PL0 to be treated as XN for accesses from software executing at PL1.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the PL1&amp;0 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWE" name="nTWE">
          <gui_name language="en">nTWE</gui_name>
          <description language="en">Traps EL0 execution of WFE instructions to Undefined mode.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWI" name="nTWI">
          <gui_name language="en">nTWI</gui_name>
          <description language="en">Traps EL0 execution of WFI instructions to Undefined mode.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_V" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Vectors bit.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL1 and EL0:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at PL0 and PL1.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at PL1 and PL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="UNK">
          <gui_name language="en">UNK</gui_name>
          <description language="en">Writes to this bit are IGNORED. Reads of this bit return an UNKNOWN value.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL1 and EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL1 and EL0 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sctlr.html" name="S_SCTLR" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Provides the top level control of the system, including its memory system.</description>
        <bitField enumerationId="SCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_AFE" name="AFE">
          <gui_name language="en">AFE</gui_name>
          <description language="en">Access Flag Enable. When using the Short-descriptor translation table format for the PL1&amp;0 translation regime, this bit enables use of the AP[0] bit in the translation descriptors as the Access flag, and restricts access permissions in the translation descriptors to the simplified model.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_TRE" name="TRE">
          <gui_name language="en">TRE</gui_name>
          <description language="en">TEX remap enable. This bit enables remapping of the TEX[2:1] bits in the PL1&amp;0 translation regime for use as two translation table bits that can be managed by the operating system. Enabling this remapping also changes the scheme used to describe the memory region attributes in the VMSA.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on branch to an exception vector or coming out of reset, and the endianness of stage 1 translation table walks in the PL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_UWXN" name="UWXN">
          <gui_name language="en">UWXN</gui_name>
          <description language="en">Unprivileged write permission implies PL1 XN (Execute-never). This bit can force all memory regions that are writable at PL0 to be treated as XN for accesses from software executing at PL1.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the PL1&amp;0 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWE" name="nTWE">
          <gui_name language="en">nTWE</gui_name>
          <description language="en">Traps EL0 execution of WFE instructions to Undefined mode.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWI" name="nTWI">
          <gui_name language="en">nTWI</gui_name>
          <description language="en">Traps EL0 execution of WFI instructions to Undefined mode.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_V" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Vectors bit.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL1 and EL0:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at PL0 and PL1.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at PL1 and PL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="UNK">
          <gui_name language="en">UNK</gui_name>
          <description language="en">Writes to this bit are IGNORED. Reads of this bit return an UNKNOWN value.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL1 and EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL1 and EL0 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sctlr.html" name="N_SCTLR" size="4">
        <gui_name language="en">System Control Register</gui_name>
        <description language="en">Provides the top level control of the system, including its memory system.</description>
        <bitField enumerationId="SCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_AFE" name="AFE">
          <gui_name language="en">AFE</gui_name>
          <description language="en">Access Flag Enable. When using the Short-descriptor translation table format for the PL1&amp;0 translation regime, this bit enables use of the AP[0] bit in the translation descriptors as the Access flag, and restricts access permissions in the translation descriptors to the simplified model.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_TRE" name="TRE">
          <gui_name language="en">TRE</gui_name>
          <description language="en">TEX remap enable. This bit enables remapping of the TEX[2:1] bits in the PL1&amp;0 translation regime for use as two translation table bits that can be managed by the operating system. Enabling this remapping also changes the scheme used to describe the memory region attributes in the VMSA.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on branch to an exception vector or coming out of reset, and the endianness of stage 1 translation table walks in the PL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_UWXN" name="UWXN">
          <gui_name language="en">UWXN</gui_name>
          <description language="en">Unprivileged write permission implies PL1 XN (Execute-never). This bit can force all memory regions that are writable at PL0 to be treated as XN for accesses from software executing at PL1.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the PL1&amp;0 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWE" name="nTWE">
          <gui_name language="en">nTWE</gui_name>
          <description language="en">Traps EL0 execution of WFE instructions to Undefined mode.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_nTWI" name="nTWI">
          <gui_name language="en">nTWI</gui_name>
          <description language="en">Traps EL0 execution of WFI instructions to Undefined mode.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_V" name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Vectors bit.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL1 and EL0:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at PL0 and PL1.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at PL1 and PL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="UNK">
          <gui_name language="en">UNK</gui_name>
          <description language="en">Writes to this bit are IGNORED. Reads of this bit return an UNKNOWN value.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL1 and EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL1 and EL0 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="PMU" xml:base="Registers/System/ARMv8.0/V8_AARCH32_PMU.xml">
      <gui_name language="en">PMU</gui_name>
      <description language="en">PMU</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmccfiltr.html" name="PMCCFILTR" size="4">
        <gui_name language="en">Performance Monitors Cycle Count Filter Register</gui_name>
        <description language="en">Determines the modes in which the Cycle Counter, PMCCNTR, increments.</description>
        <bitField enumerationId="PMCCFILTR_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCCFILTR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCCFILTR_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmccntr.html" name="PMCCNTR" size="4">
        <gui_name language="en">Performance Monitors Cycle Count Register</gui_name>
        <description language="en">Holds the value of the processor Cycle Counter, CCNT, that counts processor clock cycles. See  for more information...</description>
        <bitField name="CCNT">
          <gui_name language="en">CCNT</gui_name>
          <description language="en">Cycle count. Depending on the values of PMCR.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmccntr.html" name="PMCCNTR_64" size="8">
        <gui_name language="en">Performance Monitors Cycle Count Register</gui_name>
        <description language="en">Holds the value of the processor Cycle Counter, CCNT, that counts processor clock cycles. See  for more information...</description>
        <bitField name="CCNT">
          <gui_name language="en">CCNT</gui_name>
          <description language="en">Cycle count. Depending on the values of PMCR.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmceid0.html" name="PMCEID0" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 0</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x000 to 0x01F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField enumerationId="PMCEID0_ID_31_0" name="ID_31_0">
          <gui_name language="en">ID_31_0</gui_name>
          <description language="en">PMCEID0[n] maps to event n. For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmceid1.html" name="PMCEID1" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 1</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x020 to 0x03F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField enumerationId="PMCEID1_ID_63_32" name="ID_63_32">
          <gui_name language="en">ID_63_32</gui_name>
          <description language="en">PMCEID1[n] maps to event (n + 32). For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmcntenclr.html" name="PMCNTENCLR" size="4">
        <gui_name language="en">Performance Monitors Count Enable Clear register</gui_name>
        <description language="en">Disables the Cycle Count Register, PMCCNTR, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled...</description>
        <bitField enumerationId="PMCNTENCLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR disable bit. Disables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmcntenset.html" name="PMCNTENSET" size="4">
        <gui_name language="en">Performance Monitors Count Enable Set register</gui_name>
        <description language="en">Enables the Cycle Count Register, PMCCNTR, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled...</description>
        <bitField enumerationId="PMCNTENSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR enable bit. Enables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmcr.html" name="PMCR" size="4">
        <gui_name language="en">Performance Monitors Control Register</gui_name>
        <description language="en">Provides details of the Performance Monitors implementation, including the number of counters implemented, and configures and controls the counters.</description>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">Implementer code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="IDCODE">
          <gui_name language="en">IDCODE</gui_name>
          <description language="en">Identification code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Number of event counters. A RO field that indicates the number counters implemented. A value of 0b00000 in this field indicates that only the Cycle Count Register PMCCNTR is implemented.</description>
          <definition>[15:11]</definition>
        </bitField>
        <bitField enumerationId="PMCR_LC" name="LC">
          <gui_name language="en">LC</gui_name>
          <description language="en">Long cycle counter enable. Determines which PMCCNTR bit generates an overflow recorded by PMOVSR[31].</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCR_DP" name="DP">
          <gui_name language="en">DP</gui_name>
          <description language="en">Disable cycle counter when event counting is prohibited.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCR_X" name="X">
          <gui_name language="en">X</gui_name>
          <description language="en">Enable export of events in an IMPLEMENTATION DEFINED event stream.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCR_D" name="D">
          <gui_name language="en">D</gui_name>
          <description language="en">Clock divider.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cycle counter reset. This bit is WO.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCR_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Event counter reset. This bit is WO.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCR_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR1" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR2" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR3" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR4" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR5" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR6" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR7" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR8" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR9" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR10" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR11" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR12" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR13" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR14" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR15" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR16" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR17" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR18" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR19" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR20" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR21" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR22" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR23" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR24" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR25" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR26" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR27" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR28" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR29" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevcntrn.html" name="PMEVCNTR30" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER1" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER2" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER3" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER4" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER5" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER6" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER7" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER8" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER9" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER10" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER11" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER12" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER13" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER14" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER15" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER16" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER17" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER18" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER19" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER20" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER21" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER22" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER23" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER24" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER25" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER26" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER27" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER28" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER29" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmevtypern.html" name="PMEVTYPER30" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hyp mode) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmintenclr.html" name="PMINTENCLR" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Clear register</gui_name>
        <description language="en">Disables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR, and the event counters PMEVCNTR&lt;n&gt;. Reading the register shows which overflow interrupt requests are enabled...</description>
        <bitField enumerationId="PMINTENCLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow interrupt request disable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmintenset.html" name="PMINTENSET" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Set register</gui_name>
        <description language="en">Enables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR, and the event counters PMEVCNTR&lt;n&gt;. Reading the register shows which overflow interrupt requests are enabled...</description>
        <bitField enumerationId="PMINTENSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow interrupt request enable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmovsr.html" name="PMOVSR" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Register</gui_name>
        <description language="en">Contains the state of the overflow bit for the Cycle Count Register, PMCCNTR, and each of the implemented event counters PMEVCNTR&lt;n&gt;. Writing to this register clears these bits.</description>
        <bitField enumerationId="PMOVSR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMOVSR_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmovsset.html" name="PMOVSSET" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Set register</gui_name>
        <description language="en">Sets the state of the overflow bit for the Cycle Count Register, PMCCNTR, and each of the implemented event counters PMEVCNTR&lt;n&gt;.</description>
        <bitField enumerationId="PMOVSSET_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmselr.html" name="PMSELR" size="4">
        <gui_name language="en">Performance Monitors Event Counter Selection Register</gui_name>
        <description language="en">Selects the current event counter PMEVCNTR&lt;n&gt; or the cycle counter, CCNT...</description>
        <bitField name="SEL">
          <gui_name language="en">SEL</gui_name>
          <description language="en">Selects event counter, PMEVCNTR&lt;n&gt;, where n is the value held in this field. This value identifies which event counter is accessed when a subsequent access to PMXEVTYPER or PMXEVCNTR occurs.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmswinc.html" name="PMSWINC" size="4">
        <gui_name language="en">Performance Monitors Software Increment register</gui_name>
        <description language="en">Increments a counter that is configured to count the Software increment event, event 0x00. For more information, see  .</description>
        <bitField enumerationId="PMSWINC_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmuserenr.html" name="PMUSERENR" size="4">
        <gui_name language="en">Performance Monitors User Enable Register</gui_name>
        <description language="en">Enables or disables User mode access to the Performance Monitors.</description>
        <bitField enumerationId="PMUSERENR_ER" name="ER">
          <gui_name language="en">ER</gui_name>
          <description language="en">Event counter read trap control:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_CR" name="CR">
          <gui_name language="en">CR</gui_name>
          <description language="en">Cycle counter read trap control:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software increment write trap control:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Traps EL0 accesses to the Performance Monitors registers to Undefined mode:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmxevcntr.html" name="PMXEVCNTR" size="4">
        <gui_name language="en">Performance Monitors Selected Event Count Register</gui_name>
        <description language="en">Reads or writes the value of the selected event counter, PMEVCNTR&lt;n&gt;. PMSELR.SEL determines which event counter is selected.</description>
        <bitField name="PMEVCNTR_n">
          <gui_name language="en">PMEVCNTR_n</gui_name>
          <description language="en">Value of the selected event counter, PMEVCNTR&lt;n&gt;, where n is the value stored in PMSELR.SEL.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-pmxevtyper.html" name="PMXEVTYPER" size="4">
        <gui_name language="en">Performance Monitors Selected Event Type Register</gui_name>
        <description language="en">When PMSELR.SEL selects an event counter, this accesses a PMEVTYPER&lt;n&gt; register. When PMSELR.SEL selects the cycle counter, this accesses PMCCFILTR.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Reset" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Reset.xml">
      <gui_name language="en">Reset</gui_name>
      <description language="en">Reset</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hrmr.html" name="HRMR" size="4">
        <gui_name language="en">Hyp Reset Management Register</gui_name>
        <description language="en">If EL2 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HRMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-rmr.html" name="RMR" size="4">
        <gui_name language="en">Reset Management Register</gui_name>
        <description language="en">If EL1 or EL3 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="RMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When the highest implemented Exception level can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-rvbar.html" name="RVBAR" size="4">
        <gui_name language="en">Reset Vector Base Address Register</gui_name>
        <description language="en">If EL3 is not implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch32 state.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Secure" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Secure.xml">
      <gui_name language="en">Secure</gui_name>
      <description language="en">Secure</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_mctlr.html" name="ICC_MCTLR" size="4">
        <gui_name language="en">Interrupt Controller Monitor Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_MCTLR_nDS" name="nDS">
          <gui_name language="en">nDS</gui_name>
          <description language="en">Disable Security not supported. Read-only and writes are ignored.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="RM">
          <gui_name language="en">RM</gui_name>
          <description language="en">SBZ.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL1NS" name="EOImode_EL1NS">
          <gui_name language="en">EOImode_EL1NS</gui_name>
          <description language="en">EOI mode for interrupts handled at Non-secure EL1 and EL2.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL1S" name="EOImode_EL1S">
          <gui_name language="en">EOImode_EL1S</gui_name>
          <description language="en">EOI mode for interrupts handled at Secure EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_EOImode_EL3" name="EOImode_EL3">
          <gui_name language="en">EOImode_EL3</gui_name>
          <description language="en">EOI mode for interrupts handled at EL3.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_CBPR_EL1NS" name="CBPR_EL1NS">
          <gui_name language="en">CBPR_EL1NS</gui_name>
          <description language="en">Common Binary Point Register, EL1 Non-secure.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_MCTLR_CBPR_EL1S" name="CBPR_EL1S">
          <gui_name language="en">CBPR_EL1S</gui_name>
          <description language="en">Common Binary Point Register, EL1 Secure.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_msre.html" name="ICC_MSRE" size="4">
        <gui_name language="en">Interrupt Controller Monitor System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL3.</description>
        <bitField enumerationId="ICC_MSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE and ICC_HSRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_MSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-mvbar-s.html" name="MVBAR" size="4">
        <gui_name language="en">Monitor Vector Base Address Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, holds the vector base address for any exception that is taken to Monitor mode...</description>
        <bitField name="Reserved">
          <gui_name language="en">Reserved</gui_name>
          <description language="en">Reserved, see Configurations.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-nsacr.html" name="NSACR" size="4">
        <gui_name language="en">Non-Secure Access Control Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, defines the Non-secure access permissions to Trace, Advanced SIMD and floating-point functionality. Also includes IMPLEMENTATION DEFINED bits that can define Non-secure access permissions for IMPLEMENTATION DEFINED functionality.</description>
        <bitField enumerationId="NSACR_NSTRCDIS" name="NSTRCDIS">
          <gui_name language="en">NSTRCDIS</gui_name>
          <description language="en">Disables Non-secure System register accesses to all implemented trace registers.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="NSACR_NSASEDIS" name="NSASEDIS">
          <gui_name language="en">NSASEDIS</gui_name>
          <description language="en">Disables Non-secure access to the Advanced SIMD functionality.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField name="cp11">
          <gui_name language="en">cp11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the cp10 field then this field is UNKNOWN on a direct read of the NSACR.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="NSACR_cp10" name="cp10">
          <gui_name language="en">cp10</gui_name>
          <description language="en">Enable Non-secure access to the Advanced SIMD and floating-point features.</description>
          <definition>[10]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-scr-s.html" name="SCR" size="4">
        <gui_name language="en">Secure Configuration Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, defines the configuration of the current Security state. It specifies...</description>
        <bitField enumerationId="SCR_TERR" name="TERR">
          <gui_name language="en">TERR</gui_name>
          <description language="en">Trap Error record accesses.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="SCR_TWE" name="TWE">
          <gui_name language="en">TWE</gui_name>
          <description language="en">Traps WFE instructions to Monitor mode.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="SCR_TWI" name="TWI">
          <gui_name language="en">TWI</gui_name>
          <description language="en">Traps WFI instructions to Monitor mode.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCR_SIF" name="SIF">
          <gui_name language="en">SIF</gui_name>
          <description language="en">Secure instruction fetch. When the PE is in Secure state, this bit disables instruction fetch from Non-secure memory.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SCR_HCE" name="HCE">
          <gui_name language="en">HCE</gui_name>
          <description language="en">Hypervisor Call instruction enable. Enables EL2 and Non-secure EL1 execution of HVC instructions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCR_SCD" name="SCD">
          <gui_name language="en">SCD</gui_name>
          <description language="en">Secure Monitor Call disable. Disables SMC instructions.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SCR_nET" name="nET">
          <gui_name language="en">nET</gui_name>
          <description language="en">Not Early Termination. This bit disables early termination.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SCR_AW" name="AW">
          <gui_name language="en">AW</gui_name>
          <description language="en">When the value of SCR.EA is 1 and the value of HCR.AMO is 0, this bit controls whether CPSR.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SCR_FW" name="FW">
          <gui_name language="en">FW</gui_name>
          <description language="en">When the value of SCR.FIQ is 1 and the value of HCR.FMO is 0, this bit controls whether CPSR.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="SCR_EA" name="EA">
          <gui_name language="en">EA</gui_name>
          <description language="en">External Abort handler. This bit controls which mode takes external aborts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCR_FIQ" name="FIQ">
          <gui_name language="en">FIQ</gui_name>
          <description language="en">FIQ handler. This bit controls which mode takes FIQ exceptions.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCR_IRQ" name="IRQ">
          <gui_name language="en">IRQ</gui_name>
          <description language="en">IRQ handler. This bit controls which mode takes IRQ exceptions.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCR_NS" name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sdcr-s.html" name="SDCR" size="4">
        <gui_name language="en">Secure Debug Control Register</gui_name>
        <description language="en">When EL3 is implemented and can use AArch32, controls debug and performance monitors functionality in Secure state.</description>
        <bitField enumerationId="SDCR_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="SDCR_EDAD" name="EDAD">
          <gui_name language="en">EDAD</gui_name>
          <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SDCR_SPME" name="SPME">
          <gui_name language="en">SPME</gui_name>
          <description language="en">Secure Performance Monitors enable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="SDCR_SPD" name="SPD">
          <gui_name language="en">SPD</gui_name>
          <description language="en">AArch32 Secure privileged debug. Enables or disables debug exceptions from Secure state, other than Breakpoint Instruction exceptions.</description>
          <definition>[15:14]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sder-s.html" name="SDER" size="4">
        <gui_name language="en">Secure Debug Enable Register</gui_name>
        <description language="en">Controls invasive and non-invasive debug in the Secure EL0 mode.</description>
        <bitField enumerationId="SDER_SUNIDEN" name="SUNIDEN">
          <gui_name language="en">SUNIDEN</gui_name>
          <description language="en">Secure User Non-Invasive Debug Enable:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SDER_SUIDEN" name="SUIDEN">
          <gui_name language="en">SUIDEN</gui_name>
          <description language="en">Secure User Invasive Debug Enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Special" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Special.xml">
      <gui_name language="en">Special</gui_name>
      <description language="en">Special</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-elr_hyp.html" name="ELR_hyp" size="4">
        <gui_name language="en">Exception Link Register (Hyp mode)</gui_name>
        <description language="en">When taking an exception to Hyp mode, holds the address to return to.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-fpscr.html" name="FPSCR" size="4">
        <gui_name language="en">Floating-Point Status and Control Register</gui_name>
        <description language="en">Provides floating-point system status information and control.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag. This is updated by floating-point comparison operations.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">It is IMPLEMENTATION DEFINED whether this field is RW or RAZ.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal floating-point exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact floating-point exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow floating-point exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow floating-point exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Divide by Zero floating-point exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="FPSCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation floating-point exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative floating-point exception bit. This bit is set to 1 to indicate that the Input Denormal floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative floating-point exception bit. This bit is set to 1 to indicate that the Inexact floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Underflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Overflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Divide by Zero cumulative floating-point exception bit. This bit is set to 1 to indicate that the Divide by Zero floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative floating-point exception bit. This bit is set to 1 to indicate that the Invalid Operation floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_abt.html" name="SPSR_abt" size="4">
        <gui_name language="en">Saved Program Status Register (Abort mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Abort mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Abort mode, and copied to CPSR.N on executing an exception return operation in Abort mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Abort mode, and copied to CPSR.Z on executing an exception return operation in Abort mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Abort mode, and copied to CPSR.C on executing an exception return operation in Abort mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Abort mode, and copied to CPSR.V on executing an exception return operation in Abort mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Abort mode, and copied to CPSR.Q on executing an exception return operation in Abort mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_fiq.html" name="SPSR_fiq" size="4">
        <gui_name language="en">Saved Program Status Register (FIQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to FIQ mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to FIQ mode, and copied to CPSR.N on executing an exception return operation in FIQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to FIQ mode, and copied to CPSR.Z on executing an exception return operation in FIQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to FIQ mode, and copied to CPSR.C on executing an exception return operation in FIQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to FIQ mode, and copied to CPSR.V on executing an exception return operation in FIQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to FIQ mode, and copied to CPSR.Q on executing an exception return operation in FIQ mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_hyp.html" name="SPSR_hyp" size="4">
        <gui_name language="en">Saved Program Status Register (Hyp mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Hyp mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Hyp mode, and copied to CPSR.N on executing an exception return operation in Hyp mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Hyp mode, and copied to CPSR.Z on executing an exception return operation in Hyp mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Hyp mode, and copied to CPSR.C on executing an exception return operation in Hyp mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Hyp mode, and copied to CPSR.V on executing an exception return operation in Hyp mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Hyp mode, and copied to CPSR.Q on executing an exception return operation in Hyp mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_hyp_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_irq.html" name="SPSR_irq" size="4">
        <gui_name language="en">Saved Program Status Register (IRQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to IRQ mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to IRQ mode, and copied to CPSR.N on executing an exception return operation in IRQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to IRQ mode, and copied to CPSR.Z on executing an exception return operation in IRQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to IRQ mode, and copied to CPSR.C on executing an exception return operation in IRQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to IRQ mode, and copied to CPSR.V on executing an exception return operation in IRQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to IRQ mode, and copied to CPSR.Q on executing an exception return operation in IRQ mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_mon.html" name="SPSR_mon" size="4">
        <gui_name language="en">Saved Program Status Register (Monitor mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Monitor mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Monitor mode, and copied to CPSR.N on executing an exception return operation in Monitor mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Monitor mode, and copied to CPSR.Z on executing an exception return operation in Monitor mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Monitor mode, and copied to CPSR.C on executing an exception return operation in Monitor mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Monitor mode, and copied to CPSR.V on executing an exception return operation in Monitor mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Monitor mode, and copied to CPSR.Q on executing an exception return operation in Monitor mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_mon_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_svc.html" name="SPSR_svc" size="4">
        <gui_name language="en">Saved Program Status Register (Supervisor mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Supervisor mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Supervisor mode, and copied to CPSR.N on executing an exception return operation in Supervisor mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Supervisor mode, and copied to CPSR.Z on executing an exception return operation in Supervisor mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Supervisor mode, and copied to CPSR.C on executing an exception return operation in Supervisor mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Supervisor mode, and copied to CPSR.V on executing an exception return operation in Supervisor mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Supervisor mode, and copied to CPSR.Q on executing an exception return operation in Supervisor mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_svc_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-spsr_und.html" name="SPSR_und" size="4">
        <gui_name language="en">Saved Program Status Register (Undefined mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Undefined mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Undefined mode, and copied to CPSR.N on executing an exception return operation in Undefined mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Undefined mode, and copied to CPSR.Z on executing an exception return operation in Undefined mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Undefined mode, and copied to CPSR.C on executing an exception return operation in Undefined mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Undefined mode, and copied to CPSR.V on executing an exception return operation in Undefined mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Set to the value of CPSR.Q on taking an exception to Undefined mode, and copied to CPSR.Q on executing an exception return operation in Undefined mode.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="TLB" xml:base="Registers/System/ARMv8.0/V8_AARCH32_TLB.xml">
      <gui_name language="en">TLB</gui_name>
      <description language="en">TLB</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dtlbiall.html" name="DTLBIALL" size="4">
        <gui_name language="en">Data TLB Invalidate All</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from data TLBs that are from any level of the translation table walk. The entries that are invalidated are as follows...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dtlbiasid.html" name="DTLBIASID" size="4">
        <gui_name language="en">Data TLB Invalidate by ASID match</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from data TLBs that meet the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries for non-global pages that match the ASID values will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dtlbimva.html" name="DTLBIMVA" size="4">
        <gui_name language="en">Data TLB Invalidate by VA</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from data TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-itlbiall.html" name="ITLBIALL" size="4">
        <gui_name language="en">Instruction TLB Invalidate All</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from instruction TLBs that are from any level of the translation table walk. The entries that are invalidated are as follows...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-itlbiasid.html" name="ITLBIASID" size="4">
        <gui_name language="en">Instruction TLB Invalidate by ASID match</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from instruction TLBs that meet the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries for non-global pages that match the ASID values will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-itlbimva.html" name="ITLBIMVA" size="4">
        <gui_name language="en">Instruction TLB Invalidate by VA</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from instruction TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiall.html" name="TLBIALL" size="4">
        <gui_name language="en">TLB Invalidate All</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk. The entries that are invalidated are as follows...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallh.html" name="TLBIALLH" size="4">
        <gui_name language="en">TLB Invalidate All, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallhis.html" name="TLBIALLHIS" size="4">
        <gui_name language="en">TLB Invalidate All, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallis.html" name="TLBIALLIS" size="4">
        <gui_name language="en">TLB Invalidate All, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk. The entries that are invalidated are as follows...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallnsnh.html" name="TLBIALLNSNH" size="4">
        <gui_name language="en">TLB Invalidate All, Non-Secure Non-Hyp</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for stage 1 or stage 2 of the Non-secure PL1&amp;0 translation regime, regardless of the associated VMID...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallnsnhis.html" name="TLBIALLNSNHIS" size="4">
        <gui_name language="en">TLB Invalidate All, Non-Secure Non-Hyp, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for stage 1 or stage 2 of the Non-secure PL1&amp;0 translation regime, regardless of the associated VMID...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiasid.html" name="TLBIASID" size="4">
        <gui_name language="en">TLB Invalidate by ASID match</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries for non-global pages that match the ASID values will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiasidis.html" name="TLBIASIDIS" size="4">
        <gui_name language="en">TLB Invalidate by ASID match, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries for non-global pages that match the ASID values will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2.html" name="TLBIIPAS2" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2is.html" name="TLBIIPAS2IS" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2l.html" name="TLBIIPAS2L" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2lis.html" name="TLBIIPAS2LIS" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimva.html" name="TLBIMVA" size="4">
        <gui_name language="en">TLB Invalidate by VA</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvaa.html" name="TLBIMVAA" size="4">
        <gui_name language="en">TLB Invalidate by VA, All ASID</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any unlocked TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvaais.html" name="TLBIMVAAIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, All ASID, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any unlocked TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvaal.html" name="TLBIMVAAL" size="4">
        <gui_name language="en">TLB Invalidate by VA, All ASID, Last level</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any unlocked TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvaalis.html" name="TLBIMVAALIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, All ASID, Last level, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any unlocked TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvah.html" name="TLBIMVAH" size="4">
        <gui_name language="en">TLB Invalidate by VA, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvahis.html" name="TLBIMVAHIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvais.html" name="TLBIMVAIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimval.html" name="TLBIMVAL" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvalh.html" name="TLBIMVALH" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from the final level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvalhis.html" name="TLBIMVALHIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from the final level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvalis.html" name="TLBIMVALIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level, Inner Shareable</gui_name>
        <description language="en">Invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Thread" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Thread.xml">
      <gui_name language="en">Thread</gui_name>
      <description language="en">Thread</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-htpidr.html" name="HTPIDR" size="4">
        <gui_name language="en">Hyp Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software running in Hyp mode can store thread identifying information that is not visible to Non-secure software executing at EL0 or EL1, for hypervisor management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrprw.html" name="TPIDRPRW" size="4">
        <gui_name language="en">PL1 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is not visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrprw.html" name="S_TPIDRPRW" size="4">
        <gui_name language="en">PL1 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is not visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrprw.html" name="N_TPIDRPRW" size="4">
        <gui_name language="en">PL1 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is not visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidruro.html" name="TPIDRURO" size="4">
        <gui_name language="en">PL0 Read-Only Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidruro.html" name="S_TPIDRURO" size="4">
        <gui_name language="en">PL0 Read-Only Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidruro.html" name="N_TPIDRURO" size="4">
        <gui_name language="en">PL0 Read-Only Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrurw.html" name="TPIDRURW" size="4">
        <gui_name language="en">PL0 Read/Write Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL0 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrurw.html" name="S_TPIDRURW" size="4">
        <gui_name language="en">PL0 Read/Write Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL0 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tpidrurw.html" name="N_TPIDRURW" size="4">
        <gui_name language="en">PL0 Read/Write Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL0 can store thread identifying information, for OS management purposes...</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Timer" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Timer.xml">
      <gui_name language="en">Timer</gui_name>
      <description language="en">Timer</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntfrq.html" name="CNTFRQ" size="4">
        <gui_name language="en">Counter-timer Frequency register</gui_name>
        <description language="en">This register is provided so that software can discover the frequency of the system counter. It must be programmed with this value as part of system initialization. The value of the register is not interpreted by hardware.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthctl.html" name="CNTHCTL" size="4">
        <gui_name language="en">Counter-timer Hyp Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 modes to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_PL1PCEN" name="PL1PCEN">
          <gui_name language="en">PL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to Hyp mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_PL1PCTEN" name="PL1PCTEN">
          <gui_name language="en">PL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to Hyp mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthp_ctl.html" name="CNTHP_CTL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer Control register</gui_name>
        <description language="en">Control register for the Hyp mode physical timer.</description>
        <bitField enumerationId="CNTHP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthp_cval.html" name="CNTHP_CVAL" size="8">
        <gui_name language="en">Counter-timer Hyp Physical CompareValue register</gui_name>
        <description language="en">Holds the compare value for the Hyp mode physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL2 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthp_tval.html" name="CNTHP_TVAL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the Hyp mode physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL2 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntkctl.html" name="CNTKCTL" size="4">
        <gui_name language="en">Counter-timer Kernel Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the virtual counter, and access from EL0 modes to the physical counter, virtual counter, EL1 physical timers, and the virtual timer.</description>
        <bitField enumerationId="CNTKCTL_PL0PTEN" name="PL0PTEN">
          <gui_name language="en">PL0PTEN</gui_name>
          <description language="en">Traps PL0 accesses to the physical timer registers to Undefined mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_PL0VTEN" name="PL0VTEN">
          <gui_name language="en">PL0VTEN</gui_name>
          <description language="en">Traps PL0 accesses to the virtual timer registers to Undefined mode.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTVCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTVCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTVCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_PL0VCTEN" name="PL0VCTEN">
          <gui_name language="en">PL0VCTEN</gui_name>
          <description language="en">Traps PL0 accesses to the frequency register and virtual counter register to Undefined mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_PL0PCTEN" name="PL0PCTEN">
          <gui_name language="en">PL0PCTEN</gui_name>
          <description language="en">Traps PL0 accesses to the frequency register and physical counter register to Undefined mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntpct.html" name="CNTPCT" size="8">
        <gui_name language="en">Counter-timer Physical Count register</gui_name>
        <description language="en">Holds the 64-bit physical count value.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_ctl.html" name="CNTP_CTL" size="4">
        <gui_name language="en">Counter-timer Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL1 physical timer.</description>
        <bitField enumerationId="CNTP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_ctl.html" name="S_CNTP_CTL" size="4">
        <gui_name language="en">Counter-timer Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL1 physical timer.</description>
        <bitField enumerationId="CNTP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_ctl.html" name="N_CNTP_CTL" size="4">
        <gui_name language="en">Counter-timer Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL1 physical timer.</description>
        <bitField enumerationId="CNTP_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_cval.html" name="CNTP_CVAL" size="8">
        <gui_name language="en">Counter-timer Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL1 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_cval.html" name="S_CNTP_CVAL" size="8">
        <gui_name language="en">Counter-timer Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL1 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_cval.html" name="N_CNTP_CVAL" size="8">
        <gui_name language="en">Counter-timer Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL1 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_tval.html" name="CNTP_TVAL" size="4">
        <gui_name language="en">Counter-timer Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL1 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_tval.html" name="S_CNTP_TVAL" size="4">
        <gui_name language="en">Counter-timer Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL1 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntp_tval.html" name="N_CNTP_TVAL" size="4">
        <gui_name language="en">Counter-timer Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL1 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntvct.html" name="CNTVCT" size="8">
        <gui_name language="en">Counter-timer Virtual Count register</gui_name>
        <description language="en">Holds the 64-bit virtual count value. The virtual count value is equal to the physical count value visible in CNTPCT minus the virtual offset visible in CNTVOFF.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntvoff.html" name="CNTVOFF" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT and the virtual count value visible in CNTVCT.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntv_ctl.html" name="CNTV_CTL" size="4">
        <gui_name language="en">Counter-timer Virtual Timer Control register</gui_name>
        <description language="en">Control register for the virtual timer.</description>
        <bitField enumerationId="CNTV_CTL_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTV_CTL_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTV_CTL_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntv_cval.html" name="CNTV_CVAL" size="8">
        <gui_name language="en">Counter-timer Virtual Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the virtual timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 virtual timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntv_tval.html" name="CNTV_TVAL" size="4">
        <gui_name language="en">Counter-timer Virtual Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the virtual timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the virtual timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Virt" xml:base="Registers/System/ARMv8.0/V8_AARCH32_Virt.xml">
      <gui_name language="en">Virt</gui_name>
      <description language="en">Virt</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1hr.html" name="ATS1HR" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Read</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ats1hw.html" name="ATS1HW" size="4">
        <gui_name language="en">Address Translate Stage 1 Hyp mode Write</gui_name>
        <description language="en">Performs stage 1 address translation as defined for PL2 and the Non-secure state, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthctl.html" name="CNTHCTL" size="4">
        <gui_name language="en">Counter-timer Hyp Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 modes to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_PL1PCEN" name="PL1PCEN">
          <gui_name language="en">PL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to Hyp mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_PL1PCTEN" name="PL1PCTEN">
          <gui_name language="en">PL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to Hyp mode.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthp_cval.html" name="CNTHP_CVAL" size="8">
        <gui_name language="en">Counter-timer Hyp Physical CompareValue register</gui_name>
        <description language="en">Holds the compare value for the Hyp mode physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL2 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cnthp_tval.html" name="CNTHP_TVAL" size="4">
        <gui_name language="en">Counter-timer Hyp Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the Hyp mode physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL2 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-cntvoff.html" name="CNTVOFF" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT and the virtual count value visible in CNTVCT.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hacr.html" name="HACR" size="4">
        <gui_name language="en">Hyp Auxiliary Configuration Register</gui_name>
        <description language="en">Controls trapping to Hyp mode of IMPLEMENTATION DEFINED aspects of Non-secure EL1 or EL0 operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr.html" name="HACTLR" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register</gui_name>
        <description language="en">Controls IMPLEMENTATION DEFINED features of Hyp mode operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hactlr2-ns.html" name="HACTLR2" size="4">
        <gui_name language="en">Hyp Auxiliary Control Register 2</gui_name>
        <description language="en">Provides additional space to the HACTLR register to hold IMPLEMENTATION DEFINED trap functionality.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hadfsr.html" name="HADFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Data Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Data Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-haifsr.html" name="HAIFSR" size="4">
        <gui_name language="en">Hyp Auxiliary Instruction Fault Status Register</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED syndrome information for Prefetch Abort exceptions taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair0.html" name="HAMAIR0" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR0. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hamair1.html" name="HAMAIR1" size="4">
        <gui_name language="en">Hyp Auxiliary Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory attribute encodings defined by HMAIR1. These IMPLEMENTATION DEFINED attributes can only provide additional qualifiers for the memory attribute encodings, and cannot change the memory attributes defined in HMAIR1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hcptr.html" name="HCPTR" size="4">
        <gui_name language="en">Hyp Architectural Feature Trap Register</gui_name>
        <description language="en">Controls...</description>
        <bitField enumerationId="HCPTR_TCPAC" name="TCPAC">
          <gui_name language="en">TCPAC</gui_name>
          <description language="en">Traps Non-secure EL1 accesses to the CPACR to Hyp mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="HCPTR_TTA" name="TTA">
          <gui_name language="en">TTA</gui_name>
          <description language="en">Traps Non-secure System register accesses to all implemented trace registers to Hyp mode.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="HCPTR_TASE" name="TASE">
          <gui_name language="en">TASE</gui_name>
          <description language="en">Traps Non-secure execution of Advanced SIMD instructions to Hyp mode when the value of HCPTR.TCP10 is 0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField name="TCP11">
          <gui_name language="en">TCP11</gui_name>
          <description language="en">The value of this field is ignored. If this field is programmed with a different value to the TCP10 bit then this field is UNKNOWN on a direct read of the HCPTR.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="HCPTR_TCP10" name="TCP10">
          <gui_name language="en">TCP10</gui_name>
          <description language="en">Trap Non-secure accesses to Advanced SIMD and floating-point functionality to Hyp mode:</description>
          <definition>[10]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hcr.html" name="HCR" size="4">
        <gui_name language="en">Hyp Configuration Register</gui_name>
        <description language="en">Provides configuration controls for virtualization, including defining whether various Non-secure operations are trapped to Hyp mode.</description>
        <bitField enumerationId="HCR_TRVM" name="TRVM">
          <gui_name language="en">TRVM</gui_name>
          <description language="en">Trap Reads of Virtual Memory controls. Traps Non-secure EL1 reads of the virtual memory control registers to Hyp mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="HCR_HCD" name="HCD">
          <gui_name language="en">HCD</gui_name>
          <description language="en">HVC instruction disable. Disables Non-secure state execution of HVC instructions.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="HCR_TGE" name="TGE">
          <gui_name language="en">TGE</gui_name>
          <description language="en">Trap General Exceptions, from Non-secure EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="HCR_TVM" name="TVM">
          <gui_name language="en">TVM</gui_name>
          <description language="en">Trap Virtual Memory controls. Traps Non-secure EL1 writes to the virtual memory control registers to Hyp mode.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="HCR_TTLB" name="TTLB">
          <gui_name language="en">TTLB</gui_name>
          <description language="en">Trap TLB maintenance instructions. Traps Non-secure EL1 execution of a TLBI instruction to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="HCR_TPU" name="TPU">
          <gui_name language="en">TPU</gui_name>
          <description language="en">Trap cache maintenance instructions that operate to the Point of Unification. Traps Non-secure EL1 execution of those cache maintenance instructions to Hyp mode.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="HCR_TPC" name="TPC">
          <gui_name language="en">TPC</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate to the Point of Coherency. Traps Non-secure EL1 execution of those cache maintenance instructions to Hyp mode.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="HCR_TSW" name="TSW">
          <gui_name language="en">TSW</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate by Set/Way. Traps Non-secure EL1 execution of those cache maintenance instructions by set/way to Hyp mode.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="HCR_TAC" name="TAC">
          <gui_name language="en">TAC</gui_name>
          <description language="en">Trap Auxiliary Control Registers. Traps Non-secure EL1 accesses to the Auxiliary Control Registers to Hyp mode, from both Execution states.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="HCR_TIDCP" name="TIDCP">
          <gui_name language="en">TIDCP</gui_name>
          <description language="en">Trap IMPLEMENTATION DEFINED functionality. Traps Non-secure EL1 accesses to the encodings for IMPLEMENTATION DEFINED System Registers to Hyp mode.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="HCR_TSC" name="TSC">
          <gui_name language="en">TSC</gui_name>
          <description language="en">Trap SMC instructions. Traps Non-secure EL1 execution of SMC instructions to Hyp mode.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="HCR_TID3" name="TID3">
          <gui_name language="en">TID3</gui_name>
          <description language="en">Trap ID group 3.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="HCR_TID2" name="TID2">
          <gui_name language="en">TID2</gui_name>
          <description language="en">Trap ID group 2.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="HCR_TID1" name="TID1">
          <gui_name language="en">TID1</gui_name>
          <description language="en">Trap ID group 1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="HCR_TID0" name="TID0">
          <gui_name language="en">TID0</gui_name>
          <description language="en">Trap ID group 0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="HCR_TWE" name="TWE">
          <gui_name language="en">TWE</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 execution of WFE instructions to Hyp mode:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="HCR_TWI" name="TWI">
          <gui_name language="en">TWI</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 execution of WFI instructions to Hyp mode.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="HCR_DC" name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">Default Cacheability.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HCR_BSU" name="BSU">
          <gui_name language="en">BSU</gui_name>
          <description language="en">Barrier Shareability upgrade.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="HCR_FB" name="FB">
          <gui_name language="en">FB</gui_name>
          <description language="en">Force broadcast.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HCR_VA" name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual SError interrupt exception.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HCR_VI" name="VI">
          <gui_name language="en">VI</gui_name>
          <description language="en">Virtual IRQ exception.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HCR_VF" name="VF">
          <gui_name language="en">VF</gui_name>
          <description language="en">Virtual FIQ exception.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="AMO">
          <gui_name language="en">AMO</gui_name>
          <description language="en">SError interrupt Mask Override. When this bit is set to 1, it overrides the effect of CPSR.A, and enables virtual exception signaling by the VA bit.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="IMO">
          <gui_name language="en">IMO</gui_name>
          <description language="en">IRQ Mask Override. When this bit is set to 1, it overrides the effect of CPSR.I, and enables virtual exception signaling by the VI bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="FMO">
          <gui_name language="en">FMO</gui_name>
          <description language="en">FIQ Mask Override. When this bit is set to 1, it overrides the effect of CPSR.F, and enables virtual exception signaling by the VF bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="HCR_PTW" name="PTW">
          <gui_name language="en">PTW</gui_name>
          <description language="en">Protected Table Walk. In the Non-secure PL1&amp;0 translation regime, a translation table access made as part of a stage 1 translation table walk is subject to a stage 2 translation. The combining of the memory type attributes from the two stages of translation means the access might be made to a type of Device memory.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HCR_SWIO" name="SWIO">
          <gui_name language="en">SWIO</gui_name>
          <description language="en">Set/Way Invalidation Override. Causes Non-secure EL1 execution of the data cache invalidate by set/way instructions to perform a data cache clean and invalidate by set/way.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HCR_VM" name="VM">
          <gui_name language="en">VM</gui_name>
          <description language="en">Virtualization enable. Enables stage 2 address translation for the Non-secure EL1&amp;0 translation regime.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hcr2.html" name="HCR2" size="4">
        <gui_name language="en">Hyp Configuration Register 2</gui_name>
        <description language="en">Provides additional configuration controls for virtualization.</description>
        <bitField enumerationId="HCR2_MIOCNCE" name="MIOCNCE">
          <gui_name language="en">MIOCNCE</gui_name>
          <description language="en">Mismatched Inner/Outer Cacheable Non-Coherency Enable, for the Non-secure PL1&amp;0 translation regime.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HCR2_TEA" name="TEA">
          <gui_name language="en">TEA</gui_name>
          <description language="en">Route synchronous External Abort exceptions to EL2.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HCR2_TERR" name="TERR">
          <gui_name language="en">TERR</gui_name>
          <description language="en">Trap Error record accesses.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="HCR2_ID" name="ID">
          <gui_name language="en">ID</gui_name>
          <description language="en">Stage 2 Instruction access cacheability disable. For the Non-secure PL1&amp;0 translation regime, when HCR.VM==1, this control forces all stage 2 translations for instruction accesses to Normal memory to be Non-cacheable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HCR2_CD" name="CD">
          <gui_name language="en">CD</gui_name>
          <description language="en">Stage 2 Data access cacheability disable. When HCR.VM==1, this forces all stage 2 translations for data accesses and translation table walks to Normal memory to be Non-cacheable for the Non-secure PL1&amp;0 translation regime.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hdcr.html" name="HDCR" size="4">
        <gui_name language="en">Hyp Debug Control Register</gui_name>
        <description language="en">Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</description>
        <bitField enumerationId="HDCR_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps Non-secure EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access. Traps Non-secure EL1 System register accesses to the powerdown debug registers to Hyp mode.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap debug access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HDCR_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hypervisor Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps Non-secure EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HDCR_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR to Hyp mode.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL1 modes, and from Non-secure EL0 modes if unprivileged access is enabled.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hdfar.html" name="HDFAR" size="4">
        <gui_name language="en">Hyp Data Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Data Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hifar.html" name="HIFAR" size="4">
        <gui_name language="en">Hyp Instruction Fault Address Register</gui_name>
        <description language="en">Holds the virtual address of the faulting address that caused a synchronous Prefetch Abort exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hmair0.html" name="HMAIR0" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 0</gui_name>
        <description language="en">Along with HMAIR1, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode...</description>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hmair1.html" name="HMAIR1" size="4">
        <gui_name language="en">Hyp Memory Attribute Indirection Register 1</gui_name>
        <description language="en">Along with HMAIR0, provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations for memory accesses from Hyp mode...</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where:</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hpfar.html" name="HPFAR" size="4">
        <gui_name language="en">Hyp IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to Hyp mode.</description>
        <bitField name="FIPA_39_12">
          <gui_name language="en">FIPA_39_12</gui_name>
          <description language="en">Bits [39:12] of the faulting intermediate physical address.</description>
          <definition>[31:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hrmr.html" name="HRMR" size="4">
        <gui_name language="en">Hyp Reset Management Register</gui_name>
        <description language="en">If EL2 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HRMR_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hsctlr.html" name="HSCTLR" size="4">
        <gui_name language="en">Hyp System Control Register</gui_name>
        <description language="en">Provides top level control of the system operation in Hyp mode.</description>
        <bitField enumerationId="HSCTLR_TE" name="TE">
          <gui_name language="en">TE</gui_name>
          <description language="en">T32 Exception Enable.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">The value of the PSTATE.E bit on entry to Hyp mode, the endianness of stage 1 translation table walks in the EL2 translation regime, and the endianness of stage 2 translation table walks in the PL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL2.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL2.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses at EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HSCTLR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL2 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hsr.html" name="HSR" size="4">
        <gui_name language="en">Hyp Syndrome Register</gui_name>
        <description language="en">Holds syndrome information for an exception taken to Hyp mode.</description>
        <bitField enumerationId="HSR_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="HSR_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction length bit. Indicates the size of the instruction that has been trapped to Hyp mode.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x5 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x8">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction. Valid only when AM[2] is 0, indicating an immediate form of the LDC or STC instruction.</description>
            <definition>[8:5]</definition>
          </bitField>
          <bitField enumerationId="HSR_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="HSR_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="HSR_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_TA" name="TA">
            <gui_name language="en">TA</gui_name>
            <description language="en">Indicates trapped use of Advanced SIMD functionality.</description>
            <definition>[5]</definition>
          </bitField>
          <bitField name="coproc">
            <gui_name language="en">coproc</gui_name>
            <description language="en">When the TA field returns the value 1, this field returns the value 1010, otherwise this field is RES0.</description>
            <definition>[3:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x11 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x12">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x13">
          <bitField enumerationId="HSR_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="HSR_CCKNOWNPASS" name="CCKNOWNPASS">
            <gui_name language="en">CCKNOWNPASS</gui_name>
            <description language="en">Indicates whether the instruction might have failed its condition code check.</description>
            <definition>[19]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="HSR_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="HSR_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="HSR_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($HSR &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($HSR &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="HSR_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="HSR_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="HSR_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField enumerationId="HSR_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="HSR_AET" name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en">Asynchronous Error Type.</description>
            <definition>[11]</definition>
          </bitField>
          <bitField enumerationId="HSR_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="HSR_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance. For a synchronous fault, identifies fault that comes from a cache maintenance or address translation instruction.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="HSR_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="HSR_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="HSR_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hstr.html" name="HSTR" size="4">
        <gui_name language="en">Hyp System Trap Register</gui_name>
        <description language="en">Controls trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to the System register in the coproc == 1111 encoding space, by the CRn value used to access the register using MCR or MRC instruction. When the register is accessible using an MCRR or MRRC instruction, this is the CRm value used to access the register.</description>
        <bitField enumerationId="HSTR_T_n" name="T15">
          <gui_name language="en">T15</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T14">
          <gui_name language="en">T14</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T13">
          <gui_name language="en">T13</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T12">
          <gui_name language="en">T12</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T11">
          <gui_name language="en">T11</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T10">
          <gui_name language="en">T10</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T9">
          <gui_name language="en">T9</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T8">
          <gui_name language="en">T8</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T7">
          <gui_name language="en">T7</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T6">
          <gui_name language="en">T6</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T5">
          <gui_name language="en">T5</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T4">
          <gui_name language="en">T4</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T3">
          <gui_name language="en">T3</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T2">
          <gui_name language="en">T2</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T1">
          <gui_name language="en">T1</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HSTR_T_n" name="T0">
          <gui_name language="en">T0</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-htcr.html" name="HTCR" size="4">
        <gui_name language="en">Hyp Translation Control Register</gui_name>
        <description language="en">The control register for stage 1 of the EL2 translation regime.</description>
        <bitField enumerationId="HTCR_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="HTCR_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="HTCR_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using HTTBR.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by HTTBR. The region size is 2^(32-T0SZ) bytes.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-htpidr.html" name="HTPIDR" size="4">
        <gui_name language="en">Hyp Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software running in Hyp mode can store thread identifying information that is not visible to Non-secure software executing at EL0 or EL1, for hypervisor management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-httbr.html" name="HTTBR" size="8">
        <gui_name language="en">Hyp Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of an address translation in the EL2 translation regime, and other information for this translation regime.</description>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hvbar.html" name="HVBAR" size="4">
        <gui_name language="en">Hyp Vector Base Address Register</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to Hyp mode.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-icc_hsre.html" name="ICC_HSRE" size="4">
        <gui_name language="en">Interrupt Controller Hyp System Register Enable register</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField enumerationId="ICC_HSRE_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_HSRE_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap0rn.html" name="ICH_AP0R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R0" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R1" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_ap1rn.html" name="ICH_AP1R3" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_eisr.html" name="ICH_EISR" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_elrsr.html" name="ICH_ELRSR" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">Indicates which List registers contain valid interrupts.</description>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_hcr.html" name="ICH_HCR" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR and ICV_DIR.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrn.html" name="ICH_LR15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC0" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC1" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC2" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC3" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC4" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC5" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC6" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC7" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC8" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC9" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC10" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC11" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC12" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC13" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC14" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_lrcn.html" name="ICH_LRC15" size="4">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LRC_n_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the INTID that the pINTID field indicates.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_LRC_n_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_misr.html" name="ICH_MISR" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField enumerationId="ICH_MISR_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_vmcr.html" name="ICH_VMCR" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-ich_vtr.html" name="ICH_VTR" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallh.html" name="TLBIALLH" size="4">
        <gui_name language="en">TLB Invalidate All, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiallhis.html" name="TLBIALLHIS" size="4">
        <gui_name language="en">TLB Invalidate All, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2.html" name="TLBIIPAS2" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2is.html" name="TLBIIPAS2IS" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2l.html" name="TLBIIPAS2L" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbiipas2lis.html" name="TLBIIPAS2LIS" size="4">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that meet the following requirements...</description>
        <bitField name="IPA_39_12">
          <gui_name language="en">IPA_39_12</gui_name>
          <description language="en">Bits[39:12] of the intermediate physical address to match.</description>
          <definition>[27:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvah.html" name="TLBIMVAH" size="4">
        <gui_name language="en">TLB Invalidate by VA, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvahis.html" name="TLBIMVAHIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from any level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvalh.html" name="TLBIMVALH" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level, Hyp mode</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from the final level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-tlbimvalhis.html" name="TLBIMVALHIS" size="4">
        <gui_name language="en">TLB Invalidate by VA, Last level, Hyp mode, Inner Shareable</gui_name>
        <description language="en">If EL2 is implemented, invalidate all cached copies of translation table entries from TLBs that are from the final level of the translation table walk that would be required for the Non-secure EL2 translation regime and used to translate the specified address...</description>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Virtual address to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[31:12]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vmpidr.html" name="VMPIDR" size="4">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR.</description>
        <bitField enumerationId="VMPIDR_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Indicates whether this implementation includes the functionality introduced by the ARMv7 Multiprocessing Extensions.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. The least significant affinity level field, for this PE in the system.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. The intermediate affinity level field, for this PE in the system.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. The most significant affinity level field, for this PE in the system.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vpidr.html" name="VPIDR" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="VPIDR_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vtcr.html" name="VTCR" size="4">
        <gui_name language="en">Virtualization Translation Control Register</gui_name>
        <description language="en">The control register for stage 2 of the Non-secure PL1&amp;0 translation regime.</description>
        <bitField enumerationId="VTCR_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="VTCR_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="VTCR_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using VTTBR.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="VTCR_SL0" name="SL0">
          <gui_name language="en">SL0</gui_name>
          <description language="en">Starting level for translation table walks using VTTBR.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField name="S">
          <gui_name language="en">S</gui_name>
          <description language="en">Sign extension bit. This bit must be programmed to the value of T0SZ[3]. If it is not, then the behavior is CONSTRAINED UNPREDICTABLE and the stage 2 T0SZ value is treated as an UNKNOWN value, see .</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by VTTBR. The region size is 2^(32-T0SZ) bytes.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-vttbr.html" name="VTTBR" size="8">
        <gui_name language="en">Virtualization Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the Non-secure PL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">The VMID for the translation table.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, bits[47:x], Bits [x-1:0] are RES0, with the additional requirement that if bits[x-1:3] are not all zero, this is a misaligned translation table base address, with effects that are CONSTRAINED UNPREDICTABLE, and must be one of the following:</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="ImplementationDefined" xml:base="Registers/System/A35_AARCH32_ImpDef.xml">
      <gui_name language="en">Implementation Defined</gui_name>
      <description language="en">Implementation Defined</description>
      <register access="RW" name="L2CTLR" size="4">
        <gui_name language="en">L2 Control Register</gui_name>
        <description language="en">L2 Control Register.</description>
      </register>
      <register access="RW" name="L2ECTLR" size="4">
        <gui_name language="en">L2 Extended Control Register</gui_name>
        <description language="en">L2 Extended Control Register.</description>
      </register>
      <register access="RW" name="L2ACTLR" size="4">
        <gui_name language="en">L2 Auxiliary Control Register</gui_name>
        <description language="en">L2 Auxiliary Control Register.</description>
      </register>
      <register access="RO" name="CBAR" size="4">
        <gui_name language="en">Configuration Base Address Register</gui_name>
        <description language="en">Configuration Base Address Register.</description>
      </register>
      <register access="RW" name="CPUACTLR" size="8">
        <gui_name language="en">CPU Auxiliary Control Register</gui_name>
        <description language="en">CPU Auxiliary Control Register.</description>
      </register>
      <register access="RW" name="CPUECTLR" size="8">
        <gui_name language="en">CPU Extended Control Register</gui_name>
        <description language="en">CPU Extended Control Register.</description>
      </register>
      <register access="RW" name="L2MERRSR" size="8">
        <gui_name language="en">L2 Memory Error Syndrome Register</gui_name>
        <description language="en">L2 Memory Error Syndrome Register.</description>
      </register>
    </register_group>

    <!--  <xi:include href="Registers/System/A35_AARCH32_ImpDef.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/>-->
  </cr:register_list>
  <cr:register_list filter="A35_AARCH64" name="System">

    <register_group xmlns="http://www.arm.com/core_reg" name="Address" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Address.xml">
      <gui_name language="en">Address</gui_name>
      <description language="en">Address</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-par_el1.html" name="PAR_EL1" size="8">
        <gui_name language="en">Physical Address Register</gui_name>
        <description language="en">Returns the output address (OA) from an Address translation instruction that executed successfully, or fault information if the instruction did not execute successfully.</description>
        <bitField enumerationId="PAR_EL1_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">Indicates whether the instruction performed a successful address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s12e0r.html" name="AT_S12E0R" size="8">
        <gui_name language="en">Address Translate Stages 1 and 2 EL0 Read</gui_name>
        <device_name type="rvi">AT_S12E0R</device_name>
        <device_name type="cadi">AT S12E0R</device_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for EL0, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s12e0w.html" name="AT_S12E0W" size="8">
        <gui_name language="en">Address Translate Stages 1 and 2 EL0 Write</gui_name>
        <device_name type="rvi">AT_S12E0W</device_name>
        <device_name type="cadi">AT S12E0W</device_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for EL0, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s12e1r.html" name="AT_S12E1R" size="8">
        <gui_name language="en">Address Translate Stages 1 and 2 EL1 Read</gui_name>
        <device_name type="rvi">AT_S12E1R</device_name>
        <device_name type="cadi">AT S12E1R</device_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for EL1, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s12e1w.html" name="AT_S12E1W" size="8">
        <gui_name language="en">Address Translate Stages 1 and 2 EL1 Write</gui_name>
        <device_name type="rvi">AT_S12E1W</device_name>
        <device_name type="cadi">AT S12E1W</device_name>
        <description language="en">Performs stage 1 and 2 address translations as defined for EL1, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e0r.html" name="AT_S1E0R" size="8">
        <gui_name language="en">Address Translate Stage 1 EL0 Read</gui_name>
        <device_name type="rvi">AT_S1E0R</device_name>
        <device_name type="cadi">AT S1E0R</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL0, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e0w.html" name="AT_S1E0W" size="8">
        <gui_name language="en">Address Translate Stage 1 EL0 Write</gui_name>
        <device_name type="rvi">AT_S1E0W</device_name>
        <device_name type="cadi">AT S1E0W</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL0, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e1r.html" name="AT_S1E1R" size="8">
        <gui_name language="en">Address Translate Stage 1 EL1 Read</gui_name>
        <device_name type="rvi">AT_S1E1R</device_name>
        <device_name type="cadi">AT S1E1R</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL1, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e1w.html" name="AT_S1E1W" size="8">
        <gui_name language="en">Address Translate Stage 1 EL1 Write</gui_name>
        <device_name type="rvi">AT_S1E1W</device_name>
        <device_name type="cadi">AT S1E1W</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL1, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e2r.html" name="AT_S1E2R" size="8">
        <gui_name language="en">Address Translate Stage 1 EL2 Read</gui_name>
        <device_name type="rvi">AT_S1E2R</device_name>
        <device_name type="cadi">AT S1E2R</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL2, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e2w.html" name="AT_S1E2W" size="8">
        <gui_name language="en">Address Translate Stage 1 EL2 Write</gui_name>
        <device_name type="rvi">AT_S1E2W</device_name>
        <device_name type="cadi">AT S1E2W</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL2, with permissions as if writing to the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e3r.html" name="AT_S1E3R" size="8">
        <gui_name language="en">Address Translate Stage 1 EL3 Read</gui_name>
        <device_name type="rvi">AT_S1E3R</device_name>
        <device_name type="cadi">AT S1E3R</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL3, with permissions as if reading from the given virtual address.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-at-s1e3w.html" name="AT_S1E3W" size="8">
        <gui_name language="en">Address Translate Stage 1 EL3 Write</gui_name>
        <device_name type="rvi">AT_S1E3W</device_name>
        <device_name type="cadi">AT S1E3W</device_name>
        <description language="en">Performs stage 1 address translation as defined for EL3, with permissions as if writing to the given virtual address.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Cache" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Cache.xml">
      <gui_name language="en">Cache</gui_name>
      <description language="en">Cache</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-cisw.html" name="DC_CISW" size="8">
        <gui_name language="en">Data or unified Cache line Clean and Invalidate by Set/Way</gui_name>
        <device_name type="rvi">DC_CISW</device_name>
        <device_name type="cadi">DC CISW</device_name>
        <description language="en">Clean and Invalidate data cache by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-civac.html" name="DC_CIVAC" size="8">
        <gui_name language="en">Data or unified Cache line Clean and Invalidate by VA to PoC</gui_name>
        <device_name type="rvi">DC_CIVAC</device_name>
        <device_name type="cadi">DC CIVAC</device_name>
        <description language="en">Clean and Invalidate data cache by address to Point of Coherency.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-csw.html" name="DC_CSW" size="8">
        <gui_name language="en">Data or unified Cache line Clean by Set/Way</gui_name>
        <device_name type="rvi">DC_CSW</device_name>
        <device_name type="cadi">DC CSW</device_name>
        <description language="en">Clean data cache by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-cvac.html" name="DC_CVAC" size="8">
        <gui_name language="en">Data or unified Cache line Clean by VA to PoC</gui_name>
        <device_name type="rvi">DC_CVAC</device_name>
        <device_name type="cadi">DC CVAC</device_name>
        <description language="en">Clean data cache by address to Point of Coherency.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-cvau.html" name="DC_CVAU" size="8">
        <gui_name language="en">Data or unified Cache line Clean by VA to PoU</gui_name>
        <device_name type="rvi">DC_CVAU</device_name>
        <device_name type="cadi">DC CVAU</device_name>
        <description language="en">Clean data cache by address to Point of Unification.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ic-iallu.html" name="IC_IALLU" size="8">
        <gui_name language="en">Instruction Cache Invalidate All to PoU</gui_name>
        <device_name type="rvi">IC_IALLU</device_name>
        <device_name type="cadi">IC IALLU</device_name>
        <description language="en">Invalidate all instruction caches to Point of Unification.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ic-ialluis.html" name="IC_IALLUIS" size="8">
        <gui_name language="en">Instruction Cache Invalidate All to PoU, Inner Shareable</gui_name>
        <device_name type="rvi">IC_IALLUIS</device_name>
        <device_name type="cadi">IC IALLUIS</device_name>
        <description language="en">Invalidate all instruction caches in Inner Shareable domain to Point of Unification.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-isw.html" name="DC_ISW" size="8">
        <gui_name language="en">Data or unified Cache line Invalidate by Set/Way</gui_name>
        <device_name type="rvi">DC_ISW</device_name>
        <device_name type="cadi">DC ISW</device_name>
        <description language="en">Invalidate data cache by set/way.</description>
        <bitField name="SetWay">
          <gui_name language="en">SetWay</gui_name>
          <description language="en">Contains two fields:</description>
          <definition>[31:4]</definition>
        </bitField>
        <bitField name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level to operate on, minus 1. For example, this field is 0 for operations on L1 cache, or 1 for operations on L2 cache.</description>
          <definition>[3:1]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-ivac.html" name="DC_IVAC" size="8">
        <gui_name language="en">Data or unified Cache line Invalidate by VA to PoC</gui_name>
        <device_name type="rvi">DC_IVAC</device_name>
        <device_name type="cadi">DC IVAC</device_name>
        <description language="en">Invalidate data cache by address to Point of Coherency.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ic-ivau.html" name="IC_IVAU" size="8">
        <gui_name language="en">Instruction Cache line Invalidate by VA to PoU</gui_name>
        <device_name type="rvi">IC_IVAU</device_name>
        <device_name type="cadi">IC IVAU</device_name>
        <description language="en">Invalidate instruction cache by address to Point of Unification.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dc-zva.html" name="DC_ZVA" size="8">
        <gui_name language="en">Data Cache Zero by VA</gui_name>
        <device_name type="rvi">DC_ZVA</device_name>
        <device_name type="cadi">DC ZVA</device_name>
        <description language="en">Zero data cache by address. Zeroes a naturally aligned block of N bytes, where the size of N is identified in DCZID_EL0.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Debug" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Debug.xml">
      <gui_name language="en">Debug</gui_name>
      <description language="en">Debug</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgauthstatus_el1.html" name="DBGAUTHSTATUS_EL1" size="4">
        <gui_name language="en">Debug Authentication Status register</gui_name>
        <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug.</description>
        <bitField enumerationId="DBGAUTHSTATUS_EL1_SNID" name="SNID">
          <gui_name language="en">SNID</gui_name>
          <description language="en">Secure non-invasive debug.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_EL1_SID" name="SID">
          <gui_name language="en">SID</gui_name>
          <description language="en">Secure invasive debug.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_EL1_NSNID" name="NSNID">
          <gui_name language="en">NSNID</gui_name>
          <description language="en">Non-secure non-invasive debug.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DBGAUTHSTATUS_EL1_NSID" name="NSID">
          <gui_name language="en">NSID</gui_name>
          <description language="en">Non-secure invasive debug.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR0_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR1_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR2_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR3_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR4_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR5_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR6_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR7_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR8_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR9_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR10_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR11_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR12_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR13_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR14_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR15_EL1" size="4">
        <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
        <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
          <gui_name language="en">BT</gui_name>
          <description language="en">Breakpoint Type.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
          <definition>[8:5]</definition>
        </bitField>
        <bitField name="PMC">
          <gui_name language="en">PMC</gui_name>
          <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR0_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR1_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR2_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR3_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR4_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR5_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR6_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR7_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR8_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR9_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR10_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR11_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR12_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR13_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR14_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR15_EL1" size="8">
        <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
        <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgclaimclr_el1.html" name="DBGCLAIMCLR_EL1" size="4">
        <gui_name language="en">Debug Claim Tag Clear register</gui_name>
        <description language="en">Used by software to read the values of the CLAIM tag bits, and to clear these bits to 0...</description>
        <bitField name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Read or clear CLAIM tag bits. Reading this field returns the current value of the CLAIM tag bits.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgclaimset_el1.html" name="DBGCLAIMSET_EL1" size="4">
        <gui_name language="en">Debug Claim Tag Set register</gui_name>
        <description language="en">Used by software to set the CLAIM tag bits to 1...</description>
        <bitField name="CLAIM">
          <gui_name language="en">CLAIM</gui_name>
          <description language="en">Set CLAIM tag bits. RAO.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgprcr_el1.html" name="DBGPRCR_EL1" size="4">
        <gui_name language="en">Debug Power Control Register</gui_name>
        <description language="en">Controls behavior of the PE on powerdown request.</description>
        <bitField enumerationId="DBGPRCR_EL1_CORENPDRQ" name="CORENPDRQ">
          <gui_name language="en">CORENPDRQ</gui_name>
          <description language="en">Core no powerdown request. Requests emulation of powerdown.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgvcr32_el2.html" name="DBGVCR32_EL2" size="4">
        <gui_name language="en">Debug Vector Catch Register</gui_name>
        <description language="en">Allows access to the AArch32 register DBGVCR from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR0_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR1_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR2_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR3_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR4_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR5_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR6_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR7_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR8_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR9_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR10_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR11_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR12_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR13_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR14_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR15_EL1" size="4">
        <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
        <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
        <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
          <gui_name language="en">MASK</gui_name>
          <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
          <definition>[28:24]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
          <gui_name language="en">WT</gui_name>
          <description language="en">Watchpoint type.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="LBN">
          <gui_name language="en">LBN</gui_name>
          <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="SSC">
          <gui_name language="en">SSC</gui_name>
          <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="HMC">
          <gui_name language="en">HMC</gui_name>
          <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="BAS">
          <gui_name language="en">BAS</gui_name>
          <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
          <definition>[12:5]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
          <gui_name language="en">LSC</gui_name>
          <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
          <definition>[4:3]</definition>
        </bitField>
        <bitField name="PAC">
          <gui_name language="en">PAC</gui_name>
          <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
          <definition>[2:1]</definition>
        </bitField>
        <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable watchpoint n.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR0_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR1_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR2_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR3_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR4_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR5_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR6_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR7_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR8_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR9_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR10_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR11_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR12_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR13_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR14_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR15_EL1" size="8">
        <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
        <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
        <bitField name="RESS">
          <gui_name language="en">RESS</gui_name>
          <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
          <definition>[63:49]</definition>
        </bitField>
        <bitField name="VA">
          <gui_name language="en">VA</gui_name>
          <description language="en">Bits[48:2] of the address value for comparison.</description>
          <definition>[48:2]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdccint_el1.html" name="MDCCINT_EL1" size="4">
        <gui_name language="en">Monitor DCC Interrupt Enable Register</gui_name>
        <description language="en">Enables interrupt requests to be signaled based on the DCC status flags.</description>
        <bitField enumerationId="MDCCINT_EL1_RX" name="RX">
          <gui_name language="en">RX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRRX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="MDCCINT_EL1_TX" name="TX">
          <gui_name language="en">TX</gui_name>
          <description language="en">DCC interrupt request enable control for DTRTX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
          <definition>[29]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdccsr_el0.html" name="MDCCSR_EL0" size="4">
        <gui_name language="en">Monitor DCC Status Register</gui_name>
        <description language="en">Main control register for the debug implementation, containing flow-control flags for the DCC. This is an internal, read-only view.</description>
        <bitField name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">DTRRX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">DTRTX full. Read-only view of the equivalent bit in the EDSCR.</description>
          <definition>[29]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el2.html" name="MDCR_EL2" size="4">
        <gui_name language="en">Monitor Debug Configuration Register (EL2)</gui_name>
        <description language="en">Provides EL2 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
        <bitField enumerationId="MDCR_EL2_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps Non-secure System register accesses to the Debug ROM registers to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap Debug Access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hypervisor Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR_EL0 or PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR_EL0 or PMCR to EL2.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL0 and EL1 modes.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el3.html" name="MDCR_EL3" size="4">
        <gui_name language="en">Monitor Debug Configuration Register (EL3)</gui_name>
        <description language="en">Provides EL3 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
        <bitField enumerationId="MDCR_EL3_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_EDAD" name="EDAD">
          <gui_name language="en">EDAD</gui_name>
          <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SPME" name="SPME">
          <gui_name language="en">SPME</gui_name>
          <description language="en">Secure Performance Monitors enable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SDD" name="SDD">
          <gui_name language="en">SDD</gui_name>
          <description language="en">AArch64 Secure self-hosted invasive debug disable. Disables Software debug exceptions in Secure state, other than Breakpoint Instruction exceptions.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SPD32" name="SPD32">
          <gui_name language="en">SPD32</gui_name>
          <description language="en">AArch32 Secure self-hosted privileged invasive debug control. Enables or disables debug exceptions from Secure EL1 using AArch32, other than Breakpoint Instruction exceptions.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap Debug Access. Traps EL2, EL1, and EL0 System register accesses to those debug System registers that cannot be trapped using the MDCR_EL3.TDOSA field. When MDCR_EL3.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps EL2, EL1, and EL0 accesses to all Performance Monitors registers to EL3, from both Security states and both Execution states.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdrar_el1.html" name="MDRAR_EL1" size="8">
        <gui_name language="en">Monitor Debug ROM Address Register</gui_name>
        <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
        <bitField name="ROMADDR_47_12">
          <gui_name language="en">ROMADDR_47_12</gui_name>
          <description language="en">Bits[47:12] of the ROM table physical address.</description>
          <definition>[47:12]</definition>
        </bitField>
        <bitField enumerationId="MDRAR_EL1_Valid" name="Valid">
          <gui_name language="en">Valid</gui_name>
          <description language="en">This field indicates whether the ROM Table address is valid.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdscr_el1.html" name="MDSCR_EL1" size="4">
        <gui_name language="en">Monitor Debug System Control Register</gui_name>
        <description language="en">Main control register for the debug implementation.</description>
        <bitField name="RXfull">
          <gui_name language="en">RXfull</gui_name>
          <description language="en">Used for save/restore of EDSCR.RXfull.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="TXfull">
          <gui_name language="en">TXfull</gui_name>
          <description language="en">Used for save/restore of EDSCR.TXfull.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="RXO">
          <gui_name language="en">RXO</gui_name>
          <description language="en">Used for save/restore of EDSCR.RXO.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="TXU">
          <gui_name language="en">TXU</gui_name>
          <description language="en">Used for save/restore of EDSCR.TXU.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField name="INTdis">
          <gui_name language="en">INTdis</gui_name>
          <description language="en">Used for save/restore of EDSCR.INTdis.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Used for save/restore of EDSCR.TDA.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="MDSCR_EL1_MDE" name="MDE">
          <gui_name language="en">MDE</gui_name>
          <description language="en">Monitor debug events. Enable Breakpoint, Watchpoint, and Vector Catch exceptions.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField name="HDE">
          <gui_name language="en">HDE</gui_name>
          <description language="en">Used for save/restore of EDSCR.HDE.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="MDSCR_EL1_KDE" name="KDE">
          <gui_name language="en">KDE</gui_name>
          <description language="en">Local (kernel) debug enable. If ELD is using AArch64, enable debug exceptions within ELD.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="MDSCR_EL1_TDCC" name="TDCC">
          <gui_name language="en">TDCC</gui_name>
          <description language="en">Traps EL0 accesses to the DCC registers to EL1, from both Execution states:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField name="ERR">
          <gui_name language="en">ERR</gui_name>
          <description language="en">Used for save/restore of EDSCR.ERR.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="MDSCR_EL1_SS" name="SS">
          <gui_name language="en">SS</gui_name>
          <description language="en">Software step control bit. If ELD is using AArch64, enable Software step.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdlr_el1.html" name="OSDLR_EL1" size="4">
        <gui_name language="en">OS Double Lock Register</gui_name>
        <description language="en">Used to control the OS Double Lock.</description>
        <bitField enumerationId="OSDLR_EL1_DLK" name="DLK">
          <gui_name language="en">DLK</gui_name>
          <description language="en">OS Double Lock control bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdtrrx_el1.html" name="OSDTRRX_EL1" size="4">
        <gui_name language="en">OS Lock Data Transfer Register, Receive</gui_name>
        <description language="en">Used for save/restore of DBGDTRRX_EL0. It is a component of the Debug Communications Channel.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdtrtx_el1.html" name="OSDTRTX_EL1" size="4">
        <gui_name language="en">OS Lock Data Transfer Register, Transmit</gui_name>
        <description language="en">Used for save/restore of DBGDTRTX_EL0. It is a component of the Debug Communications Channel.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oseccr_el1.html" name="OSECCR_EL1" size="4">
        <gui_name language="en">OS Lock Exception Catch Control Register</gui_name>
        <description language="en">Provides a mechanism for an operating system to access the contents of EDECCR that are otherwise invisible to software, so it can save/restore the contents of EDECCR over powerdown on behalf of the external debugger.</description>
        <bitField name="EDECCR">
          <gui_name language="en">EDECCR</gui_name>
          <description language="en">Used for save/restore to EDECCR over powerdown.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oslar_el1.html" name="OSLAR_EL1" size="4">
        <gui_name language="en">OS Lock Access Register</gui_name>
        <description language="en">Used to lock or unlock the OS lock.</description>
        <bitField name="OSLK">
          <gui_name language="en">OSLK</gui_name>
          <description language="en">On writes to OSLAR_EL1, bit[0] is copied to the OS lock.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oslsr_el1.html" name="OSLSR_EL1" size="4">
        <gui_name language="en">OS Lock Status Register</gui_name>
        <description language="en">Provides the status of the OS lock.</description>
        <bitField name="OSLM_1">
          <gui_name language="en">OSLM_1</gui_name>
          <description language="en">See below for description of the OSLM field.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="nTT">
          <gui_name language="en">nTT</gui_name>
          <description language="en">Not 32-bit access. This bit is always RAZ. It indicates that a 32-bit access is needed to write the key to the OS Lock Access Register.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="OSLSR_EL1_OSLK" name="OSLK">
          <gui_name language="en">OSLK</gui_name>
          <description language="en">OS Lock Status.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="OSLSR_EL1_OSLM_0" name="OSLM_0">
          <gui_name language="en">OSLM_0</gui_name>
          <description language="en">OS lock model implemented. Identifies the form of OS save and restore mechanism implemented.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sder32_el3.html" name="SDER32_EL3" size="4">
        <gui_name language="en">AArch32 Secure Debug Enable Register</gui_name>
        <description language="en">Allows access to the AArch32 register SDER from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
        <bitField enumerationId="SDER32_EL3_SUNIDEN" name="SUNIDEN">
          <gui_name language="en">SUNIDEN</gui_name>
          <description language="en">Secure User Non-Invasive Debug Enable:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SDER32_EL3_SUIDEN" name="SUIDEN">
          <gui_name language="en">SUIDEN</gui_name>
          <description language="en">Secure User Invasive Debug Enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Exception" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Exception.xml">
      <gui_name language="en">Exception</gui_name>
      <description language="en">Exception</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el1.html" name="AFSR0_EL1" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL1)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el2.html" name="AFSR0_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el3.html" name="AFSR0_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el1.html" name="AFSR1_EL1" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL1)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el2.html" name="AFSR1_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el3.html" name="AFSR1_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-esr_el1.html" name="ESR_EL1" size="4">
        <gui_name language="en">Exception Syndrome Register (EL1)</gui_name>
        <description language="en">Holds syndrome information for an exception taken to EL1.</description>
        <bitField enumerationId="ESR_EL1_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="ESR_EL1_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction Length for synchronous exceptions.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="ESR_EL1_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x5">
          <bitField enumerationId="ESR_EL1_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="ESR_EL1_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[14:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="ESR_EL1_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="ESR_EL1_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x11 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x15">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x18">
          <bitField name="Op0">
            <gui_name language="en">Op0</gui_name>
            <description language="en">The Op0 value from the issued instruction.</description>
            <definition>[21:20]</definition>
          </bitField>
          <bitField name="Op2">
            <gui_name language="en">Op2</gui_name>
            <description language="en">The Op2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Op1">
            <gui_name language="en">Op1</gui_name>
            <description language="en">The Op1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="ESR_EL1_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and IFSC is 010000, describes the state of the PE after taking the Instruction Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="ESR_EL1_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction. If the exception was taken from an Exception level that is using AArch32 then this is the AArch64 view of the register. See .</description>
            <definition>[20:16]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_SF" name="SF">
            <gui_name language="en">SF</gui_name>
            <description language="en">Width of the register accessed by the instruction is Sixty-Four.</description>
            <definition>[15]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and DFSC is 010000, describes the state of the PE after taking the Data Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x28 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x2C">
          <bitField enumerationId="ESR_EL1_TFV" name="TFV">
            <gui_name language="en">TFV</gui_name>
            <description language="en">Trapped Fault Valid bit. Indicates whether the IDF, IXF, UFF, OFF, DZF, and IOF bits hold valid information about trapped floating-point exceptions.</description>
            <definition>[23]</definition>
          </bitField>
          <bitField name="VECITR">
            <gui_name language="en">VECITR</gui_name>
            <description language="en">For a trapped floating-point exception from an instruction executed in AArch32 state this field is RES1.</description>
            <definition>[10:8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_IDF" name="IDF">
            <gui_name language="en">IDF</gui_name>
            <description language="en">Input Denormal floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_IXF" name="IXF">
            <gui_name language="en">IXF</gui_name>
            <description language="en">Inexact floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_UFF" name="UFF">
            <gui_name language="en">UFF</gui_name>
            <description language="en">Underflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[3]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_OFF" name="OFF">
            <gui_name language="en">OFF</gui_name>
            <description language="en">Overflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[2]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_DZF" name="DZF">
            <gui_name language="en">DZF</gui_name>
            <description language="en">Divide by Zero floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_IOF" name="IOF">
            <gui_name language="en">IOF</gui_name>
            <description language="en">Invalid Operation floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x2F">
          <bitField enumerationId="ESR_EL1_IDS" name="IDS">
            <gui_name language="en">IDS</gui_name>
            <description language="en">IMPLEMENTATION DEFINED syndrome.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="IESB">
            <gui_name language="en">IESB</gui_name>
            <description language="en">Reserved, RES0</description>
            <definition>[13]</definition>
          </bitField>
          <bitField name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en"/>
            <definition>[12:10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. When the RAS Extension is implemented, this bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x30 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x31">
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x32 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x33">
          <bitField enumerationId="ESR_EL1_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_EX" name="EX">
            <gui_name language="en">EX</gui_name>
            <description language="en">Exclusive operation. If the ISV bit is set to 1, this bit indicates whether a Load-Exclusive instruction was stepped.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x34 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x35">
          <bitField enumerationId="ESR_EL1_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL1_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether the abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x38 || (($ESR_EL1 &gt;&gt; 26) &amp; 0x3F) == 0x3C">
          <bitField name="Comment">
            <gui_name language="en">Comment</gui_name>
            <description language="en">Set to the instruction comment field value, zero extended as necessary. For the AArch32 BKPT instructions, the comment field is described as the immediate field.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-esr_el2.html" name="ESR_EL2" size="4">
        <gui_name language="en">Exception Syndrome Register (EL2)</gui_name>
        <description language="en">Holds syndrome information for an exception taken to EL2.</description>
        <bitField enumerationId="ESR_EL2_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="ESR_EL2_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction Length for synchronous exceptions.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x5 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x8">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[14:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x11 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x12 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x15 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x16">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x13">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_CCKNOWNPASS" name="CCKNOWNPASS">
            <gui_name language="en">CCKNOWNPASS</gui_name>
            <description language="en">Indicates whether the instruction might have failed its condition code check.</description>
            <definition>[19]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x17">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the issued SMC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x18">
          <bitField name="Op0">
            <gui_name language="en">Op0</gui_name>
            <description language="en">The Op0 value from the issued instruction.</description>
            <definition>[21:20]</definition>
          </bitField>
          <bitField name="Op2">
            <gui_name language="en">Op2</gui_name>
            <description language="en">The Op2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Op1">
            <gui_name language="en">Op1</gui_name>
            <description language="en">The Op1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="ESR_EL2_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and IFSC is 010000, describes the state of the PE after taking the Instruction Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="ESR_EL2_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction. If the exception was taken from an Exception level that is using AArch32 then this is the AArch64 view of the register. See .</description>
            <definition>[20:16]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SF" name="SF">
            <gui_name language="en">SF</gui_name>
            <description language="en">Width of the register accessed by the instruction is Sixty-Four.</description>
            <definition>[15]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and DFSC is 010000, describes the state of the PE after taking the Data Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x28 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x2C">
          <bitField enumerationId="ESR_EL2_TFV" name="TFV">
            <gui_name language="en">TFV</gui_name>
            <description language="en">Trapped Fault Valid bit. Indicates whether the IDF, IXF, UFF, OFF, DZF, and IOF bits hold valid information about trapped floating-point exceptions.</description>
            <definition>[23]</definition>
          </bitField>
          <bitField name="VECITR">
            <gui_name language="en">VECITR</gui_name>
            <description language="en">For a trapped floating-point exception from an instruction executed in AArch32 state this field is RES1.</description>
            <definition>[10:8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IDF" name="IDF">
            <gui_name language="en">IDF</gui_name>
            <description language="en">Input Denormal floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IXF" name="IXF">
            <gui_name language="en">IXF</gui_name>
            <description language="en">Inexact floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_UFF" name="UFF">
            <gui_name language="en">UFF</gui_name>
            <description language="en">Underflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[3]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_OFF" name="OFF">
            <gui_name language="en">OFF</gui_name>
            <description language="en">Overflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[2]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DZF" name="DZF">
            <gui_name language="en">DZF</gui_name>
            <description language="en">Divide by Zero floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IOF" name="IOF">
            <gui_name language="en">IOF</gui_name>
            <description language="en">Invalid Operation floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x2F">
          <bitField enumerationId="ESR_EL2_IDS" name="IDS">
            <gui_name language="en">IDS</gui_name>
            <description language="en">IMPLEMENTATION DEFINED syndrome.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="IESB">
            <gui_name language="en">IESB</gui_name>
            <description language="en">Reserved, RES0</description>
            <definition>[13]</definition>
          </bitField>
          <bitField name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en"/>
            <definition>[12:10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. When the RAS Extension is implemented, this bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x30 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x31 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3A">
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x32 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x33">
          <bitField enumerationId="ESR_EL2_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_EX" name="EX">
            <gui_name language="en">EX</gui_name>
            <description language="en">Exclusive operation. If the ISV bit is set to 1, this bit indicates whether a Load-Exclusive instruction was stepped.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x34 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x35">
          <bitField enumerationId="ESR_EL2_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether the abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x38 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3C">
          <bitField name="Comment">
            <gui_name language="en">Comment</gui_name>
            <description language="en">Set to the instruction comment field value, zero extended as necessary. For the AArch32 BKPT instructions, the comment field is described as the immediate field.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-esr_el3.html" name="ESR_EL3" size="4">
        <gui_name language="en">Exception Syndrome Register (EL3)</gui_name>
        <description language="en">Holds syndrome information for an exception taken to EL3.</description>
        <bitField enumerationId="ESR_EL3_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="ESR_EL3_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction Length for synchronous exceptions.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="ESR_EL3_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x5">
          <bitField enumerationId="ESR_EL3_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="ESR_EL3_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[14:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="ESR_EL3_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="ESR_EL3_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x15 || (($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x16">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x17">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the issued SMC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x18">
          <bitField name="Op0">
            <gui_name language="en">Op0</gui_name>
            <description language="en">The Op0 value from the issued instruction.</description>
            <definition>[21:20]</definition>
          </bitField>
          <bitField name="Op2">
            <gui_name language="en">Op2</gui_name>
            <description language="en">The Op2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Op1">
            <gui_name language="en">Op1</gui_name>
            <description language="en">The Op1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="ESR_EL3_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and IFSC is 010000, describes the state of the PE after taking the Instruction Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="ESR_EL3_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction. If the exception was taken from an Exception level that is using AArch32 then this is the AArch64 view of the register. See .</description>
            <definition>[20:16]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_SF" name="SF">
            <gui_name language="en">SF</gui_name>
            <description language="en">Width of the register accessed by the instruction is Sixty-Four.</description>
            <definition>[15]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and DFSC is 010000, describes the state of the PE after taking the Data Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x2C">
          <bitField enumerationId="ESR_EL3_TFV" name="TFV">
            <gui_name language="en">TFV</gui_name>
            <description language="en">Trapped Fault Valid bit. Indicates whether the IDF, IXF, UFF, OFF, DZF, and IOF bits hold valid information about trapped floating-point exceptions.</description>
            <definition>[23]</definition>
          </bitField>
          <bitField name="VECITR">
            <gui_name language="en">VECITR</gui_name>
            <description language="en">For a trapped floating-point exception from an instruction executed in AArch32 state this field is RES1.</description>
            <definition>[10:8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_IDF" name="IDF">
            <gui_name language="en">IDF</gui_name>
            <description language="en">Input Denormal floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_IXF" name="IXF">
            <gui_name language="en">IXF</gui_name>
            <description language="en">Inexact floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_UFF" name="UFF">
            <gui_name language="en">UFF</gui_name>
            <description language="en">Underflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[3]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_OFF" name="OFF">
            <gui_name language="en">OFF</gui_name>
            <description language="en">Overflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[2]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_DZF" name="DZF">
            <gui_name language="en">DZF</gui_name>
            <description language="en">Divide by Zero floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_IOF" name="IOF">
            <gui_name language="en">IOF</gui_name>
            <description language="en">Invalid Operation floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x2F">
          <bitField enumerationId="ESR_EL3_IDS" name="IDS">
            <gui_name language="en">IDS</gui_name>
            <description language="en">IMPLEMENTATION DEFINED syndrome.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="IESB">
            <gui_name language="en">IESB</gui_name>
            <description language="en">Reserved, RES0</description>
            <definition>[13]</definition>
          </bitField>
          <bitField name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en"/>
            <definition>[12:10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. When the RAS Extension is implemented, this bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL3_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL3 &gt;&gt; 26) &amp; 0x3F) == 0x3C">
          <bitField name="Comment">
            <gui_name language="en">Comment</gui_name>
            <description language="en">Set to the instruction comment field value, zero extended as necessary. For the AArch32 BKPT instructions, the comment field is described as the immediate field.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-far_el1.html" name="FAR_EL1" size="8">
        <gui_name language="en">Fault Address Register (EL1)</gui_name>
        <description language="en">Holds the faulting Virtual Address for all synchronous Instruction or Data Abort, PC alignment fault and Watchpoint exceptions that are taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-far_el2.html" name="FAR_EL2" size="8">
        <gui_name language="en">Fault Address Register (EL2)</gui_name>
        <description language="en">Holds the faulting Virtual Address for all synchronous Instruction or Data Abort, PC alignment fault and Watchpoint exceptions that are taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-far_el3.html" name="FAR_EL3" size="8">
        <gui_name language="en">Fault Address Register (EL3)</gui_name>
        <description language="en">Holds the faulting Virtual Address for all synchronous Instruction or Data Abort and PC alignment fault exceptions that are taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hpfar_el2.html" name="HPFAR_EL2" size="8">
        <gui_name language="en">Hypervisor IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to EL2.</description>
        <bitField name="FIPA_47_12">
          <gui_name language="en">FIPA_47_12</gui_name>
          <description language="en">Bits [47:12] of the faulting intermediate physical address. For implementations with fewer than 48 physical address bits, the corresponding upper bits in this field are RES0.</description>
          <definition>[39:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ifsr32_el2.html" name="IFSR32_EL2" size="4">
        <gui_name language="en">Instruction Fault Status Register (EL2)</gui_name>
        <description language="en">Allows access to the AArch32 IFSR register from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
        <bitField enumerationId="IFSR32_EL2_FnV" name="FnV">
          <gui_name language="en">FnV</gui_name>
          <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField name="ExT">
          <gui_name language="en">ExT</gui_name>
          <description language="en">External abort type. This bit can be used to provide an IMPLEMENTATION DEFINED classification of external aborts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="IFSR32_EL2_LPAE" name="LPAE">
          <gui_name language="en">LPAE</gui_name>
          <description language="en">On taking a Data Abort exception, this bit is set as follows:</description>
          <definition>[9]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-isr_el1.html" name="ISR_EL1" size="4">
        <gui_name language="en">Interrupt Status Register</gui_name>
        <description language="en">Shows whether any IRQ, FIQ, or SError interrupt is pending. In an implementation that includes EL2, when the register is accessed from Non-secure EL1, a pending interrupt or external abort might be physical or virtual, and the architecture does not provide any mechanism that software executing at Non-secure EL1 can use to determine whether a pending interrupt or external abort is physical or virtual. For all other accesses, any indicated interrupt or external abort must be physical.</description>
        <bitField enumerationId="ISR_EL1_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt pending bit:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ISR_EL1_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ pending bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ISR_EL1_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ pending bit. Indicates whether an FIQ interrupt is pending.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vbar_el1.html" name="VBAR_EL1" size="8">
        <gui_name language="en">Vector Base Address Register (EL1)</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vbar_el2.html" name="VBAR_EL2" size="8">
        <gui_name language="en">Vector Base Address Register (EL2)</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vbar_el3.html" name="VBAR_EL3" size="8">
        <gui_name language="en">Vector Base Address Register (EL3)</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to EL3.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Float" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Float.xml">
      <gui_name language="en">Float</gui_name>
      <description language="en">Float</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpcr.html" name="FPCR" size="4">
        <gui_name language="en">Floating-point Control Register</gui_name>
        <description language="en">Controls floating-point behavior.</description>
        <bitField enumerationId="FPCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="FPCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="FPCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="FPCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Stride field.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Len field.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal floating-point exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact floating-point exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="FPCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow floating-point exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="FPCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow floating-point exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="FPCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Divide by Zero floating-point exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation floating-point exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpexc32_el2.html" name="FPEXC32_EL2" size="4">
        <gui_name language="en">Floating-Point Exception Control register</gui_name>
        <description language="en">Allows access to the AArch32 register FPEXC from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
        <bitField name="EX">
          <gui_name language="en">EX</gui_name>
          <description language="en">Exception bit. In ARMv8, this bit is RAZ/WI.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Enables access to the Advanced SIMD and floating-point functionality from all Exception levels, except that setting this field to 0 does not disable the following:</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_DEX" name="DEX">
          <gui_name language="en">DEX</gui_name>
          <description language="en">Defined synchronous exception on floating-point execution.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="FP2V">
          <gui_name language="en">FP2V</gui_name>
          <description language="en">FPINST2 instruction valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="VV">
          <gui_name language="en">VV</gui_name>
          <description language="en">VECITR valid bit. In ARMv8, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_TFV" name="TFV">
          <gui_name language="en">TFV</gui_name>
          <description language="en">Trapped Fault Valid bit. Valid only when the value of FPEXC.DEX is 1. When valid, it indicates the cause of the exception and therefore whether the FPEXC.{IDF, IXF, UFF, OFF, DZF, IOF} bits are valid.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField name="VECITR">
          <gui_name language="en">VECITR</gui_name>
          <description language="en">Vector iteration count. In ARMv8, this field is RES1.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_IDF" name="IDF">
          <gui_name language="en">IDF</gui_name>
          <description language="en">Input Denormal trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Input Denormal exception occurred while FPSCR.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_IXF" name="IXF">
          <gui_name language="en">IXF</gui_name>
          <description language="en">Inexact trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Inexact exception occurred while FPSCR.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_UFF" name="UFF">
          <gui_name language="en">UFF</gui_name>
          <description language="en">Underflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Underflow exception occurred while FPSCR.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_OFF" name="OFF">
          <gui_name language="en">OFF</gui_name>
          <description language="en">Overflow trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Overflow exception occurred while FPSCR.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_DZF" name="DZF">
          <gui_name language="en">DZF</gui_name>
          <description language="en">Divide by Zero trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether a Divide by Zero exception occurred while FPSCR.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="FPEXC32_EL2_IOF" name="IOF">
          <gui_name language="en">IOF</gui_name>
          <description language="en">Invalid Operation trapped exception bit. Valid only when the value of FPEXC.TFV is 1. When valid, it indicates whether an Invalid Operation exception occurred while FPSCR.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpsr.html" name="FPSR" size="4">
        <gui_name language="en">Floating-point Status Register</gui_name>
        <description language="en">Provides floating-point system status information.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.N flag instead.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.Z flag instead.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.C flag instead.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.V flag instead.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative floating-point exception bit. This bit is set to 1 to indicate that the Input Denormal floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative floating-point exception bit. This bit is set to 1 to indicate that the Inexact exception floating-point has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Underflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Overflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Divide by Zero cumulative floating-point exception bit. This bit is set to 1 to indicate that the Divide by Zero floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative floating-point exception bit. This bit is set to 1 to indicate that the Invalid Operation floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr0_el1.html" name="MVFR0_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR0_EL1_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr1_el1.html" name="MVFR1_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR1_EL1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr2_el1.html" name="MVFR2_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR2_EL1_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR2_EL1_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="GIC" xml:base="Registers/System/ARMv8.0/V8_AARCH64_GIC.xml">
      <gui_name language="en">GIC</gui_name>
      <description language="en">GIC</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap0rn_el1.html" name="ICC_AP0R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap0rn_el1.html" name="ICC_AP0R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap0rn_el1.html" name="ICC_AP0R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap0rn_el1.html" name="ICC_AP0R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="ICC_AP1R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="ICC_AP1R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="ICC_AP1R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="ICC_AP1R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="S_ICC_AP1R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="S_ICC_AP1R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="S_ICC_AP1R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="S_ICC_AP1R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="N_ICC_AP1R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="N_ICC_AP1R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="N_ICC_AP1R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ap1rn_el1.html" name="N_ICC_AP1R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 active priorities.</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_asgi1r_el1.html" name="ICC_ASGI1R_EL1" size="8">
        <gui_name language="en">Interrupt Controller Alias Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the Security state that is not the current Security state.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_ASGI1R_EL1_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_bpr0_el1.html" name="ICC_BPR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_bpr1_el1.html" name="ICC_BPR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_bpr1_el1.html" name="S_ICC_BPR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_bpr1_el1.html" name="N_ICC_BPR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for Group 0 and Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field. For more information about priorities, see .</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ctlr_el1.html" name="ICC_CTLR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Control Register (EL1)</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_EL1_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ctlr_el1.html" name="S_ICC_CTLR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Control Register (EL1)</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_EL1_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ctlr_el1.html" name="N_ICC_CTLR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Control Register (EL1)</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_EL1_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">EOI mode for the current Security state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL1_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ctlr_el3.html" name="ICC_CTLR_EL3" size="4">
        <gui_name language="en">Interrupt Controller Control Register (EL3)</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_EL3_nDS" name="nDS">
          <gui_name language="en">nDS</gui_name>
          <description language="en">Disable Security not supported. Read-only and writes are ignored.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_RM" name="RM">
          <gui_name language="en">RM</gui_name>
          <description language="en">Routing Modifier. For legacy operation of EL1 software with GICC_CTLR.FIQen set to 1, this bit indicates whether interrupts can be acknowledged or observed as the Highest Priority Pending Interrupt, or whether a special INTID value is returned.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL1NS" name="EOImode_EL1NS">
          <gui_name language="en">EOImode_EL1NS</gui_name>
          <description language="en">EOI mode for interrupts handled at Non-secure EL1 and EL2.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL1S" name="EOImode_EL1S">
          <gui_name language="en">EOImode_EL1S</gui_name>
          <description language="en">EOI mode for interrupts handled at Secure EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL3" name="EOImode_EL3">
          <gui_name language="en">EOImode_EL3</gui_name>
          <description language="en">EOI mode for interrupts handled at EL3.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_CBPR_EL1NS" name="CBPR_EL1NS">
          <gui_name language="en">CBPR_EL1NS</gui_name>
          <description language="en">Common Binary Point Register, EL1 Non-secure.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_CBPR_EL1S" name="CBPR_EL1S">
          <gui_name language="en">CBPR_EL1S</gui_name>
          <description language="en">Common Binary Point Register, EL1 Secure.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_dir_el1.html" name="ICC_DIR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_eoir0_el1.html" name="ICC_EOIR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 0 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR0_EL1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_eoir1_el1.html" name="ICC_EOIR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified Group 1 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICC_IAR1_EL1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_hppir0_el1.html" name="ICC_HPPIR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending Group 0 interrupt on the CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_hppir1_el1.html" name="ICC_HPPIR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending Group 1 interrupt on the CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending interrupt, if that interrupt is observable at the current Security state and Exception level.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_igrpen0_el1.html" name="ICC_IGRPEN0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether Group 0 interrupts are enabled or not.</description>
        <bitField enumerationId="ICC_IGRPEN0_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_igrpen1_el1.html" name="ICC_IGRPEN1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_igrpen1_el1.html" name="S_ICC_IGRPEN1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_igrpen1_el1.html" name="N_ICC_IGRPEN1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICC_IGRPEN1_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables Group 1 interrupts for the current Security state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_igrpen1_el3.html" name="ICC_IGRPEN1_EL3" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Group 1 Enable register (EL3)</gui_name>
        <description language="en">Controls whether Group 1 interrupts are enabled or not.</description>
        <bitField enumerationId="ICC_IGRPEN1_EL3_EnableGrp1S" name="EnableGrp1S">
          <gui_name language="en">EnableGrp1S</gui_name>
          <description language="en">Enables Group 1 interrupts for the Secure state.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_IGRPEN1_EL3_EnableGrp1NS" name="EnableGrp1NS">
          <gui_name language="en">EnableGrp1NS</gui_name>
          <description language="en">Enables Group 1 interrupts for the Non-secure state.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_pmr_el1.html" name="ICC_PMR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides an interrupt priority filter. Only interrupts with a higher priority than the value in this register are signaled to the PE...</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the CPU interface. If the priority of an interrupt is higher than the value indicated by this field, the interface signals the interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_rpr_el1.html" name="ICC_RPR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the CPU interface.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the CPU interface. This is the group priority of the current active interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sgi0r_el1.html" name="ICC_SGI0R_EL1" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 0 Register</gui_name>
        <description language="en">Generates Secure Group 0 SGIs.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_SGI0R_EL1_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sgi1r_el1.html" name="ICC_SGI1R_EL1" size="8">
        <gui_name language="en">Interrupt Controller Software Generated Interrupt Group 1 Register</gui_name>
        <description language="en">Generates Group 1 SGIs for the current Security state.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">The affinity 3 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField enumerationId="ICC_SGI1R_EL1_IRM" name="IRM">
          <gui_name language="en">IRM</gui_name>
          <description language="en">Interrupt Routing Mode. Determines how the generated interrupts are distributed to PEs.</description>
          <definition>[40]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">The affinity 2 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the SGI.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">The affinity 1 value of the affinity path of the cluster for which SGI interrupts will be generated.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="TargetList">
          <gui_name language="en">TargetList</gui_name>
          <description language="en">Target List. The set of PEs for which SGI interrupts will be generated. Each bit corresponds to the PE within a cluster with an Affinity 0 value equal to the bit number.</description>
          <definition>[15:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el1.html" name="ICC_SRE_EL1" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL1)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL1.</description>
        <bitField enumerationId="ICC_SRE_EL1_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el1.html" name="S_ICC_SRE_EL1" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL1)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL1.</description>
        <bitField enumerationId="ICC_SRE_EL1_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el1.html" name="N_ICC_SRE_EL1" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL1)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL1.</description>
        <bitField enumerationId="ICC_SRE_EL1_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL1_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el2.html" name="ICC_SRE_EL2" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL2)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField enumerationId="ICC_SRE_EL2_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE_EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el3.html" name="ICC_SRE_EL3" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL3)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL3.</description>
        <bitField enumerationId="ICC_SRE_EL3_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE_EL1 and ICC_SRE_EL2.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R0_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R1_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R2_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R3_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R0_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R1_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R2_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R3_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_eisr_el2.html" name="ICH_EISR_EL2" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_elrsr_el2.html" name="ICH_ELRSR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">These registers can be used to locate a usable List register when the hypervisor is delivering an interrupt to a VM.</description>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_hcr_el2.html" name="ICH_HCR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR_EL1 and ICV_DIR_EL1.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR0_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR1_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR2_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR3_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR4_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR5_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR6_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR7_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR8_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR9_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR10_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR11_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR12_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR13_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR14_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR15_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_misr_el2.html" name="ICH_MISR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField enumerationId="ICH_MISR_EL2_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_vmcr_el2.html" name="ICH_VMCR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR_EL2.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR_EL2.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_vtr_el2.html" name="ICH_VTR_EL2" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR_EL1 supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap0rn_el1.html" name="ICV_AP0R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap0rn_el1.html" name="ICV_AP0R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap0rn_el1.html" name="ICV_AP0R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap0rn_el1.html" name="ICV_AP0R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about virtual Group 0 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap1rn_el1.html" name="ICV_AP1R0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap1rn_el1.html" name="ICV_AP1R1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap1rn_el1.html" name="ICV_AP1R2_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ap1rn_el1.html" name="ICV_AP1R3_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about virtual Group 1 active priorities.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_bpr0_el1.html" name="ICV_BPR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 0</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 0 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">The value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_bpr1_el1.html" name="ICV_BPR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Binary Point Register 1</gui_name>
        <description language="en">Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines virtual Group 1 interrupt preemption.</description>
        <bitField name="BinaryPoint">
          <gui_name language="en">BinaryPoint</gui_name>
          <description language="en">If the GIC is configured to use separate binary point fields for virtual Group 0 and virtual Group 1 interrupts, the value of this field controls how the 8-bit interrupt priority field is split into a group priority field, that determines interrupt preemption, and a subpriority field.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_ctlr_el1.html" name="ICV_CTLR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Control Register</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC virtual CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICV_CTLR_EL1_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_EL1_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_EL1_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_EL1_EOImode" name="EOImode">
          <gui_name language="en">EOImode</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICV_CTLR_EL1_CBPR" name="CBPR">
          <gui_name language="en">CBPR</gui_name>
          <description language="en">Common Binary Point Register.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_dir_el1.html" name="ICV_DIR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Deactivate Virtual Interrupt Register</gui_name>
        <description language="en">When interrupt priority drop is separated from interrupt deactivation, a write to this register deactivates the specified virtual interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the virtual interrupt to be deactivated.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_eoir0_el1.html" name="ICV_EOIR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 0</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 0 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR0_EL1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_eoir1_el1.html" name="ICV_EOIR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual End Of Interrupt Register 1</gui_name>
        <description language="en">A PE writes to this register to inform the CPU interface that it has completed the processing of the specified virtual Group 1 interrupt.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID from the corresponding ICV_IAR1_EL1 access.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_hppir0_el1.html" name="ICV_HPPIR0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 0</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 0 interrupt on the virtual CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_hppir1_el1.html" name="ICV_HPPIR1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Highest Priority Pending Interrupt Register 1</gui_name>
        <description language="en">Indicates the highest priority pending virtual Group 1 interrupt on the virtual CPU interface.</description>
        <bitField name="INTID">
          <gui_name language="en">INTID</gui_name>
          <description language="en">The INTID of the highest priority pending virtual interrupt.</description>
          <definition>[23:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_igrpen0_el1.html" name="ICV_IGRPEN0_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 0 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 0 interrupts are enabled or not.</description>
        <bitField enumerationId="ICV_IGRPEN0_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_igrpen1_el1.html" name="ICV_IGRPEN1_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Group 1 Enable register</gui_name>
        <description language="en">Controls whether virtual Group 1 interrupts are enabled for the current Security state.</description>
        <bitField enumerationId="ICV_IGRPEN1_EL1_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enables virtual Group 1 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_pmr_el1.html" name="ICV_PMR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Interrupt Priority Mask Register</gui_name>
        <description language="en">Provides a virtual interrupt priority filter. Only virtual interrupts with a higher priority than the value in this register are signaled to the PE.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority mask level for the virtual CPU interface. If the priority of a virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icv_rpr_el1.html" name="ICV_RPR_EL1" size="4">
        <gui_name language="en">Interrupt Controller Virtual Running Priority Register</gui_name>
        <description language="en">Indicates the Running priority of the virtual CPU interface.</description>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The current running priority on the virtual CPU interface. This is the group priority of the current active virtual interrupt.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="ID" xml:base="Registers/System/ARMv8.0/V8_AARCH64_ID.xml">
      <gui_name language="en">ID</gui_name>
      <description language="en">ID</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-aidr_el1.html" name="AIDR_EL1" size="4">
        <gui_name language="en">Auxiliary ID Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED identification information...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ccsidr_el1.html" name="CCSIDR_EL1" size="4">
        <gui_name language="en">Current Cache Size ID Register</gui_name>
        <description language="en">Provides information about the architecture of the currently selected cache.</description>
        <bitField name="UNKNOWN">
          <gui_name language="en">UNKNOWN</gui_name>
          <description language="en">Reserved, UNKNOWN.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField name="NumSets">
          <gui_name language="en">NumSets</gui_name>
          <description language="en">(Number of sets in cache) - 1, therefore a value of 0 indicates 1 set in the cache. The number of sets does not have to be a power of 2.</description>
          <definition>[27:13]</definition>
        </bitField>
        <bitField name="Associativity">
          <gui_name language="en">Associativity</gui_name>
          <description language="en">(Associativity of cache) - 1, therefore a value of 0 indicates an associativity of 1. The associativity does not have to be a power of 2.</description>
          <definition>[12:3]</definition>
        </bitField>
        <bitField name="LineSize">
          <gui_name language="en">LineSize</gui_name>
          <description language="en">(Log2(Number of bytes in cache line)) - 4.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-clidr_el1.html" name="CLIDR_EL1" size="8">
        <gui_name language="en">Cache Level ID Register</gui_name>
        <description language="en">Identifies the type of cache, or caches, that are implemented at each level and can be managed using the architected cache maintenance instructions that operate by set/way, up to a maximum of seven levels. Also identifies the Level of Coherence (LoC) and Level of Unification (LoU) for the cache hierarchy.</description>
        <bitField enumerationId="CLIDR_EL1_ICB" name="ICB">
          <gui_name language="en">ICB</gui_name>
          <description language="en">Inner cache boundary. This field indicates the boundary for caching Inner Cacheable memory regions.</description>
          <definition>[32:30]</definition>
        </bitField>
        <bitField name="LoUU">
          <gui_name language="en">LoUU</gui_name>
          <description language="en">Level of Unification Uniprocessor for the cache hierarchy.</description>
          <definition>[29:27]</definition>
        </bitField>
        <bitField name="LoC">
          <gui_name language="en">LoC</gui_name>
          <description language="en">Level of Coherence for the cache hierarchy.</description>
          <definition>[26:24]</definition>
        </bitField>
        <bitField name="LoUIS">
          <gui_name language="en">LoUIS</gui_name>
          <description language="en">Level of Unification Inner Shareable for the cache hierarchy.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype7">
          <gui_name language="en">Ctype7</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype6">
          <gui_name language="en">Ctype6</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[17:15]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype5">
          <gui_name language="en">Ctype5</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[14:12]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype4">
          <gui_name language="en">Ctype4</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[11:9]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype3">
          <gui_name language="en">Ctype3</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[8:6]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype2">
          <gui_name language="en">Ctype2</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[5:3]</definition>
        </bitField>
        <bitField enumerationId="CLIDR_EL1_Ctype_n" name="Ctype1">
          <gui_name language="en">Ctype1</gui_name>
          <description language="en">Cache Type fields. Indicate the type of cache that is implemented and can be managed using the architected cache maintenance instructions that operate by set/way at each level, from Level 1 up to a maximum of seven levels of cache hierarchy.</description>
          <definition>[2:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-csselr_el1.html" name="CSSELR_EL1" size="4">
        <gui_name language="en">Cache Size Selection Register</gui_name>
        <description language="en">Selects the current Cache Size ID Register, CCSIDR_EL1, by specifying the required cache level and the cache type (either instruction or data cache).</description>
        <bitField enumerationId="CSSELR_EL1_Level" name="Level">
          <gui_name language="en">Level</gui_name>
          <description language="en">Cache level of required cache.</description>
          <definition>[3:1]</definition>
        </bitField>
        <bitField enumerationId="CSSELR_EL1_InD" name="InD">
          <gui_name language="en">InD</gui_name>
          <description language="en">Instruction not Data bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ctr_el0.html" name="CTR_EL0" size="4">
        <gui_name language="en">Cache Type Register</gui_name>
        <description language="en">Provides information about the architecture of the caches.</description>
        <bitField name="CWG">
          <gui_name language="en">CWG</gui_name>
          <description language="en">Cache writeback granule. Log2 of the number of words of the maximum size of memory that can be overwritten as a result of the eviction of a cache entry that has had a memory location in it modified.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField name="ERG">
          <gui_name language="en">ERG</gui_name>
          <description language="en">Exclusives reservation granule. Log2 of the number of words of the maximum size of the reservation granule that has been implemented for the Load-Exclusive and Store-Exclusive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="DminLine">
          <gui_name language="en">DminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the data caches and unified caches that are controlled by the PE.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="CTR_EL0_L1Ip" name="L1Ip">
          <gui_name language="en">L1Ip</gui_name>
          <description language="en">Level 1 instruction cache policy. Indicates the indexing and tagging policy for the L1 instruction cache.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField name="IminLine">
          <gui_name language="en">IminLine</gui_name>
          <description language="en">Log2 of the number of words in the smallest cache line of all the instruction caches that are controlled by the PE.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dczid_el0.html" name="DCZID_EL0" size="4">
        <gui_name language="en">Data Cache Zero ID register</gui_name>
        <description language="en">Indicates the block size that is written with byte values of 0 by the DC ZVA (Data Cache Zero by Address) system instruction.</description>
        <bitField enumerationId="DCZID_EL0_DZP" name="DZP">
          <gui_name language="en">DZP</gui_name>
          <description language="en">Data Zero prohibited.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="BS">
          <gui_name language="en">BS</gui_name>
          <description language="en">Log2 of the block size in words. The maximum size supported is 2KB (value == 9).</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64afr0_el1.html" name="ID_AA64AFR0_EL1" size="8">
        <gui_name language="en">AArch64 Auxiliary Feature Register 0</gui_name>
        <description language="en">Provides information about the IMPLEMENTATION DEFINED features of the PE in AArch64 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64afr1_el1.html" name="ID_AA64AFR1_EL1" size="8">
        <gui_name language="en">AArch64 Auxiliary Feature Register 1</gui_name>
        <description language="en">Reserved for future expansion of information about the IMPLEMENTATION DEFINED features of the PE in AArch64 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64dfr0_el1.html" name="ID_AA64DFR0_EL1" size="8">
        <gui_name language="en">AArch64 Debug Feature Register 0</gui_name>
        <description language="en">Provides top level information about the debug system in AArch64 state...</description>
        <bitField name="CTX_CMPs">
          <gui_name language="en">CTX_CMPs</gui_name>
          <description language="en">Number of breakpoints that are context-aware, minus 1. These are the highest numbered breakpoints.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField name="WRPs">
          <gui_name language="en">WRPs</gui_name>
          <description language="en">Number of watchpoints, minus 1. The value of 0b0000 is reserved.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField name="BRPs">
          <gui_name language="en">BRPs</gui_name>
          <description language="en">Number of breakpoints, minus 1. The value of 0b0000 is reserved.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64DFR0_EL1_PMUVer" name="PMUVer">
          <gui_name language="en">PMUVer</gui_name>
          <description language="en">Performance Monitors Extension version. Indicates whether System register interface to Performance Monitors extension is implemented.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64DFR0_EL1_TraceVer" name="TraceVer">
          <gui_name language="en">TraceVer</gui_name>
          <description language="en">Trace support. Indicates whether System register interface to a trace macrocell is implemented.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64DFR0_EL1_DebugVer" name="DebugVer">
          <gui_name language="en">DebugVer</gui_name>
          <description language="en">Debug architecture version. Indicates presence of ARMv8 debug architecture.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64dfr1_el1.html" name="ID_AA64DFR1_EL1" size="8">
        <gui_name language="en">AArch64 Debug Feature Register 1</gui_name>
        <description language="en">Reserved for future expansion of top level information about the debug system in AArch64 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64isar0_el1.html" name="ID_AA64ISAR0_EL1" size="8">
        <gui_name language="en">AArch64 Instruction Set Attribute Register 0</gui_name>
        <description language="en">Provides information about the instructions implemented in AArch64 state...</description>
        <bitField enumerationId="ID_AA64ISAR0_EL1_CRC32" name="CRC32">
          <gui_name language="en">CRC32</gui_name>
          <description language="en">CRC32 instructions implemented in AArch64 state.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64ISAR0_EL1_SHA2" name="SHA2">
          <gui_name language="en">SHA2</gui_name>
          <description language="en">SHA2 instructions implemented in AArch64 state.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64ISAR0_EL1_SHA1" name="SHA1">
          <gui_name language="en">SHA1</gui_name>
          <description language="en">SHA1 instructions implemented in AArch64 state.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64ISAR0_EL1_AES" name="AES">
          <gui_name language="en">AES</gui_name>
          <description language="en">AES instructions implemented in AArch64 state.</description>
          <definition>[7:4]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64isar1_el1.html" name="ID_AA64ISAR1_EL1" size="8">
        <gui_name language="en">AArch64 Instruction Set Attribute Register 1</gui_name>
        <description language="en">Reserved for future expansion of the information about the instructions implemented in AArch64 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64mmfr0_el1.html" name="ID_AA64MMFR0_EL1" size="8">
        <gui_name language="en">AArch64 Memory Model Feature Register 0</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch64 state...</description>
        <bitField enumerationId="ID_AA64MMFR0_EL1_TGran4" name="TGran4">
          <gui_name language="en">TGran4</gui_name>
          <description language="en">Support for 4KB memory translation granule size.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_TGran64" name="TGran64">
          <gui_name language="en">TGran64</gui_name>
          <description language="en">Support for 64KB memory translation granule size.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_TGran16" name="TGran16">
          <gui_name language="en">TGran16</gui_name>
          <description language="en">Support for 16KB memory translation granule size.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_BigEndEL0" name="BigEndEL0">
          <gui_name language="en">BigEndEL0</gui_name>
          <description language="en">Mixed-endian support at EL0 only.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_SNSMem" name="SNSMem">
          <gui_name language="en">SNSMem</gui_name>
          <description language="en">Secure versus Non-secure Memory distinction.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_BigEnd" name="BigEnd">
          <gui_name language="en">BigEnd</gui_name>
          <description language="en">Mixed-endian configuration support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_ASIDBits" name="ASIDBits">
          <gui_name language="en">ASIDBits</gui_name>
          <description language="en">Number of ASID bits.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64MMFR0_EL1_PARange" name="PARange">
          <gui_name language="en">PARange</gui_name>
          <description language="en">Physical Address range supported.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64mmfr1_el1.html" name="ID_AA64MMFR1_EL1" size="8">
        <gui_name language="en">AArch64 Memory Model Feature Register 1</gui_name>
        <description language="en">Reserved for future expansion of the information about the implemented memory model and memory management support in AArch64 state...</description>
        <bitField enumerationId="ID_AA64MMFR1_EL1_SpecSEI" name="SpecSEI">
          <gui_name language="en">SpecSEI</gui_name>
          <description language="en">Describes whether the PE can generate SError interrupt exceptions from speculative reads of memory, including speculative instruction fetches.</description>
          <definition>[27:24]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64pfr0_el1.html" name="ID_AA64PFR0_EL1" size="8">
        <gui_name language="en">AArch64 Processor Feature Register 0</gui_name>
        <description language="en">Provides additional information about implemented PE features in AArch64 state...</description>
        <bitField enumerationId="ID_AA64PFR0_EL1_RAS" name="RAS">
          <gui_name language="en">RAS</gui_name>
          <description language="en">RAS Extension version.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_GIC" name="GIC">
          <gui_name language="en">GIC</gui_name>
          <description language="en">System register GIC interface support.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_AdvSIMD" name="AdvSIMD">
          <gui_name language="en">AdvSIMD</gui_name>
          <description language="en">Advanced SIMD.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_FP" name="FP">
          <gui_name language="en">FP</gui_name>
          <description language="en">Floating-point.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_EL3" name="EL3">
          <gui_name language="en">EL3</gui_name>
          <description language="en">EL3 Exception level handling.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_EL2" name="EL2">
          <gui_name language="en">EL2</gui_name>
          <description language="en">EL2 Exception level handling.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_EL1" name="EL1">
          <gui_name language="en">EL1</gui_name>
          <description language="en">EL1 Exception level handling.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_AA64PFR0_EL1_EL0" name="EL0">
          <gui_name language="en">EL0</gui_name>
          <description language="en">EL0 Exception level handling.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_aa64pfr1_el1.html" name="ID_AA64PFR1_EL1" size="8">
        <gui_name language="en">AArch64 Processor Feature Register 1</gui_name>
        <description language="en">Reserved for future expansion of information about implemented PE features in AArch64 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_afr0_el1.html" name="ID_AFR0_EL1" size="4">
        <gui_name language="en">AArch32 Auxiliary Feature Register 0</gui_name>
        <description language="en">Provides information about the IMPLEMENTATION DEFINED features of the PE in AArch32 state...</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_dfr0_el1.html" name="ID_DFR0_EL1" size="4">
        <gui_name language="en">AArch32 Debug Feature Register 0</gui_name>
        <description language="en">Provides top level information about the debug system in AArch32 state...</description>
        <bitField enumerationId="ID_DFR0_EL1_PerfMon" name="PerfMon">
          <gui_name language="en">PerfMon</gui_name>
          <description language="en">Performance Monitors. Support for System registers-based ARM Performance Monitors Extension, using registers in the coproc == 1111 encoding space, for A and R profile processors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_EL1_MProfDbg" name="MProfDbg">
          <gui_name language="en">MProfDbg</gui_name>
          <description language="en">M Profile Debug. Support for memory-mapped debug model for M profile processors.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_EL1_MMapTrc" name="MMapTrc">
          <gui_name language="en">MMapTrc</gui_name>
          <description language="en">Memory Mapped Trace. Support for memory-mapped trace model.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_EL1_CopTrc" name="CopTrc">
          <gui_name language="en">CopTrc</gui_name>
          <description language="en">Support for System registers-based trace model, using registers in the coproc == 1110 encoding space.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField name="MMapDbg">
          <gui_name language="en">MMapDbg</gui_name>
          <description language="en">Memory Mapped Debug. Support for v7 memory-mapped debug model, for A and R profile processors.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField name="CopSDbg">
          <gui_name language="en">CopSDbg</gui_name>
          <description language="en">Support for  a System registers-based Secure debug model, using registers in the coproc = 1110 encoding space, for an A profile processor that includes EL3.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_DFR0_EL1_CopDbg" name="CopDbg">
          <gui_name language="en">CopDbg</gui_name>
          <description language="en">Support for System registers-based debug model, using registers in the coproc == 1110 encoding space, for A and R profile processors.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar0_el1.html" name="ID_ISAR0_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 0</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR0_EL1_Divide" name="Divide">
          <gui_name language="en">Divide</gui_name>
          <description language="en">Indicates the implemented Divide instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_Debug" name="Debug">
          <gui_name language="en">Debug</gui_name>
          <description language="en">Indicates the implemented Debug instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_Coproc" name="Coproc">
          <gui_name language="en">Coproc</gui_name>
          <description language="en">Indicates the implemented System register access instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_CmpBranch" name="CmpBranch">
          <gui_name language="en">CmpBranch</gui_name>
          <description language="en">Indicates the implemented combined Compare and Branch instructions in the T32 instruction set.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_BitField" name="BitField">
          <gui_name language="en">BitField</gui_name>
          <description language="en">Indicates the implemented BitField instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_BitCount" name="BitCount">
          <gui_name language="en">BitCount</gui_name>
          <description language="en">Indicates the implemented Bit Counting instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR0_EL1_Swap" name="Swap">
          <gui_name language="en">Swap</gui_name>
          <description language="en">Indicates the implemented Swap instructions in the A32 instruction set.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar1_el1.html" name="ID_ISAR1_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 1</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR1_EL1_Jazelle" name="Jazelle">
          <gui_name language="en">Jazelle</gui_name>
          <description language="en">Indicates the implemented Jazelle extension instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Interwork" name="Interwork">
          <gui_name language="en">Interwork</gui_name>
          <description language="en">Indicates the implemented Interworking instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Immediate" name="Immediate">
          <gui_name language="en">Immediate</gui_name>
          <description language="en">Indicates the implemented data-processing instructions with long immediates.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_IfThen" name="IfThen">
          <gui_name language="en">IfThen</gui_name>
          <description language="en">Indicates the implemented If-Then instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Extend" name="Extend">
          <gui_name language="en">Extend</gui_name>
          <description language="en">Indicates the implemented Extend instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Except_AR" name="Except_AR">
          <gui_name language="en">Except_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile exception-handling instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Except" name="Except">
          <gui_name language="en">Except</gui_name>
          <description language="en">Indicates the implemented exception-handling instructions in the ARM instruction set.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR1_EL1_Endian" name="Endian">
          <gui_name language="en">Endian</gui_name>
          <description language="en">Indicates the implemented Endian instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar2_el1.html" name="ID_ISAR2_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 2</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR2_EL1_Reversal" name="Reversal">
          <gui_name language="en">Reversal</gui_name>
          <description language="en">Indicates the implemented Reversal instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_PSR_AR" name="PSR_AR">
          <gui_name language="en">PSR_AR</gui_name>
          <description language="en">Indicates the implemented A and R profile instructions to manipulate the PSR.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_MultU" name="MultU">
          <gui_name language="en">MultU</gui_name>
          <description language="en">Indicates the implemented advanced unsigned Multiply instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_MultS" name="MultS">
          <gui_name language="en">MultS</gui_name>
          <description language="en">Indicates the implemented advanced signed Multiply instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_Mult" name="Mult">
          <gui_name language="en">Mult</gui_name>
          <description language="en">Indicates the implemented additional Multiply instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_MultiAccessInt" name="MultiAccessInt">
          <gui_name language="en">MultiAccessInt</gui_name>
          <description language="en">Indicates the support for interruptible multi-access instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_MemHint" name="MemHint">
          <gui_name language="en">MemHint</gui_name>
          <description language="en">Indicates the implemented Memory Hint instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR2_EL1_LoadStore" name="LoadStore">
          <gui_name language="en">LoadStore</gui_name>
          <description language="en">Indicates the implemented additional load/store instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar3_el1.html" name="ID_ISAR3_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 3</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR3_EL1_T32EE" name="T32EE">
          <gui_name language="en">T32EE</gui_name>
          <description language="en">Indicates the implemented T32EE instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_TrueNOP" name="TrueNOP">
          <gui_name language="en">TrueNOP</gui_name>
          <description language="en">Indicates the implemented true NOP instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_T32Copy" name="T32Copy">
          <gui_name language="en">T32Copy</gui_name>
          <description language="en">Indicates the support for T32 non flag-setting MOV instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_TabBranch" name="TabBranch">
          <gui_name language="en">TabBranch</gui_name>
          <description language="en">Indicates the implemented Table Branch instructions in the T32 instruction set.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_SynchPrim" name="SynchPrim">
          <gui_name language="en">SynchPrim</gui_name>
          <description language="en">Used in conjunction with ID_ISAR4.SynchPrim_frac to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_SVC" name="SVC">
          <gui_name language="en">SVC</gui_name>
          <description language="en">Indicates the implemented SVC instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_SIMD" name="SIMD">
          <gui_name language="en">SIMD</gui_name>
          <description language="en">Indicates the implemented SIMD instructions.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR3_EL1_Saturate" name="Saturate">
          <gui_name language="en">Saturate</gui_name>
          <description language="en">Indicates the implemented Saturate instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar4_el1.html" name="ID_ISAR4_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 4</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR4_EL1_SWP_frac" name="SWP_frac">
          <gui_name language="en">SWP_frac</gui_name>
          <description language="en">Indicates support for the memory system locking the bus for SWP or SWPB instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_PSR_M" name="PSR_M">
          <gui_name language="en">PSR_M</gui_name>
          <description language="en">Indicates the implemented M profile instructions to modify the PSRs.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_SynchPrim_frac" name="SynchPrim_frac">
          <gui_name language="en">SynchPrim_frac</gui_name>
          <description language="en">Used in conjunction with ID_ISAR3.SynchPrim to indicate the implemented Synchronization Primitive instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_Barrier" name="Barrier">
          <gui_name language="en">Barrier</gui_name>
          <description language="en">Indicates the implemented Barrier instructions in the A32 and T32 instruction sets.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_SMC" name="SMC">
          <gui_name language="en">SMC</gui_name>
          <description language="en">Indicates the implemented SMC instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_Writeback" name="Writeback">
          <gui_name language="en">Writeback</gui_name>
          <description language="en">Indicates the support for Writeback addressing modes.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_WithShifts" name="WithShifts">
          <gui_name language="en">WithShifts</gui_name>
          <description language="en">Indicates the support for instructions with shifts.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR4_EL1_Unpriv" name="Unpriv">
          <gui_name language="en">Unpriv</gui_name>
          <description language="en">Indicates the implemented unprivileged instructions.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_isar5_el1.html" name="ID_ISAR5_EL1" size="4">
        <gui_name language="en">AArch32 Instruction Set Attribute Register 5</gui_name>
        <description language="en">Provides information about the instruction sets implemented by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_ISAR5_EL1_CRC32" name="CRC32">
          <gui_name language="en">CRC32</gui_name>
          <description language="en">Indicates whether the CRC32 instructions are implemented in AArch32 state.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_EL1_SHA2" name="SHA2">
          <gui_name language="en">SHA2</gui_name>
          <description language="en">Indicates whether the SHA2 instructions are implemented in AArch32 state.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_EL1_SHA1" name="SHA1">
          <gui_name language="en">SHA1</gui_name>
          <description language="en">Indicates whether the SHA1 instructions are implemented in AArch32 state.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_EL1_AES" name="AES">
          <gui_name language="en">AES</gui_name>
          <description language="en">Indicates whether the AES instructions are implemented in AArch32 state.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_ISAR5_EL1_SEVL" name="SEVL">
          <gui_name language="en">SEVL</gui_name>
          <description language="en">Indicates whether the SEVL instruction is implemented in AArch32 state.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_mmfr0_el1.html" name="ID_MMFR0_EL1" size="4">
        <gui_name language="en">AArch32 Memory Model Feature Register 0</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR0_EL1_InnerShr" name="InnerShr">
          <gui_name language="en">InnerShr</gui_name>
          <description language="en">Innermost Shareability. Indicates the innermost shareability domain implemented.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_FCSE" name="FCSE">
          <gui_name language="en">FCSE</gui_name>
          <description language="en">Indicates whether the implementation includes the FCSE.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_AuxReg" name="AuxReg">
          <gui_name language="en">AuxReg</gui_name>
          <description language="en">Auxiliary Registers. Indicates support for Auxiliary registers.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_TCM" name="TCM">
          <gui_name language="en">TCM</gui_name>
          <description language="en">Indicates support for TCMs and associated DMAs.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_ShareLvl" name="ShareLvl">
          <gui_name language="en">ShareLvl</gui_name>
          <description language="en">Shareability Levels. Indicates the number of shareability levels implemented.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_OuterShr" name="OuterShr">
          <gui_name language="en">OuterShr</gui_name>
          <description language="en">Outermost Shareability. Indicates the outermost shareability domain implemented.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_PMSA" name="PMSA">
          <gui_name language="en">PMSA</gui_name>
          <description language="en">Indicates support for a PMSA.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR0_EL1_VMSA" name="VMSA">
          <gui_name language="en">VMSA</gui_name>
          <description language="en">Indicates support for a VMSA.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_mmfr1_el1.html" name="ID_MMFR1_EL1" size="4">
        <gui_name language="en">AArch32 Memory Model Feature Register 1</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR1_EL1_BPred" name="BPred">
          <gui_name language="en">BPred</gui_name>
          <description language="en">Branch Predictor. Indicates branch predictor management requirements.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1TstCln" name="L1TstCln">
          <gui_name language="en">L1TstCln</gui_name>
          <description language="en">Level 1 cache Test and Clean. Indicates the supported Level 1 data cache test and clean operations, for Harvard or unified cache implementations.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1Uni" name="L1Uni">
          <gui_name language="en">L1Uni</gui_name>
          <description language="en">Level 1 Unified cache. Indicates the supported entire Level 1 cache maintenance operations for a unified cache implementation.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1Hvd" name="L1Hvd">
          <gui_name language="en">L1Hvd</gui_name>
          <description language="en">Level 1 Harvard cache. Indicates the supported entire Level 1 cache maintenance operations for a Harvard cache implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1UniSW" name="L1UniSW">
          <gui_name language="en">L1UniSW</gui_name>
          <description language="en">Level 1 Unified cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a unified cache implementation.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1HvdSW" name="L1HvdSW">
          <gui_name language="en">L1HvdSW</gui_name>
          <description language="en">Level 1 Harvard cache by Set/Way. Indicates the supported Level 1 cache line maintenance operations by set/way, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1UniVA" name="L1UniVA">
          <gui_name language="en">L1UniVA</gui_name>
          <description language="en">Level 1 Unified cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a unified cache implementation.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR1_EL1_L1HvdVA" name="L1HvdVA">
          <gui_name language="en">L1HvdVA</gui_name>
          <description language="en">Level 1 Harvard cache by Virtual Address. Indicates the supported Level 1 cache line maintenance operations by VA, for a Harvard cache implementation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_mmfr2_el1.html" name="ID_MMFR2_EL1" size="4">
        <gui_name language="en">AArch32 Memory Model Feature Register 2</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR2_EL1_HWAccFlg" name="HWAccFlg">
          <gui_name language="en">HWAccFlg</gui_name>
          <description language="en">Hardware Access Flag. In earlier versions of the ARM Architecture, this field indicates support for a Hardware Access flag, as part of the VMSAv7 implementation.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_WFIStall" name="WFIStall">
          <gui_name language="en">WFIStall</gui_name>
          <description language="en">Wait For Interrupt Stall. Indicates the support for Wait For Interrupt (WFI) stalling.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_MemBarr" name="MemBarr">
          <gui_name language="en">MemBarr</gui_name>
          <description language="en">Memory Barrier.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_UniTLB" name="UniTLB">
          <gui_name language="en">UniTLB</gui_name>
          <description language="en">Unified TLB. Indicates the supported TLB maintenance operations, for a unified TLB implementation.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="HvdTLB">
          <gui_name language="en">HvdTLB</gui_name>
          <description language="en">If the Unified TLB field (UniTLB, bits [19:16]) is not 0000, then the meaning of this field is IMPLEMENTATION DEFINED. ARM deprecates the use of this field by software.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_L1HvdRng" name="L1HvdRng">
          <gui_name language="en">L1HvdRng</gui_name>
          <description language="en">Level 1 Harvard cache Range. Indicates the supported Level 1 cache maintenance range operations, for a Harvard cache implementation.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_L1HvdBG" name="L1HvdBG">
          <gui_name language="en">L1HvdBG</gui_name>
          <description language="en">Level 1 Harvard cache Background fetch. Indicates the supported Level 1 cache background fetch operations, for a Harvard cache implementation. When supported, background fetch operations are non-blocking operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR2_EL1_L1HvdFG" name="L1HvdFG">
          <gui_name language="en">L1HvdFG</gui_name>
          <description language="en">Level 1 Harvard cache Foreground fetch. Indicates the supported Level 1 cache foreground fetch operations, for a Harvard cache implementation. When supported, foreground fetch operations are blocking operations.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_mmfr3_el1.html" name="ID_MMFR3_EL1" size="4">
        <gui_name language="en">AArch32 Memory Model Feature Register 3</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR3_EL1_Supersec" name="Supersec">
          <gui_name language="en">Supersec</gui_name>
          <description language="en">Supersections. On a VMSA implementation, indicates whether Supersections are supported.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_CMemSz" name="CMemSz">
          <gui_name language="en">CMemSz</gui_name>
          <description language="en">Cached Memory Size. Indicates the physical memory size supported by the caches.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_CohWalk" name="CohWalk">
          <gui_name language="en">CohWalk</gui_name>
          <description language="en">Coherent Walk. Indicates whether Translation table updates require a clean to the point of unification.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_MaintBcst" name="MaintBcst">
          <gui_name language="en">MaintBcst</gui_name>
          <description language="en">Maintenance Broadcast. Indicates whether Cache, TLB, and branch predictor operations are broadcast.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_BPMaint" name="BPMaint">
          <gui_name language="en">BPMaint</gui_name>
          <description language="en">Branch Predictor Maintenance. Indicates the supported branch predictor maintenance operations in an implementation with hierarchical cache maintenance operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_CMaintSW" name="CMaintSW">
          <gui_name language="en">CMaintSW</gui_name>
          <description language="en">Cache Maintenance by Set/Way. Indicates the supported cache maintenance operations by set/way, in an implementation with hierarchical caches.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR3_EL1_CMaintVA" name="CMaintVA">
          <gui_name language="en">CMaintVA</gui_name>
          <description language="en">Cache Maintenance by  Virtual Address. Indicates the supported cache maintenance operations by VA, in an implementation with hierarchical caches.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_mmfr4_el1.html" name="ID_MMFR4_EL1" size="4">
        <gui_name language="en">AArch32 Memory Model Feature Register 4</gui_name>
        <description language="en">Provides information about the implemented memory model and memory management support in AArch32 state...</description>
        <bitField enumerationId="ID_MMFR4_EL1_AC2" name="AC2">
          <gui_name language="en">AC2</gui_name>
          <description language="en">Indicates the extension of the ACTLR and HACTLR registers using ACTLR2 and HACTLR2.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_MMFR4_EL1_SpecSEI" name="SpecSEI">
          <gui_name language="en">SpecSEI</gui_name>
          <description language="en">Describes whether the PE can generate SError interrupt exceptions from speculative reads of memory, including speculative instruction fetches.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_pfr0_el1.html" name="ID_PFR0_EL1" size="4">
        <gui_name language="en">AArch32 Processor Feature Register 0</gui_name>
        <description language="en">Gives top-level information about the instruction sets supported by the PE in AArch32 state...</description>
        <bitField enumerationId="ID_PFR0_EL1_RAS" name="RAS">
          <gui_name language="en">RAS</gui_name>
          <description language="en">RAS Extension version.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_EL1_State3" name="State3">
          <gui_name language="en">State3</gui_name>
          <description language="en">T32EE instruction set support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_EL1_State2" name="State2">
          <gui_name language="en">State2</gui_name>
          <description language="en">Jazelle extension support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_EL1_State1" name="State1">
          <gui_name language="en">State1</gui_name>
          <description language="en">T32 instruction set support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR0_EL1_State0" name="State0">
          <gui_name language="en">State0</gui_name>
          <description language="en">A32 instruction set support.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-id_pfr1_el1.html" name="ID_PFR1_EL1" size="4">
        <gui_name language="en">AArch32 Processor Feature Register 1</gui_name>
        <description language="en">Gives information about the AArch32 programmers' model...</description>
        <bitField enumerationId="ID_PFR1_EL1_GIC" name="GIC">
          <gui_name language="en">GIC</gui_name>
          <description language="en">System register GIC CPU interface.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_Virt_frac" name="Virt_frac">
          <gui_name language="en">Virt_frac</gui_name>
          <description language="en">Virtualization fractional field. When the Virtualization field is 0000, determines the support for features from the ARMv7 Virtualization Extensions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_Sec_frac" name="Sec_frac">
          <gui_name language="en">Sec_frac</gui_name>
          <description language="en">Security fractional field. When the Security field is 0000, determines the support for features from the ARMv7 Security Extensions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_GenTimer" name="GenTimer">
          <gui_name language="en">GenTimer</gui_name>
          <description language="en">Generic Timer support.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_Virtualization" name="Virtualization">
          <gui_name language="en">Virtualization</gui_name>
          <description language="en">Virtualization support.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_MProgMod" name="MProgMod">
          <gui_name language="en">MProgMod</gui_name>
          <description language="en">M profile programmers' model support.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_Security" name="Security">
          <gui_name language="en">Security</gui_name>
          <description language="en">Security support.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="ID_PFR1_EL1_ProgMod" name="ProgMod">
          <gui_name language="en">ProgMod</gui_name>
          <description language="en">Support for the standard programmers' model for ARMv4 and later. Model must support User, FIQ, IRQ, Supervisor, Abort, Undefined, and System modes.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-midr_el1.html" name="MIDR_EL1" size="4">
        <gui_name language="en">Main ID Register</gui_name>
        <description language="en">Provides identification information for the PE, including an implementer code for the device and a device ID number.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MIDR_EL1_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mpidr_el1.html" name="MPIDR_EL1" size="8">
        <gui_name language="en">Multiprocessor Affinity Register</gui_name>
        <description language="en">In a multiprocessor system, provides an additional PE identification mechanism for scheduling purposes.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">Affinity level 3. Highest level affinity field.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField enumerationId="MPIDR_EL1_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="MPIDR_EL1_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. Second highest level affinity field.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. Third highest level affinity field.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. Lowest level affinity field.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr0_el1.html" name="MVFR0_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 0</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR0_EL1_FPRound" name="FPRound">
          <gui_name language="en">FPRound</gui_name>
          <description language="en">Floating-Point Rounding modes. Indicates whether the floating-point implementation provides support for rounding modes.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPShVec" name="FPShVec">
          <gui_name language="en">FPShVec</gui_name>
          <description language="en">Short Vectors. Indicates whether the floating-point implementation provides support for the use of short vectors.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPSqrt" name="FPSqrt">
          <gui_name language="en">FPSqrt</gui_name>
          <description language="en">Square Root. Indicates whether the floating-point implementation provides support for the ARMv6 VFP square root operations.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPDivide" name="FPDivide">
          <gui_name language="en">FPDivide</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for VFP divide operations.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPTrap" name="FPTrap">
          <gui_name language="en">FPTrap</gui_name>
          <description language="en">Floating Point Exception Trapping. Indicates whether the floating-point implementation provides support for exception trapping.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPDP" name="FPDP">
          <gui_name language="en">FPDP</gui_name>
          <description language="en">Double Precision. Indicates whether the floating-point implementation provides support for double-precision operations.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_FPSP" name="FPSP">
          <gui_name language="en">FPSP</gui_name>
          <description language="en">Single Precision. Indicates whether the floating-point implementation provides support for single-precision operations.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR0_EL1_SIMDReg" name="SIMDReg">
          <gui_name language="en">SIMDReg</gui_name>
          <description language="en">Advanced SIMD registers. Indicates whether the Advanced SIMD and floating-point implementation provides support for the Advanced SIMD and floating-point register bank.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr1_el1.html" name="MVFR1_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 1</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR1_EL1_SIMDFMAC" name="SIMDFMAC">
          <gui_name language="en">SIMDFMAC</gui_name>
          <description language="en">Advanced SIMD Fused Multiply-Accumulate. Indicates whether the Advanced SIMD implementation provides fused multiply accumulate instructions.</description>
          <definition>[31:28]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPHP" name="FPHP">
          <gui_name language="en">FPHP</gui_name>
          <description language="en">Floating Point Half Precision. Indicates whether the floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[27:24]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDHP" name="SIMDHP">
          <gui_name language="en">SIMDHP</gui_name>
          <description language="en">Advanced SIMD Half Precision. Indicates whether the Advanced SIMD and floating-point implementation provides half-precision floating-point conversion instructions.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDSP" name="SIMDSP">
          <gui_name language="en">SIMDSP</gui_name>
          <description language="en">Advanced SIMD Single Precision. Indicates whether the Advanced SIMD and floating-point implementation provides single-precision floating-point instructions.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDInt" name="SIMDInt">
          <gui_name language="en">SIMDInt</gui_name>
          <description language="en">Advanced SIMD Integer. Indicates whether the Advanced SIMD and floating-point implementation provides integer instructions.</description>
          <definition>[15:12]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_SIMDLS" name="SIMDLS">
          <gui_name language="en">SIMDLS</gui_name>
          <description language="en">Advanced SIMD Load/Store. Indicates whether the Advanced SIMD and floating-point implementation provides load/store instructions.</description>
          <definition>[11:8]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPDNaN" name="FPDNaN">
          <gui_name language="en">FPDNaN</gui_name>
          <description language="en">Default NaN mode. Indicates whether the floating-point implementation provides support only for the Default NaN mode.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR1_EL1_FPFtZ" name="FPFtZ">
          <gui_name language="en">FPFtZ</gui_name>
          <description language="en">Flush to Zero mode. Indicates whether the floating-point implementation provides support only for the Flush-to-Zero mode of operation.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mvfr2_el1.html" name="MVFR2_EL1" size="4">
        <gui_name language="en">AArch32 Media and VFP Feature Register 2</gui_name>
        <description language="en">Describes the features provided by the AArch32 Advanced SIMD and Floating-point implementation...</description>
        <bitField enumerationId="MVFR2_EL1_FPMisc" name="FPMisc">
          <gui_name language="en">FPMisc</gui_name>
          <description language="en">Indicates whether the floating-point implementation provides support for miscellaneous VFP features.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="MVFR2_EL1_SIMDMisc" name="SIMDMisc">
          <gui_name language="en">SIMDMisc</gui_name>
          <description language="en">Indicates whether the Advanced SIMD implementation provides support for miscellaneous Advanced SIMD features.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-revidr_el1.html" name="REVIDR_EL1" size="4">
        <gui_name language="en">Revision ID Register</gui_name>
        <description language="en">Provides implementation-specific minor revision information.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vmpidr_el2.html" name="VMPIDR_EL2" size="8">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR_EL1.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">Affinity level 3. Highest level affinity field.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_EL2_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_EL2_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. Second highest level affinity field.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. Third highest level affinity field.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. Lowest level affinity field.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vpidr_el2.html" name="VPIDR_EL2" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR_EL1.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="VPIDR_EL2_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="IMP_DEF" xml:base="Registers/System/ARMv8.0/V8_AARCH64_IMP_DEF.xml">
      <gui_name language="en">IMP_DEF</gui_name>
      <description language="en">IMP_DEF</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el1.html" name="ACTLR_EL1" size="8">
        <gui_name language="en">Auxiliary Control Register (EL1)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el2.html" name="ACTLR_EL2" size="8">
        <gui_name language="en">Auxiliary Control Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el3.html" name="ACTLR_EL3" size="8">
        <gui_name language="en">Auxiliary Control Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el1.html" name="AFSR0_EL1" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL1)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el2.html" name="AFSR0_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el3.html" name="AFSR0_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el1.html" name="AFSR1_EL1" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL1)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el2.html" name="AFSR1_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el3.html" name="AFSR1_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-aidr_el1.html" name="AIDR_EL1" size="4">
        <gui_name language="en">Auxiliary ID Register</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED identification information...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el1.html" name="AMAIR_EL1" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL1)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el2.html" name="AMAIR_EL2" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el3.html" name="AMAIR_EL3" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hacr_el2.html" name="HACR_EL2" size="4">
        <gui_name language="en">Hypervisor Auxiliary Control Register</gui_name>
        <description language="en">Controls trapping to EL2 of IMPLEMENTATION DEFINED aspects of Non-secure EL1 or EL0 operation.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Memory" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Memory.xml">
      <gui_name language="en">Memory</gui_name>
      <description language="en">Memory</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el1.html" name="AMAIR_EL1" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL1)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL1.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el2.html" name="AMAIR_EL2" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el3.html" name="AMAIR_EL3" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-contextidr_el1.html" name="CONTEXTIDR_EL1" size="4">
        <gui_name language="en">Context ID Register (EL1)</gui_name>
        <description language="en">Identifies the current Process Identifier...</description>
        <bitField name="PROCID">
          <gui_name language="en">PROCID</gui_name>
          <description language="en">Process Identifier. This field must be programmed with a unique value that identifies the current process.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dacr32_el2.html" name="DACR32_EL2" size="4">
        <gui_name language="en">Domain Access Control Register</gui_name>
        <description language="en">Allows access to the AArch32 DACR register from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
        <bitField enumerationId="DACR32_EL2_D_n" name="D15">
          <gui_name language="en">D15</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D14">
          <gui_name language="en">D14</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D13">
          <gui_name language="en">D13</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D12">
          <gui_name language="en">D12</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D11">
          <gui_name language="en">D11</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D10">
          <gui_name language="en">D10</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D9">
          <gui_name language="en">D9</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[19:18]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D8">
          <gui_name language="en">D8</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[17:16]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D7">
          <gui_name language="en">D7</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D6">
          <gui_name language="en">D6</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D5">
          <gui_name language="en">D5</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D4">
          <gui_name language="en">D4</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D3">
          <gui_name language="en">D3</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D2">
          <gui_name language="en">D2</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[5:4]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D1">
          <gui_name language="en">D1</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[3:2]</definition>
        </bitField>
        <bitField enumerationId="DACR32_EL2_D_n" name="D0">
          <gui_name language="en">D0</gui_name>
          <description language="en">Domain n access permission, where n = 0 to 15.</description>
          <definition>[1:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mair_el1.html" name="MAIR_EL1" size="8">
        <gui_name language="en">Memory Attribute Indirection Register (EL1)</gui_name>
        <description language="en">Provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations at EL1.</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[63:56]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[47:40]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mair_el2.html" name="MAIR_EL2" size="8">
        <gui_name language="en">Memory Attribute Indirection Register (EL2)</gui_name>
        <description language="en">Provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations at EL2.</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[63:56]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[47:40]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mair_el3.html" name="MAIR_EL3" size="8">
        <gui_name language="en">Memory Attribute Indirection Register (EL3)</gui_name>
        <description language="en">Provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations at EL3.</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[63:56]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[47:40]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tcr_el1.html" name="TCR_EL1" size="8">
        <gui_name language="en">Translation Control Register (EL1)</gui_name>
        <description language="en">The control register for stage 1 of the EL1&amp;0 translation regime.</description>
        <bitField enumerationId="TCR_EL1_TBI1" name="TBI1">
          <gui_name language="en">TBI1</gui_name>
          <description language="en">Top Byte ignored - indicates whether the top byte of an address is used for address match for the TTBR1_EL1 region, or ignored and used for tagged addresses.</description>
          <definition>[38]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_TBI0" name="TBI0">
          <gui_name language="en">TBI0</gui_name>
          <description language="en">Top Byte ignored - indicates whether the top byte of an address is used for address match for the TTBR0_EL1 region, or ignored and used for tagged addresses.</description>
          <definition>[37]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_AS" name="AS">
          <gui_name language="en">AS</gui_name>
          <description language="en">ASID Size.</description>
          <definition>[36]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_IPS" name="IPS">
          <gui_name language="en">IPS</gui_name>
          <description language="en">Intermediate Physical Address Size.</description>
          <definition>[34:32]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_TG1" name="TG1">
          <gui_name language="en">TG1</gui_name>
          <description language="en">Granule size for the TTBR1_EL1.</description>
          <definition>[31:30]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_SH1" name="SH1">
          <gui_name language="en">SH1</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using TTBR1_EL1.</description>
          <definition>[29:28]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_ORGN1" name="ORGN1">
          <gui_name language="en">ORGN1</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using TTBR1_EL1.</description>
          <definition>[27:26]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_IRGN1" name="IRGN1">
          <gui_name language="en">IRGN1</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using TTBR1_EL1.</description>
          <definition>[25:24]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_EPD1" name="EPD1">
          <gui_name language="en">EPD1</gui_name>
          <description language="en">Translation table walk disable for translations using TTBR1_EL1. This bit controls whether a translation table walk is performed on a TLB miss, for an address that is translated using TTBR1_EL1.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_A1" name="A1">
          <gui_name language="en">A1</gui_name>
          <description language="en">Selects whether TTBR0_EL1 or TTBR1_EL1 defines the ASID.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField name="T1SZ">
          <gui_name language="en">T1SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by TTBR1_EL1. The region size is 2^(64-T1SZ) bytes.</description>
          <definition>[21:16]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the TTBR0_EL1.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using TTBR0_EL1.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using TTBR0_EL1.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using TTBR0_EL1.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL1_EPD0" name="EPD0">
          <gui_name language="en">EPD0</gui_name>
          <description language="en">Translation table walk disable for translations using TTBR0_EL1. This bit controls whether a translation table walk is performed on a TLB miss, for an address that is translated using TTBR0_EL1.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by TTBR0_EL1. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tcr_el2.html" name="TCR_EL2" size="4">
        <gui_name language="en">Translation Control Register (EL2)</gui_name>
        <description language="en">The control register for stage 1 of the EL2 translation regime.</description>
        <bitField name="TBI">
          <gui_name language="en">TBI</gui_name>
          <description language="en">Additionally, this affects changes to the program counter, when TBI is 1, caused by:</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_PS" name="PS">
          <gui_name language="en">PS</gui_name>
          <description language="en">Physical Address Size.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the TTBR0_EL2.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by TTBR0_EL2. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tcr_el3.html" name="TCR_EL3" size="4">
        <gui_name language="en">Translation Control Register (EL3)</gui_name>
        <description language="en">The control register for stage 1 of the EL3 translation regime.</description>
        <bitField enumerationId="TCR_EL3_TBI" name="TBI">
          <gui_name language="en">TBI</gui_name>
          <description language="en">Top Byte ignored - indicates whether the top byte of an address is used for address match for the TTBR0_EL3 region, or ignored and used for tagged addresses.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL3_PS" name="PS">
          <gui_name language="en">PS</gui_name>
          <description language="en">Physical Address Size.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL3_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the TTBR0_EL3.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL3_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using TTBR0_EL3.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL3_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using TTBR0_EL3.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL3_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using TTBR0_EL3.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by TTBR0_EL3. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ttbr0_el1.html" name="TTBR0_EL1" size="8">
        <gui_name language="en">Translation Table Base Register 0 (EL1)</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the lower VA range in the EL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TCR_EL1.A1 field selects either TTBR0_EL1.ASID or TTBR1_EL1.ASID.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ttbr0_el2.html" name="TTBR0_EL2" size="8">
        <gui_name language="en">Translation Table Base Register 0 (EL2)</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of an address translation in the EL2 translation regime, and other information for this translation regime.</description>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ttbr0_el3.html" name="TTBR0_EL3" size="8">
        <gui_name language="en">Translation Table Base Register 0 (EL3)</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of an address translation in the EL3 translation regime, and other information for this translation regime.</description>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ttbr1_el1.html" name="TTBR1_EL1" size="8">
        <gui_name language="en">Translation Table Base Register 1 (EL1)</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of the translation of an address from the higher VA range in the EL1&amp;0 stage 1 translation regime, and other information for this translation regime.</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">An ASID for the translation table base address. The TCR_EL1.A1 field selects either TTBR0_EL1.ASID or TTBR1_EL1.ASID.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vtcr_el2.html" name="VTCR_EL2" size="4">
        <gui_name language="en">Virtualization Translation Control Register</gui_name>
        <description language="en">The control register for stage 2 of the EL1&amp;0 translation regime.</description>
        <bitField enumerationId="VTCR_EL2_PS" name="PS">
          <gui_name language="en">PS</gui_name>
          <description language="en">Physical Address Size.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the VTTBR_EL2.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_SL0" name="SL0">
          <gui_name language="en">SL0</gui_name>
          <description language="en">Starting level of the VTCR_EL2 addressed region. The meaning of this field depends on the value of VTCR_EL2.TG0 (the granule size).</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by VTTBR_EL2. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vttbr_el2.html" name="VTTBR_EL2" size="8">
        <gui_name language="en">Virtualization Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the Non-secure EL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">The VMID for the translation table.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Other" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Other.xml">
      <gui_name language="en">Other</gui_name>
      <description language="en">Other</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el1.html" name="ACTLR_EL1" size="8">
        <gui_name language="en">Auxiliary Control Register (EL1)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for execution at EL1 and EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el2.html" name="ACTLR_EL2" size="8">
        <gui_name language="en">Auxiliary Control Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el3.html" name="ACTLR_EL3" size="8">
        <gui_name language="en">Auxiliary Control Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cpacr_el1.html" name="CPACR_EL1" size="4">
        <gui_name language="en">Architectural Feature Access Control Register</gui_name>
        <description language="en">Controls access to trace, and to Advanced SIMD and floating-point functionality.</description>
        <bitField enumerationId="CPACR_EL1_TTA" name="TTA">
          <gui_name language="en">TTA</gui_name>
          <description language="en">Traps EL0 and EL1 System register accesses to all implemented trace registers to EL1, from both Execution states.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="CPACR_EL1_FPEN" name="FPEN">
          <gui_name language="en">FPEN</gui_name>
          <description language="en">Traps EL0 and EL1 accesses to the SIMD and floating-point registers to EL1, from both Execution states.</description>
          <definition>[21:20]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sctlr_el1.html" name="SCTLR_EL1" size="4">
        <gui_name language="en">System Control Register (EL1)</gui_name>
        <description language="en">Provides top level control of the system, including its memory system, at EL1 and EL0.</description>
        <bitField enumerationId="SCTLR_EL1_UCI" name="UCI">
          <gui_name language="en">UCI</gui_name>
          <description language="en">Traps EL0 execution of cache maintenance instructions to EL1, from AArch64 state only.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">Endianness of data accesses at EL1, and stage 1 translation table walks in the EL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_E0E" name="E0E">
          <gui_name language="en">E0E</gui_name>
          <description language="en">Endianness of data accesses at EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL1&amp;0 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_nTWE" name="nTWE">
          <gui_name language="en">nTWE</gui_name>
          <description language="en">Traps EL0 execution of WFE instructions to EL1, from both Execution states.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_nTWI" name="nTWI">
          <gui_name language="en">nTWI</gui_name>
          <description language="en">Traps EL0 execution of WFI instructions to EL1, from both Execution states.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_UCT" name="UCT">
          <gui_name language="en">UCT</gui_name>
          <description language="en">Traps EL0 accesses to the CTR_EL0 to EL1, from AArch64 state only.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Traps EL0 execution of DC ZVA instructions to EL1, from AArch64 state only.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL0 and EL1:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_UMA" name="UMA">
          <gui_name language="en">UMA</gui_name>
          <description language="en">User Mask Access. Traps EL0 execution of MSR and MRS instructions that access the PSTATE.{D, A, I, F} masks to EL1, from AArch64 state only.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_SED" name="SED">
          <gui_name language="en">SED</gui_name>
          <description language="en">SETEND instruction disable. Disables SETEND instructions at EL0 using AArch32.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_ITD" name="ITD">
          <gui_name language="en">ITD</gui_name>
          <description language="en">IT Disable. Disables some uses of IT instructions at EL0 using AArch32.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_CP15BEN" name="CP15BEN">
          <gui_name language="en">CP15BEN</gui_name>
          <description language="en">System instruction memory barrier enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="SA0">
          <gui_name language="en">SA0</gui_name>
          <description language="en">SP Alignment check enable for EL0. When set to 1, if a load or store instruction executed at EL0 uses the SP as the base address and the SP is not aligned to a 16-byte boundary, then a SP alignment fault exception is generated. For more information, see .</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="SA">
          <gui_name language="en">SA</gui_name>
          <description language="en">SP Alignment check enable. When set to 1, if a load or store instruction executed at EL1 uses the SP as the base address and the SP is not aligned to a 16-byte boundary, then a SP alignment fault exception is generated. For more information, see .</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL1_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL1 and EL0 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sctlr_el2.html" name="SCTLR_EL2" size="4">
        <gui_name language="en">System Control Register (EL2)</gui_name>
        <description language="en">Provides top level control of the system, including its memory system, at EL2.</description>
        <bitField enumerationId="SCTLR_EL2_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">Endianness of data accesses at EL2, stage 1 translation table walks in the EL2 translation regime, and stage 2 translation table walks in the EL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField name="SA">
          <gui_name language="en">SA</gui_name>
          <description language="en">SP Alignment check enable. When set to 1, if a load or store instruction executed at EL2 uses the SP as the base address and the SP is not aligned to a 16-byte boundary, then a SP alignment fault exception is generated. For more information, see .</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL2 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sctlr_el3.html" name="SCTLR_EL3" size="4">
        <gui_name language="en">System Control Register (EL3)</gui_name>
        <description language="en">Provides top level control of the system, including its memory system, at EL3.</description>
        <bitField enumerationId="SCTLR_EL3_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">Endianness of data accesses at EL3, and stage 1 translation table walks in the EL3 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL3_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL3 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL3_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL3:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField name="SA">
          <gui_name language="en">SA</gui_name>
          <description language="en">SP Alignment check enable. When set to 1, if a load or store instruction executed at EL3 uses the SP as the base address and the SP is not aligned to a 16-byte boundary, then a SP alignment fault exception is generated. For more information, see .</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL3_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL3_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL3_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL3 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="PMU" xml:base="Registers/System/ARMv8.0/V8_AARCH64_PMU.xml">
      <gui_name language="en">PMU</gui_name>
      <description language="en">PMU</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmccfiltr_el0.html" name="PMCCFILTR_EL0" size="4">
        <gui_name language="en">Performance Monitors Cycle Count Filter Register</gui_name>
        <description language="en">Determines the modes in which the Cycle Counter, PMCCNTR_EL0, increments.</description>
        <bitField enumerationId="PMCCFILTR_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCCFILTR_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCCFILTR_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmccntr_el0.html" name="PMCCNTR_EL0" size="8">
        <gui_name language="en">Performance Monitors Cycle Count Register</gui_name>
        <description language="en">Holds the value of the processor Cycle Counter, CCNT, that counts processor clock cycles. See  for more information...</description>
        <bitField name="CCNT">
          <gui_name language="en">CCNT</gui_name>
          <description language="en">Cycle count. Depending on the values of PMCR_EL0.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmceid0_el0.html" name="PMCEID0_EL0" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 0</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x000 to 0x01F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField enumerationId="PMCEID0_EL0_ID_31_0" name="ID_31_0">
          <gui_name language="en">ID_31_0</gui_name>
          <description language="en">PMCEID0_EL0[n] maps to event n. For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmceid1_el0.html" name="PMCEID1_EL0" size="4">
        <gui_name language="en">Performance Monitors Common Event Identification register 1</gui_name>
        <description language="en">Defines which common architectural and common microarchitectural feature events in the range 0x020 to 0x03F are implemented. If a particular bit is set to 1, then the event for that bit is implemented.</description>
        <bitField enumerationId="PMCEID1_EL0_ID_63_32" name="ID_63_32">
          <gui_name language="en">ID_63_32</gui_name>
          <description language="en">PMCEID1_EL0[n] maps to event (n + 32). For a list of event numbers and descriptions, see .</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmcntenclr_el0.html" name="PMCNTENCLR_EL0" size="4">
        <gui_name language="en">Performance Monitors Count Enable Clear register</gui_name>
        <description language="en">Disables the Cycle Count Register, PMCCNTR_EL0, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled.</description>
        <bitField enumerationId="PMCNTENCLR_EL0_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 disable bit. Disables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENCLR_EL0_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmcntenset_el0.html" name="PMCNTENSET_EL0" size="4">
        <gui_name language="en">Performance Monitors Count Enable Set register</gui_name>
        <description language="en">Enables the Cycle Count Register, PMCCNTR_EL0, and any implemented event counters PMEVCNTR&lt;n&gt;. Reading this register shows which counters are enabled.</description>
        <bitField enumerationId="PMCNTENSET_EL0_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 enable bit. Enables the cycle counter register.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCNTENSET_EL0_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmcr_el0.html" name="PMCR_EL0" size="4">
        <gui_name language="en">Performance Monitors Control Register</gui_name>
        <description language="en">Provides details of the Performance Monitors implementation, including the number of counters implemented, and configures and controls the counters.</description>
        <bitField name="IMP">
          <gui_name language="en">IMP</gui_name>
          <description language="en">Implementer code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="IDCODE">
          <gui_name language="en">IDCODE</gui_name>
          <description language="en">Identification code. This field is RO with an IMPLEMENTATION DEFINED value.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Number of event counters. A RO field that indicates the number counters implemented. A value of 0b00000 in this field indicates that only the Cycle Count Register PMCCNTR_EL0 is implemented.</description>
          <definition>[15:11]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_LC" name="LC">
          <gui_name language="en">LC</gui_name>
          <description language="en">Long cycle counter enable. Determines which PMCCNTR_EL0 bit generates an overflow recorded by PMOVSR[31].</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_DP" name="DP">
          <gui_name language="en">DP</gui_name>
          <description language="en">Disable cycle counter when event counting is prohibited.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_X" name="X">
          <gui_name language="en">X</gui_name>
          <description language="en">Enable export of events in an IMPLEMENTATION DEFINED event stream.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_D" name="D">
          <gui_name language="en">D</gui_name>
          <description language="en">Clock divider.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cycle counter reset. This bit is WO.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Event counter reset. This bit is WO.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMCR_EL0_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR0_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR1_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR2_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR3_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR4_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR5_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR6_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR7_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR8_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR9_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR10_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR11_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR12_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR13_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR14_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR15_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR16_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR17_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR18_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR19_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR20_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR21_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR22_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR23_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR24_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR25_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR26_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR27_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR28_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR29_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevcntrn_el0.html" name="PMEVCNTR30_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Count Registers</gui_name>
        <description language="en">Holds event counter n, which counts events, where n is 0 to 30.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER0_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER1_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER2_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER3_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER4_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER5_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER6_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER7_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER8_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER9_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER10_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER11_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER12_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER13_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER14_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER15_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER16_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER17_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER18_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER19_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER20_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER21_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER22_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER23_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER24_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER25_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER26_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER27_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER28_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER29_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmevtypern_el0.html" name="PMEVTYPER30_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Type Registers</gui_name>
        <description language="en">Configures event counter n, where n is 0 to 30.</description>
        <bitField enumerationId="PMEVTYPER_n_EL0_P" name="P">
          <gui_name language="en">P</gui_name>
          <description language="en">Privileged filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">User filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="NSK">
          <gui_name language="en">NSK</gui_name>
          <description language="en">Non-secure EL1 (kernel) modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="NSU">
          <gui_name language="en">NSU</gui_name>
          <description language="en">Non-secure EL0 (Unprivileged) filtering. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_NSH" name="NSH">
          <gui_name language="en">NSH</gui_name>
          <description language="en">Non-secure EL2 (Hypervisor) filtering. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Secure EL3 filtering bit. If EL3 is not implemented, this bit is RES0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMEVTYPER_n_EL0_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Multithreading.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField name="evtCount">
          <gui_name language="en">evtCount</gui_name>
          <description language="en">Event to count. The event number of the event that is counted by event counter PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmintenclr_el1.html" name="PMINTENCLR_EL1" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Clear register</gui_name>
        <description language="en">Disables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR_EL0, and the event counters PMEVCNTR&lt;n&gt;_EL0. Reading the register shows which overflow interrupt requests are enabled.</description>
        <bitField enumerationId="PMINTENCLR_EL1_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 overflow interrupt request disable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMINTENCLR_EL1_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request disable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmintenset_el1.html" name="PMINTENSET_EL1" size="4">
        <gui_name language="en">Performance Monitors Interrupt Enable Set register</gui_name>
        <description language="en">Enables the generation of interrupt requests on overflows from the Cycle Count Register, PMCCNTR_EL0, and the event counters PMEVCNTR&lt;n&gt;_EL0. Reading the register shows which overflow interrupt requests are enabled.</description>
        <bitField enumerationId="PMINTENSET_EL1_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 overflow interrupt request enable bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMINTENSET_EL1_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow interrupt request enable bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmovsclr_el0.html" name="PMOVSCLR_EL0" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Clear Register</gui_name>
        <description language="en">Contains the state of the overflow bit for the Cycle Count Register, PMCCNTR_EL0, and each of the implemented event counters PMEVCNTR&lt;n&gt;. Writing to this register clears these bits.</description>
        <bitField enumerationId="PMOVSCLR_EL0_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMOVSCLR_EL0_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow clear bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmovsset_el0.html" name="PMOVSSET_EL0" size="4">
        <gui_name language="en">Performance Monitors Overflow Flag Status Set register</gui_name>
        <description language="en">Sets the state of the overflow bit for the Cycle Count Register, PMCCNTR_EL0, and each of the implemented event counters PMEVCNTR&lt;n&gt;.</description>
        <bitField enumerationId="PMOVSSET_EL0_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">PMCCNTR_EL0 overflow bit.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMOVSSET_EL0_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter overflow set bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmselr_el0.html" name="PMSELR_EL0" size="4">
        <gui_name language="en">Performance Monitors Event Counter Selection Register</gui_name>
        <description language="en">Selects the current event counter PMEVCNTR&lt;n&gt; or the cycle counter, CCNT...</description>
        <bitField name="SEL">
          <gui_name language="en">SEL</gui_name>
          <description language="en">Selects event counter, PMEVCNTR&lt;n&gt;, where n is the value held in this field. This value identifies which event counter is accessed when a subsequent access to PMXEVTYPER_EL0 or PMXEVCNTR_EL0 occurs.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmswinc_el0.html" name="PMSWINC_EL0" size="4">
        <gui_name language="en">Performance Monitors Software Increment register</gui_name>
        <description language="en">Increments a counter that is configured to count the Software increment event, event 0x00. For more information, see  .</description>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMSWINC_EL0_P_n" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Event counter software increment bit for PMEVCNTR&lt;n&gt;_EL0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmuserenr_el0.html" name="PMUSERENR_EL0" size="4">
        <gui_name language="en">Performance Monitors User Enable Register</gui_name>
        <description language="en">Enables or disables EL0 access to the Performance Monitors.</description>
        <bitField enumerationId="PMUSERENR_EL0_ER" name="ER">
          <gui_name language="en">ER</gui_name>
          <description language="en">Event counter read trap control:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_EL0_CR" name="CR">
          <gui_name language="en">CR</gui_name>
          <description language="en">Cycle counter read trap control:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_EL0_SW" name="SW">
          <gui_name language="en">SW</gui_name>
          <description language="en">Software Increment write trap control:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="PMUSERENR_EL0_EN" name="EN">
          <gui_name language="en">EN</gui_name>
          <description language="en">Traps EL0 accesses to the Performance Monitors registers to EL1, from both Execution states:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmxevcntr_el0.html" name="PMXEVCNTR_EL0" size="4">
        <gui_name language="en">Performance Monitors Selected Event Count Register</gui_name>
        <description language="en">Reads or writes the value of the selected event counter, PMEVCNTR&lt;n&gt;_EL0. PMSELR_EL0.SEL determines which event counter is selected.</description>
        <bitField name="PMEVCNTR_n">
          <gui_name language="en">PMEVCNTR_n</gui_name>
          <description language="en">Value of the selected event counter, PMEVCNTR&lt;n&gt;_EL0, where n is the value stored in PMSELR_EL0.SEL.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-pmxevtyper_el0.html" name="PMXEVTYPER_EL0" size="4">
        <gui_name language="en">Performance Monitors Selected Event Type Register</gui_name>
        <description language="en">When PMSELR_EL0.SEL selects an event counter, this accesses a PMEVTYPER&lt;n&gt;_EL0 register. When PMSELR_EL0.SEL selects the cycle counter, this accesses PMCCFILTR_EL0.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="PSTATE" display_by_default="true" xml:base="Registers/System/ARMv8.0/V8_AARCH64_PSTATE.xml">
      <gui_name language="en">PSTATE</gui_name>
      <description language="en">PSTATE</description>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-currentel.html" name="CurrentEL" size="4">
        <gui_name language="en">CurrentEL</gui_name>
        <description language="en">Holds the current Exception level.</description>
        <bitField enumerationId="CurrentEL_EL" name="EL">
          <gui_name language="en">EL</gui_name>
          <description language="en">Current Exception level.</description>
          <definition>[3:2]</definition>
        </bitField>
        <device_register high_bit="3" low_bit="2" name="CPSR" shift="2"/>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-daif.html" name="DAIF" size="4">
        <gui_name language="en">DAIF</gui_name>
        <description language="en">Allows access to the interrupt mask bits.</description>
        <bitField enumerationId="DAIF_D" name="D">
          <gui_name language="en">D</gui_name>
          <description language="en">Process state D mask.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="DAIF_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError (System Error) mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="DAIF_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="DAIF_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <device_register high_bit="9" low_bit="6" name="CPSR" shift="6"/>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-nzcv.html" name="NZCV" size="4">
        <gui_name language="en">NZCV</gui_name>
        <description language="en">Allows access to the condition flags.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag. Set to bit[31] of the result of the last flag-setting instruction. If the result is regarded as a two's complement signed integer, then N is set to 1 if the result was negative, and N is set to 0 if the result was positive or zero.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag. Set to 1 if the result of the last flag-setting instruction was zero, and to 0 otherwise. A result of zero often indicates an equal result from a comparison.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag. Set to 1 if the last flag-setting instruction resulted in a carry condition, for example an unsigned overflow on an addition.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag. Set to 1 if the last flag-setting instruction resulted in an overflow condition, for example a signed overflow on an addition.</description>
          <definition>[28]</definition>
        </bitField>
        <device_register high_bit="31" low_bit="28" name="CPSR" shift="28"/>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsel.html" name="SPSel" size="4">
        <gui_name language="en">SPSel</gui_name>
        <description language="en">Allows the Stack Pointer to be selected between SP_EL0 and SP_ELx.</description>
        <bitField enumerationId="SPSel_SP" name="SP">
          <gui_name language="en">SP</gui_name>
          <description language="en">Stack pointer to use.</description>
          <definition>[0]</definition>
        </bitField>
        <device_register high_bit="0" low_bit="0" name="CPSR" shift="0"/>
      </register>
      <register access="RW" name="Mode" size="4">
        <gui_name language="en">Mode</gui_name>
        <description language="en">Use this to change the core mode. Please ensure that SCR_EL3, HCR_EL2 are consistent with the new mode.</description>
        <bitField enumerationId="V8_MODES" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">Current core mode.</description>
          <definition>[4:0]</definition>
        </bitField>
        <device_register high_bit="4" low_bit="0" name="CPSR" shift="0"/>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Reset" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Reset.xml">
      <gui_name language="en">Reset</gui_name>
      <description language="en">Reset</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rmr_el1.html" name="RMR_EL1" size="4">
        <gui_name language="en">Reset Management Register (EL1)</gui_name>
        <description language="en">If EL1 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="RMR_EL1_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL1 can use AArch32, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rmr_el2.html" name="RMR_EL2" size="4">
        <gui_name language="en">Reset Management Register (EL2)</gui_name>
        <description language="en">If EL2 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="RMR_EL2_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch32, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rmr_el3.html" name="RMR_EL3" size="4">
        <gui_name language="en">Reset Management Register (EL3)</gui_name>
        <description language="en">If EL3 is the implemented and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="RMR_EL3_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL3 can use AArch32, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rvbar_el1.html" name="RVBAR_EL1" size="8">
        <gui_name language="en">Reset Vector Base Address Register (if EL2 and EL3 not implemented)</gui_name>
        <description language="en">If EL1 is the highest Exception level implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch64 state.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rvbar_el2.html" name="RVBAR_EL2" size="8">
        <gui_name language="en">Reset Vector Base Address Register (if EL3 not implemented)</gui_name>
        <description language="en">If EL2 is the highest Exception level implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch64 state.</description>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rvbar_el3.html" name="RVBAR_EL3" size="8">
        <gui_name language="en">Reset Vector Base Address Register (if EL3 implemented)</gui_name>
        <description language="en">If EL3 is the highest Exception level implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch64 state.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Secure" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Secure.xml">
      <gui_name language="en">Secure</gui_name>
      <description language="en">Secure</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el3.html" name="ACTLR_EL3" size="8">
        <gui_name language="en">Auxiliary Control Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el3.html" name="AFSR0_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el3.html" name="AFSR1_EL3" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL3)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el3.html" name="AMAIR_EL3" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL3)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL3.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cptr_el3.html" name="CPTR_EL3" size="4">
        <gui_name language="en">Architectural Feature Trap Register (EL3)</gui_name>
        <description language="en">Controls trapping to EL3 of access to CPACR_EL1, CPTR_EL2, trace functionality and registers associated with Advanced SIMD and floating-point execution. Also controls EL3 access to trace functionality and registers associated with Advanced SIMD and floating-point execution.</description>
        <bitField enumerationId="CPTR_EL3_TCPAC" name="TCPAC">
          <gui_name language="en">TCPAC</gui_name>
          <description language="en">Traps all of the following to EL3, from both Security states and both Execution states.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="CPTR_EL3_TTA" name="TTA">
          <gui_name language="en">TTA</gui_name>
          <description language="en">Traps System register accesses to the trace registers, from all Exception levels, both Security states, and both Execution states, to EL3.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="CPTR_EL3_TFP" name="TFP">
          <gui_name language="en">TFP</gui_name>
          <description language="en">Traps all accesses to Advanced SIMD and floating-point functionality, from all Exception levels, both Security states, and both Execution states, to EL3.</description>
          <definition>[10]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_ctlr_el3.html" name="ICC_CTLR_EL3" size="4">
        <gui_name language="en">Interrupt Controller Control Register (EL3)</gui_name>
        <description language="en">Controls aspects of the behavior of the GIC CPU interface and provides information about the features implemented.</description>
        <bitField enumerationId="ICC_CTLR_EL3_nDS" name="nDS">
          <gui_name language="en">nDS</gui_name>
          <description language="en">Disable Security not supported. Read-only and writes are ignored.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid. Read-only and writes are ignored.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support. Read-only and writes are ignored.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">Identifier bits. Read-only and writes are ignored.</description>
          <definition>[13:11]</definition>
        </bitField>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. Read-only and writes are ignored. The number of priority bits implemented, minus one.</description>
          <definition>[10:8]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_PMHE" name="PMHE">
          <gui_name language="en">PMHE</gui_name>
          <description language="en">Priority Mask Hint Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_RM" name="RM">
          <gui_name language="en">RM</gui_name>
          <description language="en">Routing Modifier. For legacy operation of EL1 software with GICC_CTLR.FIQen set to 1, this bit indicates whether interrupts can be acknowledged or observed as the Highest Priority Pending Interrupt, or whether a special INTID value is returned.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL1NS" name="EOImode_EL1NS">
          <gui_name language="en">EOImode_EL1NS</gui_name>
          <description language="en">EOI mode for interrupts handled at Non-secure EL1 and EL2.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL1S" name="EOImode_EL1S">
          <gui_name language="en">EOImode_EL1S</gui_name>
          <description language="en">EOI mode for interrupts handled at Secure EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_EOImode_EL3" name="EOImode_EL3">
          <gui_name language="en">EOImode_EL3</gui_name>
          <description language="en">EOI mode for interrupts handled at EL3.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_CBPR_EL1NS" name="CBPR_EL1NS">
          <gui_name language="en">CBPR_EL1NS</gui_name>
          <description language="en">Common Binary Point Register, EL1 Non-secure.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_CTLR_EL3_CBPR_EL1S" name="CBPR_EL1S">
          <gui_name language="en">CBPR_EL1S</gui_name>
          <description language="en">Common Binary Point Register, EL1 Secure.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el3.html" name="ICC_SRE_EL3" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL3)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL3.</description>
        <bitField enumerationId="ICC_SRE_EL3_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE_EL1 and ICC_SRE_EL2.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL3_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el3.html" name="MDCR_EL3" size="4">
        <gui_name language="en">Monitor Debug Configuration Register (EL3)</gui_name>
        <description language="en">Provides EL3 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
        <bitField enumerationId="MDCR_EL3_EPMAD" name="EPMAD">
          <gui_name language="en">EPMAD</gui_name>
          <description language="en">External debug interface Performance Monitors registers disable.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_EDAD" name="EDAD">
          <gui_name language="en">EDAD</gui_name>
          <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SPME" name="SPME">
          <gui_name language="en">SPME</gui_name>
          <description language="en">Secure Performance Monitors enable.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SDD" name="SDD">
          <gui_name language="en">SDD</gui_name>
          <description language="en">AArch64 Secure self-hosted invasive debug disable. Disables Software debug exceptions in Secure state, other than Breakpoint Instruction exceptions.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_SPD32" name="SPD32">
          <gui_name language="en">SPD32</gui_name>
          <description language="en">AArch32 Secure self-hosted privileged invasive debug control. Enables or disables debug exceptions from Secure EL1 using AArch32, other than Breakpoint Instruction exceptions.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap Debug Access. Traps EL2, EL1, and EL0 System register accesses to those debug System registers that cannot be trapped using the MDCR_EL3.TDOSA field. When MDCR_EL3.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL3_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses. Traps EL2, EL1, and EL0 accesses to all Performance Monitors registers to EL3, from both Security states and both Execution states.</description>
          <definition>[6]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-scr_el3.html" name="SCR_EL3" size="4">
        <gui_name language="en">Secure Configuration Register</gui_name>
        <description language="en">Defines the configuration of the current Security state. It specifies...</description>
        <bitField enumerationId="SCR_EL3_TERR" name="TERR">
          <gui_name language="en">TERR</gui_name>
          <description language="en">Trap Error record accesses.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_TWE" name="TWE">
          <gui_name language="en">TWE</gui_name>
          <description language="en">Traps EL2, EL1, and EL0 execution of WFE instructions to EL3, from both Security states and both Execution states.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_TWI" name="TWI">
          <gui_name language="en">TWI</gui_name>
          <description language="en">Traps EL2, EL1, and EL0 execution of WFI instructions to EL3, from both Security states and both Execution states.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_ST" name="ST">
          <gui_name language="en">ST</gui_name>
          <description language="en">Traps Secure EL1 accesses to the Counter-timer Physical Secure timer registers to EL3, from AArch64 state only.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_RW" name="RW">
          <gui_name language="en">RW</gui_name>
          <description language="en">Execution state control for lower Exception levels.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_SIF" name="SIF">
          <gui_name language="en">SIF</gui_name>
          <description language="en">Secure instruction fetch. When the PE is in Secure state, this bit disables instruction fetch from Non-secure memory.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_HCE" name="HCE">
          <gui_name language="en">HCE</gui_name>
          <description language="en">Hypervisor Call instruction enable. Enables HVC instructions at EL3, EL2, and Non-secure EL1, in both Execution states.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_SMD" name="SMD">
          <gui_name language="en">SMD</gui_name>
          <description language="en">Secure Monitor Call disable. Disables SMC instructions at EL1 and above, from both Security states and both Execution states.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_EA" name="EA">
          <gui_name language="en">EA</gui_name>
          <description language="en">External Abort and SError Interrupt Routing.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_FIQ" name="FIQ">
          <gui_name language="en">FIQ</gui_name>
          <description language="en">Physical FIQ Routing.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_IRQ" name="IRQ">
          <gui_name language="en">IRQ</gui_name>
          <description language="en">Physical IRQ Routing.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCR_EL3_NS" name="NS">
          <gui_name language="en">NS</gui_name>
          <description language="en">Non-secure bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sder32_el3.html" name="SDER32_EL3" size="4">
        <gui_name language="en">AArch32 Secure Debug Enable Register</gui_name>
        <description language="en">Allows access to the AArch32 register SDER from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
        <bitField enumerationId="SDER32_EL3_SUNIDEN" name="SUNIDEN">
          <gui_name language="en">SUNIDEN</gui_name>
          <description language="en">Secure User Non-Invasive Debug Enable:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SDER32_EL3_SUIDEN" name="SUIDEN">
          <gui_name language="en">SUIDEN</gui_name>
          <description language="en">Secure User Invasive Debug Enable:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vbar_el3.html" name="VBAR_EL3" size="8">
        <gui_name language="en">Vector Base Address Register (EL3)</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to EL3.</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Special" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Special.xml">
      <gui_name language="en">Special</gui_name>
      <description language="en">Special</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el1.html" name="ELR_EL1" size="8">
        <gui_name language="en">Exception Link Register (EL1)</gui_name>
        <description language="en">When taking an exception to EL1, holds the address to return to.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el2.html" name="ELR_EL2" size="8">
        <gui_name language="en">Exception Link Register (EL2)</gui_name>
        <description language="en">When taking an exception to EL2, holds the address to return to.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el3.html" name="ELR_EL3" size="8">
        <gui_name language="en">Exception Link Register (EL3)</gui_name>
        <description language="en">When taking an exception to EL3, holds the address to return to.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpcr.html" name="FPCR" size="4">
        <gui_name language="en">Floating-point Control Register</gui_name>
        <description language="en">Controls floating-point behavior.</description>
        <bitField enumerationId="FPCR_AHP" name="AHP">
          <gui_name language="en">AHP</gui_name>
          <description language="en">Alternative half-precision control bit:</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="FPCR_DN" name="DN">
          <gui_name language="en">DN</gui_name>
          <description language="en">Default NaN mode control bit:</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="FPCR_FZ" name="FZ">
          <gui_name language="en">FZ</gui_name>
          <description language="en">Flush-to-zero mode control bit:</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="FPCR_RMode" name="RMode">
          <gui_name language="en">RMode</gui_name>
          <description language="en">Rounding Mode control field.</description>
          <definition>[23:22]</definition>
        </bitField>
        <bitField name="Stride">
          <gui_name language="en">Stride</gui_name>
          <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Stride field.</description>
          <definition>[21:20]</definition>
        </bitField>
        <bitField name="Len">
          <gui_name language="en">Len</gui_name>
          <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Len field.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IDE" name="IDE">
          <gui_name language="en">IDE</gui_name>
          <description language="en">Input Denormal floating-point exception trap enable.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IXE" name="IXE">
          <gui_name language="en">IXE</gui_name>
          <description language="en">Inexact floating-point exception trap enable.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="FPCR_UFE" name="UFE">
          <gui_name language="en">UFE</gui_name>
          <description language="en">Underflow floating-point exception trap enable.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="FPCR_OFE" name="OFE">
          <gui_name language="en">OFE</gui_name>
          <description language="en">Overflow floating-point exception trap enable.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="FPCR_DZE" name="DZE">
          <gui_name language="en">DZE</gui_name>
          <description language="en">Divide by Zero floating-point exception trap enable.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="FPCR_IOE" name="IOE">
          <gui_name language="en">IOE</gui_name>
          <description language="en">Invalid Operation floating-point exception trap enable.</description>
          <definition>[8]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpsr.html" name="FPSR" size="4">
        <gui_name language="en">Floating-point Status Register</gui_name>
        <description language="en">Provides floating-point system status information.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Negative condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.N flag instead.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Zero condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.Z flag instead.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Carry condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.C flag instead.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Overflow condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.V flag instead.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="QC">
          <gui_name language="en">QC</gui_name>
          <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IDC">
          <gui_name language="en">IDC</gui_name>
          <description language="en">Input Denormal cumulative floating-point exception bit. This bit is set to 1 to indicate that the Input Denormal floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField name="IXC">
          <gui_name language="en">IXC</gui_name>
          <description language="en">Inexact cumulative floating-point exception bit. This bit is set to 1 to indicate that the Inexact exception floating-point has occurred since 0 was last written to this bit.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="UFC">
          <gui_name language="en">UFC</gui_name>
          <description language="en">Underflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Underflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField name="OFC">
          <gui_name language="en">OFC</gui_name>
          <description language="en">Overflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Overflow floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField name="DZC">
          <gui_name language="en">DZC</gui_name>
          <description language="en">Divide by Zero cumulative floating-point exception bit. This bit is set to 1 to indicate that the Divide by Zero floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField name="IOC">
          <gui_name language="en">IOC</gui_name>
          <description language="en">Invalid Operation cumulative floating-point exception bit. This bit is set to 1 to indicate that the Invalid Operation floating-point exception has occurred since 0 was last written to this bit.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el1.html" name="SPSR_EL1" size="4">
        <gui_name language="en">Saved Program Status Register (EL1)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to EL1.</description>
        <bitField name="SS">
          <gui_name language="en">SS</gui_name>
          <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL1_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL1_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL1_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el2.html" name="SPSR_EL2" size="4">
        <gui_name language="en">Saved Program Status Register (EL2)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to EL2.</description>
        <bitField name="SS">
          <gui_name language="en">SS</gui_name>
          <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL2_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL2_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL2_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el3.html" name="SPSR_EL3" size="4">
        <gui_name language="en">Saved Program Status Register (EL3)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to EL3.</description>
        <bitField name="SS">
          <gui_name language="en">SS</gui_name>
          <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL3_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL3_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_EL3_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_abt.html" name="SPSR_abt" size="4">
        <gui_name language="en">Saved Program Status Register (Abort mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Abort mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Abort mode, and copied to CPSR.N on executing an exception return operation in Abort mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Abort mode, and copied to CPSR.Z on executing an exception return operation in Abort mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Abort mode, and copied to CPSR.C on executing an exception return operation in Abort mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Abort mode, and copied to CPSR.V on executing an exception return operation in Abort mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_abt_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_fiq.html" name="SPSR_fiq" size="4">
        <gui_name language="en">Saved Program Status Register (FIQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to FIQ mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to FIQ mode, and copied to CPSR.N on executing an exception return operation in FIQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to FIQ mode, and copied to CPSR.Z on executing an exception return operation in FIQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to FIQ mode, and copied to CPSR.C on executing an exception return operation in FIQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to FIQ mode, and copied to CPSR.V on executing an exception return operation in FIQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_fiq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_irq.html" name="SPSR_irq" size="4">
        <gui_name language="en">Saved Program Status Register (IRQ mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to IRQ mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to IRQ mode, and copied to CPSR.N on executing an exception return operation in IRQ mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to IRQ mode, and copied to CPSR.Z on executing an exception return operation in IRQ mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to IRQ mode, and copied to CPSR.C on executing an exception return operation in IRQ mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to IRQ mode, and copied to CPSR.V on executing an exception return operation in IRQ mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_irq_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_und.html" name="SPSR_und" size="4">
        <gui_name language="en">Saved Program Status Register (Undefined mode)</gui_name>
        <description language="en">Holds the saved process state when an exception is taken to Undefined mode.</description>
        <bitField name="N">
          <gui_name language="en">N</gui_name>
          <description language="en">Set to the value of CPSR.N on taking an exception to Undefined mode, and copied to CPSR.N on executing an exception return operation in Undefined mode.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField name="Z">
          <gui_name language="en">Z</gui_name>
          <description language="en">Set to the value of CPSR.Z on taking an exception to Undefined mode, and copied to CPSR.Z on executing an exception return operation in Undefined mode.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Set to the value of CPSR.C on taking an exception to Undefined mode, and copied to CPSR.C on executing an exception return operation in Undefined mode.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField name="V">
          <gui_name language="en">V</gui_name>
          <description language="en">Set to the value of CPSR.V on taking an exception to Undefined mode, and copied to CPSR.V on executing an exception return operation in Undefined mode.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField name="Q">
          <gui_name language="en">Q</gui_name>
          <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField name="IT_1_0">
          <gui_name language="en">IT_1_0</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
          <definition>[26:25]</definition>
        </bitField>
        <bitField name="J">
          <gui_name language="en">J</gui_name>
          <description language="en">RES0.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField name="GE">
          <gui_name language="en">GE</gui_name>
          <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="IT_7_2">
          <gui_name language="en">IT_7_2</gui_name>
          <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
          <definition>[15:10]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_E" name="E">
          <gui_name language="en">E</gui_name>
          <description language="en">Endianness state bit.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">SError interrupt mask bit.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">IRQ mask bit.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_F" name="F">
          <gui_name language="en">F</gui_name>
          <description language="en">FIQ mask bit.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_T" name="T">
          <gui_name language="en">T</gui_name>
          <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="SPSR_und_M_4" name="M_4">
          <gui_name language="en">M_4</gui_name>
          <description language="en">Execution state that the exception was taken from.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField name="M_3_0">
          <gui_name language="en">M_3_0</gui_name>
          <description language="en">AArch32 mode that an exception was taken from.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el0.html" name="SP_EL0" size="8">
        <gui_name language="en">Stack Pointer (EL0)</gui_name>
        <description language="en">Holds the stack pointer associated with EL0. At higher Exception levels, this is used as the current stack pointer when the value of SPSel.SP is 0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el1.html" name="SP_EL1" size="8">
        <gui_name language="en">Stack Pointer (EL1)</gui_name>
        <description language="en">Holds the stack pointer associated with EL1. When executing at EL1, the value of SPSel.SP determines the current stack pointer...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el2.html" name="SP_EL2" size="8">
        <gui_name language="en">Stack Pointer (EL2)</gui_name>
        <description language="en">Holds the stack pointer associated with EL2. When executing at EL2, the value of SPSel.SP determines the current stack pointer...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el3.html" name="SP_EL3" size="8">
        <gui_name language="en">Stack Pointer (EL3)</gui_name>
        <description language="en">Holds the stack pointer associated with EL3. When executing at EL3, the value of SPSel.SP determines the current stack pointer...</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="TLB" xml:base="Registers/System/ARMv8.0/V8_AARCH64_TLB.xml">
      <gui_name language="en">TLB</gui_name>
      <description language="en">TLB</description>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle1.html" name="TLBI_ALLE1" size="8">
        <gui_name language="en">TLB Invalidate All, EL1</gui_name>
        <device_name type="rvi">TLBI_ALLE1</device_name>
        <device_name type="cadi">TLBI ALLE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle1is.html" name="TLBI_ALLE1IS" size="8">
        <gui_name language="en">TLB Invalidate All, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_ALLE1IS</device_name>
        <device_name type="cadi">TLBI ALLE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle2.html" name="TLBI_ALLE2" size="8">
        <gui_name language="en">TLB Invalidate All, EL2</gui_name>
        <device_name type="rvi">TLBI_ALLE2</device_name>
        <device_name type="cadi">TLBI ALLE2</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle2is.html" name="TLBI_ALLE2IS" size="8">
        <gui_name language="en">TLB Invalidate All, EL2, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_ALLE2IS</device_name>
        <device_name type="cadi">TLBI ALLE2IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle3.html" name="TLBI_ALLE3" size="8">
        <gui_name language="en">TLB Invalidate All, EL3</gui_name>
        <device_name type="rvi">TLBI_ALLE3</device_name>
        <device_name type="cadi">TLBI ALLE3</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-alle3is.html" name="TLBI_ALLE3IS" size="8">
        <gui_name language="en">TLB Invalidate All, EL3, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_ALLE3IS</device_name>
        <device_name type="cadi">TLBI ALLE3IS</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-aside1.html" name="TLBI_ASIDE1" size="8">
        <gui_name language="en">TLB Invalidate by ASID, EL1</gui_name>
        <device_name type="rvi">TLBI_ASIDE1</device_name>
        <device_name type="cadi">TLBI ASIDE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any appropriate TLB entries that match the ASID values will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-aside1is.html" name="TLBI_ASIDE1IS" size="8">
        <gui_name language="en">TLB Invalidate by ASID, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_ASIDE1IS</device_name>
        <device_name type="cadi">TLBI ASIDE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any appropriate TLB entries that match the ASID values will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2e1.html" name="TLBI_IPAS2E1" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, EL1</gui_name>
        <device_name type="rvi">TLBI_IPAS2E1</device_name>
        <device_name type="cadi">TLBI IPAS2E1</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2e1is.html" name="TLBI_IPAS2E1IS" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_IPAS2E1IS</device_name>
        <device_name type="cadi">TLBI IPAS2E1IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2le1.html" name="TLBI_IPAS2LE1" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1</gui_name>
        <device_name type="rvi">TLBI_IPAS2LE1</device_name>
        <device_name type="cadi">TLBI IPAS2LE1</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2le1is.html" name="TLBI_IPAS2LE1IS" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_IPAS2LE1IS</device_name>
        <device_name type="cadi">TLBI IPAS2LE1IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vaae1.html" name="TLBI_VAAE1" size="8">
        <gui_name language="en">TLB Invalidate by VA, All ASID, EL1</gui_name>
        <device_name type="rvi">TLBI_VAAE1</device_name>
        <device_name type="cadi">TLBI VAAE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vaae1is.html" name="TLBI_VAAE1IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, All ASID, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VAAE1IS</device_name>
        <device_name type="cadi">TLBI VAAE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vaale1.html" name="TLBI_VAALE1" size="8">
        <gui_name language="en">TLB Invalidate by VA, All ASID, Last level, EL1</gui_name>
        <device_name type="rvi">TLBI_VAALE1</device_name>
        <device_name type="cadi">TLBI VAALE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vaale1is.html" name="TLBI_VAALE1IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, All ASID, EL1, Last Level, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VAALE1IS</device_name>
        <device_name type="cadi">TLBI VAALE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the VA will be affected by this operation, regardless of the ASID.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae1.html" name="TLBI_VAE1" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL1</gui_name>
        <device_name type="rvi">TLBI_VAE1</device_name>
        <device_name type="cadi">TLBI VAE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae1is.html" name="TLBI_VAE1IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VAE1IS</device_name>
        <device_name type="cadi">TLBI VAE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae2.html" name="TLBI_VAE2" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL2</gui_name>
        <device_name type="rvi">TLBI_VAE2</device_name>
        <device_name type="cadi">TLBI VAE2</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae2is.html" name="TLBI_VAE2IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL2, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VAE2IS</device_name>
        <device_name type="cadi">TLBI VAE2IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae3.html" name="TLBI_VAE3" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL3</gui_name>
        <device_name type="rvi">TLBI_VAE3</device_name>
        <device_name type="cadi">TLBI VAE3</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vae3is.html" name="TLBI_VAE3IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, EL3, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VAE3IS</device_name>
        <device_name type="cadi">TLBI VAE3IS</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale1.html" name="TLBI_VALE1" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL1</gui_name>
        <device_name type="rvi">TLBI_VALE1</device_name>
        <device_name type="cadi">TLBI VALE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale1is.html" name="TLBI_VALE1IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VALE1IS</device_name>
        <device_name type="cadi">TLBI VALE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="ASID">
          <gui_name language="en">ASID</gui_name>
          <description language="en">ASID value to match. Any TLB entries that match the ASID value and VA value will be affected by this operation.</description>
          <definition>[63:48]</definition>
        </bitField>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale2.html" name="TLBI_VALE2" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL2</gui_name>
        <device_name type="rvi">TLBI_VALE2</device_name>
        <device_name type="cadi">TLBI VALE2</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale2is.html" name="TLBI_VALE2IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL2, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VALE2IS</device_name>
        <device_name type="cadi">TLBI VALE2IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale3.html" name="TLBI_VALE3" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL3</gui_name>
        <device_name type="rvi">TLBI_VALE3</device_name>
        <device_name type="cadi">TLBI VALE3</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vale3is.html" name="TLBI_VALE3IS" size="8">
        <gui_name language="en">TLB Invalidate by VA, Last level, EL3, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VALE3IS</device_name>
        <device_name type="cadi">TLBI VALE3IS</device_name>
        <description language="en">If EL3 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="VA_55_12">
          <gui_name language="en">VA_55_12</gui_name>
          <description language="en">Bits[55:12] of the virtual address to match. Any appropriate TLB entries that match the ASID value (if appropriate) and VA will be affected by this operation.</description>
          <definition>[43:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vmalle1.html" name="TLBI_VMALLE1" size="8">
        <gui_name language="en">TLB Invalidate by VMID, All at stage 1, EL1</gui_name>
        <device_name type="rvi">TLBI_VMALLE1</device_name>
        <device_name type="cadi">TLBI VMALLE1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vmalle1is.html" name="TLBI_VMALLE1IS" size="8">
        <gui_name language="en">TLB Invalidate by VMID, All at stage 1, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VMALLE1IS</device_name>
        <device_name type="cadi">TLBI VMALLE1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vmalls12e1.html" name="TLBI_VMALLS12E1" size="8">
        <gui_name language="en">TLB Invalidate by VMID, All at Stage 1 and 2, EL1</gui_name>
        <device_name type="rvi">TLBI_VMALLS12E1</device_name>
        <device_name type="cadi">TLBI VMALLS12E1</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-vmalls12e1is.html" name="TLBI_VMALLS12E1IS" size="8">
        <gui_name language="en">TLB Invalidate by VMID, All at Stage 1 and 2, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_VMALLS12E1IS</device_name>
        <device_name type="cadi">TLBI VMALLS12E1IS</device_name>
        <description language="en">Invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Thread" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Thread.xml">
      <gui_name language="en">Thread</gui_name>
      <description language="en">Thread</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidrro_el0.html" name="TPIDRRO_EL0" size="8">
        <gui_name language="en">EL0 Read-Only Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 or higher can store thread identifying information that is visible to software executing at EL0, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidr_el0.html" name="TPIDR_EL0" size="8">
        <gui_name language="en">EL0 Read/Write Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL0 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidr_el1.html" name="TPIDR_EL1" size="8">
        <gui_name language="en">EL1 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL1 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidr_el2.html" name="TPIDR_EL2" size="8">
        <gui_name language="en">EL2 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL2 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidr_el3.html" name="TPIDR_EL3" size="8">
        <gui_name language="en">EL3 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL3 can store thread identifying information, for OS management purposes...</description>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Timer" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Timer.xml">
      <gui_name language="en">Timer</gui_name>
      <description language="en">Timer</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntfrq_el0.html" name="CNTFRQ_EL0" size="4">
        <gui_name language="en">Counter-timer Frequency register</gui_name>
        <description language="en">This register is provided so that software can discover the frequency of the system counter. It must be programmed with this value as part of system initialization. The value of the register is not interpreted by hardware.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthctl_el2.html" name="CNTHCTL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT_EL0 is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT_EL0 trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT_EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EL1PCEN" name="EL1PCEN">
          <gui_name language="en">EL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to EL2.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EL1PCTEN" name="EL1PCTEN">
          <gui_name language="en">EL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to EL2.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_ctl_el2.html" name="CNTHP_CTL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL2 physical timer.</description>
        <bitField enumerationId="CNTHP_CTL_EL2_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_EL2_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_EL2_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_cval_el2.html" name="CNTHP_CVAL_EL2" size="8">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL2 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL2 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_tval_el2.html" name="CNTHP_TVAL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL2 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL2 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntkctl_el1.html" name="CNTKCTL_EL1" size="4">
        <gui_name language="en">Counter-timer Kernel Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the virtual counter, and access from EL0 to the physical counter, virtual counter, EL1 physical timers, and the virtual timer.</description>
        <bitField enumerationId="CNTKCTL_EL1_EL0PTEN" name="EL0PTEN">
          <gui_name language="en">EL0PTEN</gui_name>
          <description language="en">Traps EL0 accesses to the physical timer registers to EL1.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EL1_EL0VTEN" name="EL0VTEN">
          <gui_name language="en">EL0VTEN</gui_name>
          <description language="en">Traps EL0 accesses to the virtual timer registers to EL1.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTVCT_EL0 is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EL1_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTVCT_EL0 trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EL1_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTVCT_EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EL1_EL0VCTEN" name="EL0VCTEN">
          <gui_name language="en">EL0VCTEN</gui_name>
          <description language="en">Traps EL0 accesses to the frequency register and virtual counter register to EL1.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTKCTL_EL1_EL0PCTEN" name="EL0PCTEN">
          <gui_name language="en">EL0PCTEN</gui_name>
          <description language="en">Traps EL0 accesses to the frequency register and physical counter register to EL1.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntpct_el0.html" name="CNTPCT_EL0" size="8">
        <gui_name language="en">Counter-timer Physical Count register</gui_name>
        <description language="en">Holds the 64-bit physical count value.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntps_ctl_el1.html" name="CNTPS_CTL_EL1" size="4">
        <gui_name language="en">Counter-timer Physical Secure Timer Control register</gui_name>
        <description language="en">Control register for the secure physical timer, usually accessible at EL3 but configurably accessible at EL1 in Secure state.</description>
        <bitField enumerationId="CNTPS_CTL_EL1_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTPS_CTL_EL1_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTPS_CTL_EL1_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntps_cval_el1.html" name="CNTPS_CVAL_EL1" size="8">
        <gui_name language="en">Counter-timer Physical Secure Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the secure physical timer, usually accessible at EL3 but configurably accessible at EL1 in Secure state.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the secure physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntps_tval_el1.html" name="CNTPS_TVAL_EL1" size="4">
        <gui_name language="en">Counter-timer Physical Secure Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the secure physical timer, usually accessible at EL3 but configurably accessible at EL1 in Secure state.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the secure physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntp_ctl_el0.html" name="CNTP_CTL_EL0" size="4">
        <gui_name language="en">Counter-timer Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL1 physical timer.</description>
        <bitField enumerationId="CNTP_CTL_EL0_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_EL0_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTP_CTL_EL0_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntp_cval_el0.html" name="CNTP_CVAL_EL0" size="8">
        <gui_name language="en">Counter-timer Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL1 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntp_tval_el0.html" name="CNTP_TVAL_EL0" size="4">
        <gui_name language="en">Counter-timer Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL1 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntvct_el0.html" name="CNTVCT_EL0" size="8">
        <gui_name language="en">Counter-timer Virtual Count register</gui_name>
        <description language="en">Holds the 64-bit virtual count value. The virtual count value is equal to the physical count value visible in CNTPCT_EL0 minus the virtual offset visible in CNTVOFF_EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntvoff_el2.html" name="CNTVOFF_EL2" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT_EL0 and the virtual count value visible in CNTVCT_EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntv_ctl_el0.html" name="CNTV_CTL_EL0" size="4">
        <gui_name language="en">Counter-timer Virtual Timer Control register</gui_name>
        <description language="en">Control register for the virtual timer.</description>
        <bitField enumerationId="CNTV_CTL_EL0_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTV_CTL_EL0_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTV_CTL_EL0_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntv_cval_el0.html" name="CNTV_CVAL_EL0" size="8">
        <gui_name language="en">Counter-timer Virtual Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the virtual timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL1 virtual timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntv_tval_el0.html" name="CNTV_TVAL_EL0" size="4">
        <gui_name language="en">Counter-timer Virtual Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL1 virtual timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL1 virtual timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
    </register_group>
    <register_group xmlns="http://www.arm.com/core_reg" name="Virt" xml:base="Registers/System/ARMv8.0/V8_AARCH64_Virt.xml">
      <gui_name language="en">Virt</gui_name>
      <description language="en">Virt</description>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-actlr_el2.html" name="ACTLR_EL2" size="8">
        <gui_name language="en">Auxiliary Control Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED configuration and control options for EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr0_el2.html" name="AFSR0_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 0 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-afsr1_el2.html" name="AFSR1_EL2" size="4">
        <gui_name language="en">Auxiliary Fault Status Register 1 (EL2)</gui_name>
        <description language="en">Provides additional IMPLEMENTATION DEFINED fault status information for exceptions taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-amair_el2.html" name="AMAIR_EL2" size="8">
        <gui_name language="en">Auxiliary Memory Attribute Indirection Register (EL2)</gui_name>
        <description language="en">Provides IMPLEMENTATION DEFINED memory attributes for the memory regions specified by MAIR_EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthctl_el2.html" name="CNTHCTL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Control register</gui_name>
        <description language="en">Controls the generation of an event stream from the physical counter, and access from Non-secure EL1 to the physical counter and the Non-secure EL1 physical timer.</description>
        <bitField name="EVNTI">
          <gui_name language="en">EVNTI</gui_name>
          <description language="en">Selects which bit (0 to 15) of the counter register CNTPCT_EL0 is the trigger for the event stream generated from that counter, when that stream is enabled.</description>
          <definition>[7:4]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EVNTDIR" name="EVNTDIR">
          <gui_name language="en">EVNTDIR</gui_name>
          <description language="en">Controls which transition of the counter register CNTPCT_EL0 trigger bit, defined by EVNTI, generates an event when the event stream is enabled:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EVNTEN" name="EVNTEN">
          <gui_name language="en">EVNTEN</gui_name>
          <description language="en">Enables the generation of an event stream from the counter register CNTPCT_EL0:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EL1PCEN" name="EL1PCEN">
          <gui_name language="en">EL1PCEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical timer registers to EL2.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHCTL_EL2_EL1PCTEN" name="EL1PCTEN">
          <gui_name language="en">EL1PCTEN</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 accesses to the physical counter register to EL2.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_ctl_el2.html" name="CNTHP_CTL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer Control register</gui_name>
        <description language="en">Control register for the EL2 physical timer.</description>
        <bitField enumerationId="CNTHP_CTL_EL2_ISTATUS" name="ISTATUS">
          <gui_name language="en">ISTATUS</gui_name>
          <description language="en">The status of the timer.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_EL2_IMASK" name="IMASK">
          <gui_name language="en">IMASK</gui_name>
          <description language="en">Timer interrupt mask bit.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="CNTHP_CTL_EL2_ENABLE" name="ENABLE">
          <gui_name language="en">ENABLE</gui_name>
          <description language="en">Enables the timer.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_cval_el2.html" name="CNTHP_CVAL_EL2" size="8">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer CompareValue register</gui_name>
        <description language="en">Holds the compare value for the EL2 physical timer.</description>
        <bitField name="CompareValue">
          <gui_name language="en">CompareValue</gui_name>
          <description language="en">Holds the EL2 physical timer CompareValue.</description>
          <definition>[63:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cnthp_tval_el2.html" name="CNTHP_TVAL_EL2" size="4">
        <gui_name language="en">Counter-timer Hypervisor Physical Timer TimerValue register</gui_name>
        <description language="en">Holds the timer value for the EL2 physical timer.</description>
        <bitField name="TimerValue">
          <gui_name language="en">TimerValue</gui_name>
          <description language="en">The TimerValue view of the EL2 physical timer.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cntvoff_el2.html" name="CNTVOFF_EL2" size="8">
        <gui_name language="en">Counter-timer Virtual Offset register</gui_name>
        <description language="en">Holds the 64-bit virtual offset. This is the offset between the physical count value visible in CNTPCT_EL0 and the virtual count value visible in CNTVCT_EL0.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-cptr_el2.html" name="CPTR_EL2" size="4">
        <gui_name language="en">Architectural Feature Trap Register (EL2)</gui_name>
        <description language="en">Controls trapping to EL2 of access to CPACR, CPACR_EL1, trace functionality and registers associated with Advanced SIMD and floating-point execution. Also controls EL2 access to this functionality.</description>
        <bitField enumerationId="CPTR_EL2_TCPAC" name="TCPAC">
          <gui_name language="en">TCPAC</gui_name>
          <description language="en">Traps Non-secure EL1 accesses to the CPACR_EL1 or CPACR to EL2, from both Execution states.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="CPTR_EL2_TTA" name="TTA">
          <gui_name language="en">TTA</gui_name>
          <description language="en">Traps Non-secure System register accesses to all implemented trace registers to EL2, from both Execution states.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="CPTR_EL2_TFP" name="TFP">
          <gui_name language="en">TFP</gui_name>
          <description language="en">Traps Non-secure accesses to Advanced SIMD and floating-point functionality to EL2, from both Execution states.</description>
          <definition>[10]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-esr_el2.html" name="ESR_EL2" size="4">
        <gui_name language="en">Exception Syndrome Register (EL2)</gui_name>
        <description language="en">Holds syndrome information for an exception taken to EL2.</description>
        <bitField enumerationId="ESR_EL2_EC" name="EC">
          <gui_name language="en">EC</gui_name>
          <description language="en">Exception Class. Indicates the reason for the exception that this register holds information about.</description>
          <definition>[31:26]</definition>
        </bitField>
        <bitField enumerationId="ESR_EL2_IL" name="IL">
          <gui_name language="en">IL</gui_name>
          <description language="en">Instruction Length for synchronous exceptions.</description>
          <definition>[25]</definition>
        </bitField>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x1">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_TI" name="TI">
            <gui_name language="en">TI</gui_name>
            <description language="en">Trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x5 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x8">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc2">
            <gui_name language="en">Opc2</gui_name>
            <description language="en">The Opc2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x4 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0xC">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="Opc1">
            <gui_name language="en">Opc1</gui_name>
            <description language="en">The Opc1 value from the issued instruction.</description>
            <definition>[19:16]</definition>
          </bitField>
          <bitField name="Rt2">
            <gui_name language="en">Rt2</gui_name>
            <description language="en">The Rt2 value from the issued instruction, the second general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[14:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the first general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x6">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField name="imm8">
            <gui_name language="en">imm8</gui_name>
            <description language="en">The immediate value from the issued instruction.</description>
            <definition>[19:12]</definition>
          </bitField>
          <bitField name="Rn">
            <gui_name language="en">Rn</gui_name>
            <description language="en">The Rn value from the issued instruction, the general-purpose register used for the transfer. The reported value gives the AArch64 view of the register. See .</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Offset" name="Offset">
            <gui_name language="en">Offset</gui_name>
            <description language="en">Indicates whether the offset is added or subtracted:</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_AM" name="AM">
            <gui_name language="en">AM</gui_name>
            <description language="en">Addressing mode.</description>
            <definition>[3:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x7">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x11 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x12 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x15 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x16">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the HVC or SVC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x13">
          <bitField enumerationId="ESR_EL2_CV" name="CV">
            <gui_name language="en">CV</gui_name>
            <description language="en">Condition code valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="COND">
            <gui_name language="en">COND</gui_name>
            <description language="en">The condition code for the trapped instruction. This field is valid only for exceptions taken from AArch32, and only when the value of CV is 1.</description>
            <definition>[23:20]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_CCKNOWNPASS" name="CCKNOWNPASS">
            <gui_name language="en">CCKNOWNPASS</gui_name>
            <description language="en">Indicates whether the instruction might have failed its condition code check.</description>
            <definition>[19]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x17">
          <bitField name="imm16">
            <gui_name language="en">imm16</gui_name>
            <description language="en">The value of the immediate field from the issued SMC instruction.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x18">
          <bitField name="Op0">
            <gui_name language="en">Op0</gui_name>
            <description language="en">The Op0 value from the issued instruction.</description>
            <definition>[21:20]</definition>
          </bitField>
          <bitField name="Op2">
            <gui_name language="en">Op2</gui_name>
            <description language="en">The Op2 value from the issued instruction.</description>
            <definition>[19:17]</definition>
          </bitField>
          <bitField name="Op1">
            <gui_name language="en">Op1</gui_name>
            <description language="en">The Op1 value from the issued instruction.</description>
            <definition>[16:14]</definition>
          </bitField>
          <bitField name="CRn">
            <gui_name language="en">CRn</gui_name>
            <description language="en">The CRn value from the issued instruction.</description>
            <definition>[13:10]</definition>
          </bitField>
          <bitField name="Rt">
            <gui_name language="en">Rt</gui_name>
            <description language="en">The Rt value from the issued instruction, the general-purpose register used for the transfer.</description>
            <definition>[9:5]</definition>
          </bitField>
          <bitField name="CRm">
            <gui_name language="en">CRm</gui_name>
            <description language="en">The CRm value from the issued instruction.</description>
            <definition>[4:1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_Direction" name="Direction">
            <gui_name language="en">Direction</gui_name>
            <description language="en">Indicates the direction of the trapped instruction.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x20 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x21">
          <bitField enumerationId="ESR_EL2_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and IFSC is 010000, describes the state of the PE after taking the Instruction Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IFSC" name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x24 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x25">
          <bitField enumerationId="ESR_EL2_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid. Indicates whether the syndrome information in ISS[23:14] is valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SAS" name="SAS">
            <gui_name language="en">SAS</gui_name>
            <description language="en">Syndrome Access Size. When ISV is 1, indicates the size of the access attempted by the faulting operation.</description>
            <definition>[23:22]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SSE" name="SSE">
            <gui_name language="en">SSE</gui_name>
            <description language="en">Syndrome Sign Extend. When ISV is 1, for a byte, halfword, or word load operation, indicates whether the data item must be sign extended.</description>
            <definition>[21]</definition>
          </bitField>
          <bitField name="SRT">
            <gui_name language="en">SRT</gui_name>
            <description language="en">Syndrome Register transfer. When ISV is 1, the register number of the Rt operand of the faulting instruction. If the exception was taken from an Exception level that is using AArch32 then this is the AArch64 view of the register. See .</description>
            <definition>[20:16]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SF" name="SF">
            <gui_name language="en">SF</gui_name>
            <description language="en">Width of the register accessed by the instruction is Sixty-Four.</description>
            <definition>[15]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_AR" name="AR">
            <gui_name language="en">AR</gui_name>
            <description language="en">Acquire/Release.</description>
            <definition>[14]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_SET" name="SET">
            <gui_name language="en">SET</gui_name>
            <description language="en">Synchronous Error Type. When the RAS Extension is implemented and DFSC is 010000, describes the state of the PE after taking the Data Abort exception.</description>
            <definition>[12:11]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_FnV" name="FnV">
            <gui_name language="en">FnV</gui_name>
            <description language="en">FAR not Valid, for a Synchronous external abort other than a Synchronous external abort on a translation table walk.</description>
            <definition>[10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. This bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_S1PTW" name="S1PTW">
            <gui_name language="en">S1PTW</gui_name>
            <description language="en">For a stage 2 fault, indicates whether the fault was a stage 2 fault on an access made for a stage 1 translation table walk:</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether a synchronous abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x28 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x2C">
          <bitField enumerationId="ESR_EL2_TFV" name="TFV">
            <gui_name language="en">TFV</gui_name>
            <description language="en">Trapped Fault Valid bit. Indicates whether the IDF, IXF, UFF, OFF, DZF, and IOF bits hold valid information about trapped floating-point exceptions.</description>
            <definition>[23]</definition>
          </bitField>
          <bitField name="VECITR">
            <gui_name language="en">VECITR</gui_name>
            <description language="en">For a trapped floating-point exception from an instruction executed in AArch32 state this field is RES1.</description>
            <definition>[10:8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IDF" name="IDF">
            <gui_name language="en">IDF</gui_name>
            <description language="en">Input Denormal floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[7]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IXF" name="IXF">
            <gui_name language="en">IXF</gui_name>
            <description language="en">Inexact floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[4]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_UFF" name="UFF">
            <gui_name language="en">UFF</gui_name>
            <description language="en">Underflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[3]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_OFF" name="OFF">
            <gui_name language="en">OFF</gui_name>
            <description language="en">Overflow floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[2]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DZF" name="DZF">
            <gui_name language="en">DZF</gui_name>
            <description language="en">Divide by Zero floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[1]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_IOF" name="IOF">
            <gui_name language="en">IOF</gui_name>
            <description language="en">Invalid Operation floating-point exception trapped bit. If the TFV field is 0, this bit is UNKNOWN.</description>
            <definition>[0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x2F">
          <bitField enumerationId="ESR_EL2_IDS" name="IDS">
            <gui_name language="en">IDS</gui_name>
            <description language="en">IMPLEMENTATION DEFINED syndrome.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField name="IESB">
            <gui_name language="en">IESB</gui_name>
            <description language="en">Reserved, RES0</description>
            <definition>[13]</definition>
          </bitField>
          <bitField name="AET">
            <gui_name language="en">AET</gui_name>
            <description language="en"/>
            <definition>[12:10]</definition>
          </bitField>
          <bitField name="EA">
            <gui_name language="en">EA</gui_name>
            <description language="en">External abort type. When the RAS Extension is implemented, this bit can provide an IMPLEMENTATION DEFINED classification of External aborts.</description>
            <definition>[9]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_DFSC" name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x30 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x31 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3A">
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x32 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x33">
          <bitField enumerationId="ESR_EL2_ISV" name="ISV">
            <gui_name language="en">ISV</gui_name>
            <description language="en">Instruction syndrome valid.</description>
            <definition>[24]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_EX" name="EX">
            <gui_name language="en">EX</gui_name>
            <description language="en">Exclusive operation. If the ISV bit is set to 1, this bit indicates whether a Load-Exclusive instruction was stepped.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="IFSC">
            <gui_name language="en">IFSC</gui_name>
            <description language="en">Instruction Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x34 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x35">
          <bitField enumerationId="ESR_EL2_CM" name="CM">
            <gui_name language="en">CM</gui_name>
            <description language="en">Cache maintenance.</description>
            <definition>[8]</definition>
          </bitField>
          <bitField enumerationId="ESR_EL2_WnR" name="WnR">
            <gui_name language="en">WnR</gui_name>
            <description language="en">Write not Read. Indicates whether the abort was caused by a write instruction or a read instruction.</description>
            <definition>[6]</definition>
          </bitField>
          <bitField name="DFSC">
            <gui_name language="en">DFSC</gui_name>
            <description language="en">Data Fault Status Code. This field is set to 0b100010, to indicate a Debug exception.</description>
            <definition>[5:0]</definition>
          </bitField>
        </conditional>
        <conditional expr="(($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x38 || (($ESR_EL2 &gt;&gt; 26) &amp; 0x3F) == 0x3C">
          <bitField name="Comment">
            <gui_name language="en">Comment</gui_name>
            <description language="en">Set to the instruction comment field value, zero extended as necessary. For the AArch32 BKPT instructions, the comment field is described as the immediate field.</description>
            <definition>[15:0]</definition>
          </bitField>
        </conditional>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-far_el2.html" name="FAR_EL2" size="8">
        <gui_name language="en">Fault Address Register (EL2)</gui_name>
        <description language="en">Holds the faulting Virtual Address for all synchronous Instruction or Data Abort, PC alignment fault and Watchpoint exceptions that are taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hacr_el2.html" name="HACR_EL2" size="4">
        <gui_name language="en">Hypervisor Auxiliary Control Register</gui_name>
        <description language="en">Controls trapping to EL2 of IMPLEMENTATION DEFINED aspects of Non-secure EL1 or EL0 operation.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hcr_el2.html" name="HCR_EL2" size="8">
        <gui_name language="en">Hypervisor Configuration Register</gui_name>
        <description language="en">Provides configuration controls for virtualization, including defining whether various Non-secure operations are trapped to EL2.</description>
        <bitField enumerationId="HCR_EL2_MIOCNCE" name="MIOCNCE">
          <gui_name language="en">MIOCNCE</gui_name>
          <description language="en">Mismatched Inner/Outer Cacheable Non-Coherency Enable, for the Non-secure EL1&amp;0 translation regime.</description>
          <definition>[38]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TEA" name="TEA">
          <gui_name language="en">TEA</gui_name>
          <description language="en">Route synchronous External Abort exceptions to EL2.</description>
          <definition>[37]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TERR" name="TERR">
          <gui_name language="en">TERR</gui_name>
          <description language="en">Trap Error record accesses.</description>
          <definition>[36]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_ID" name="ID">
          <gui_name language="en">ID</gui_name>
          <description language="en">Stage 2 Instruction access cacheability disable. For the Non-secure EL1&amp;0 translation regime, when HCR_EL2.VM==1, this control forces all stage 2 translations for instruction accesses to Normal memory to be Non-cacheable.</description>
          <definition>[33]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_CD" name="CD">
          <gui_name language="en">CD</gui_name>
          <description language="en">Stage 2 Data access cacheability disable. For the Non-secure EL1&amp;0 translation regime, when HCR_EL2.VM==1, this control forces all stage 2 translations for data accesses and translation table walks to Normal memory to be Non-cacheable.</description>
          <definition>[32]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_RW" name="RW">
          <gui_name language="en">RW</gui_name>
          <description language="en">Execution state control for lower Exception levels:</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TRVM" name="TRVM">
          <gui_name language="en">TRVM</gui_name>
          <description language="en">Trap Reads of Virtual Memory controls. Traps Non-secure EL1 reads of the virtual memory control registers to EL2, from both Execution states.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_HCD" name="HCD">
          <gui_name language="en">HCD</gui_name>
          <description language="en">HVC instruction disable. Disables Non-secure state execution of HVC instructions, from both Execution states.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TDZ" name="TDZ">
          <gui_name language="en">TDZ</gui_name>
          <description language="en">Trap DC ZVA instructions. Traps Non-secure EL0 and EL1 execution of DC ZVA instructions to EL2, from AArch64 state only.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TGE" name="TGE">
          <gui_name language="en">TGE</gui_name>
          <description language="en">Trap General Exceptions, from Non-secure EL0.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TVM" name="TVM">
          <gui_name language="en">TVM</gui_name>
          <description language="en">Trap Virtual Memory controls. Traps Non-secure EL1 writes to the virtual memory control registers to EL2, from both Execution states.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TTLB" name="TTLB">
          <gui_name language="en">TTLB</gui_name>
          <description language="en">Trap TLB maintenance instructions. Traps Non-secure EL1 execution of TLB maintenance instructions to EL2, from both Execution states.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TPU" name="TPU">
          <gui_name language="en">TPU</gui_name>
          <description language="en">Trap cache maintenance instructions that operate to the Point of Unification. Traps execution of those cache maintenance instructions at Non-secure EL1 or EL0 using AArch64, and at Non-secure EL1 using AArch32, to EL2.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TPC" name="TPC">
          <gui_name language="en">TPC</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate to the Point of Coherency. Traps execution of those cache maintenance instructions at Non-secure EL1 or EL0 using AArch64, and at Non-secure EL1 using AArch32, to EL2.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TSW" name="TSW">
          <gui_name language="en">TSW</gui_name>
          <description language="en">Trap data or unified cache maintenance instructions that operate by Set/Way. Traps execution of those cache maintenance instructions at Non-secure EL1 using AArch64, and at Non-secure EL1 using AArch32, to EL2.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TACR" name="TACR">
          <gui_name language="en">TACR</gui_name>
          <description language="en">Trap Auxiliary Control Registers. Traps Non-secure EL1 accesses to the Auxiliary Control Registers to EL2, from both Execution states.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TIDCP" name="TIDCP">
          <gui_name language="en">TIDCP</gui_name>
          <description language="en">Trap IMPLEMENTATION DEFINED functionality. Traps Non-secure EL1 accesses to the encodings reserved for IMPLEMENTATION DEFINED functionality to EL2.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TSC" name="TSC">
          <gui_name language="en">TSC</gui_name>
          <description language="en">Trap SMC instructions. Traps Non-secure EL1 execution of SMC instructions to EL2, from both Execution states.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TID3" name="TID3">
          <gui_name language="en">TID3</gui_name>
          <description language="en">Trap ID group 3.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TID2" name="TID2">
          <gui_name language="en">TID2</gui_name>
          <description language="en">Trap ID group 2.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TID1" name="TID1">
          <gui_name language="en">TID1</gui_name>
          <description language="en">Trap ID group 1.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TID0" name="TID0">
          <gui_name language="en">TID0</gui_name>
          <description language="en">Trap ID group 0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TWE" name="TWE">
          <gui_name language="en">TWE</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 execution of WFE instructions to EL2, from both Execution states.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_TWI" name="TWI">
          <gui_name language="en">TWI</gui_name>
          <description language="en">Traps Non-secure EL0 and EL1 execution of WFI instructions to EL2, from both Execution states.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField name="DC">
          <gui_name language="en">DC</gui_name>
          <description language="en">This field is permitted to be cached in a TLB.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_BSU" name="BSU">
          <gui_name language="en">BSU</gui_name>
          <description language="en">Barrier Shareability upgrade.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_FB" name="FB">
          <gui_name language="en">FB</gui_name>
          <description language="en">Force broadcast.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_VSE" name="VSE">
          <gui_name language="en">VSE</gui_name>
          <description language="en">Virtual SError interrupt.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_VI" name="VI">
          <gui_name language="en">VI</gui_name>
          <description language="en">Virtual IRQ Interrupt.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_VF" name="VF">
          <gui_name language="en">VF</gui_name>
          <description language="en">Virtual FIQ Interrupt.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_AMO" name="AMO">
          <gui_name language="en">AMO</gui_name>
          <description language="en">Physical SError Interrupt routing.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_IMO" name="IMO">
          <gui_name language="en">IMO</gui_name>
          <description language="en">Physical IRQ Routing.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_FMO" name="FMO">
          <gui_name language="en">FMO</gui_name>
          <description language="en">Physical FIQ Routing.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_PTW" name="PTW">
          <gui_name language="en">PTW</gui_name>
          <description language="en">Protected Table Walk. In the Non-secure EL1&amp;0 translation regime, a translation table access made as part of a stage 1 translation table walk is subject to a stage 2 translation. The combining of the memory type attributes from the two stages of translation means the access might be made to a type of Device memory.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_SWIO" name="SWIO">
          <gui_name language="en">SWIO</gui_name>
          <description language="en">Set/Way Invalidation Override.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HCR_EL2_VM" name="VM">
          <gui_name language="en">VM</gui_name>
          <description language="en">Virtualization enable. Enables stage 2 address translation for the Non-secure EL1&amp;0 translation regime.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hpfar_el2.html" name="HPFAR_EL2" size="8">
        <gui_name language="en">Hypervisor IPA Fault Address Register</gui_name>
        <description language="en">Holds the faulting IPA for some aborts on a stage 2 translation taken to EL2.</description>
        <bitField name="FIPA_47_12">
          <gui_name language="en">FIPA_47_12</gui_name>
          <description language="en">Bits [47:12] of the faulting intermediate physical address. For implementations with fewer than 48 physical address bits, the corresponding upper bits in this field are RES0.</description>
          <definition>[39:4]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-hstr_el2.html" name="HSTR_EL2" size="4">
        <gui_name language="en">Hypervisor System Trap Register</gui_name>
        <description language="en">Controls trapping to Hyp mode of Non-secure accesses, at EL1 or lower in AArch32, to the System register in the coproc == 1111 encoding space, by the CRn value used to access the register using MCR or MRC instruction. When the register is accessible using an MCRR or MRRC instruction, this is the CRm value used to access the register.</description>
        <bitField enumerationId="HSTR_EL2_T_n" name="T15">
          <gui_name language="en">T15</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T14">
          <gui_name language="en">T14</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T13">
          <gui_name language="en">T13</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T12">
          <gui_name language="en">T12</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T11">
          <gui_name language="en">T11</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T10">
          <gui_name language="en">T10</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T9">
          <gui_name language="en">T9</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T8">
          <gui_name language="en">T8</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T7">
          <gui_name language="en">T7</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T6">
          <gui_name language="en">T6</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T5">
          <gui_name language="en">T5</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T4">
          <gui_name language="en">T4</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T3">
          <gui_name language="en">T3</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T2">
          <gui_name language="en">T2</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T1">
          <gui_name language="en">T1</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="HSTR_EL2_T_n" name="T0">
          <gui_name language="en">T0</gui_name>
          <description language="en">Fields T14 and T4 are RES0.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-icc_sre_el2.html" name="ICC_SRE_EL2" size="4">
        <gui_name language="en">Interrupt Controller System Register Enable register (EL2)</gui_name>
        <description language="en">Controls whether the System register interface or the memory-mapped interface to the GIC CPU interface is used for EL2.</description>
        <bitField enumerationId="ICC_SRE_EL2_Enable" name="Enable">
          <gui_name language="en">Enable</gui_name>
          <description language="en">Enable. Enables lower Exception level access to ICC_SRE_EL1.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_DIB" name="DIB">
          <gui_name language="en">DIB</gui_name>
          <description language="en">Disable IRQ bypass.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_DFB" name="DFB">
          <gui_name language="en">DFB</gui_name>
          <description language="en">Disable FIQ bypass.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICC_SRE_EL2_SRE" name="SRE">
          <gui_name language="en">SRE</gui_name>
          <description language="en">System Register Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R0_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R1_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R2_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap0rn_el2.html" name="ICH_AP0R3_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 0 Registers</gui_name>
        <description language="en">Provides information about Group 0 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP0R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Provides the access to the virtual active priorities for Group 0 interrupts.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R0_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R1_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R2_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_ap1rn_el2.html" name="ICH_AP1R3_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Active Priorities Group 1 Registers</gui_name>
        <description language="en">Provides information about Group 1 virtual active priorities for EL2.</description>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P31">
          <gui_name language="en">P31</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[31]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P30">
          <gui_name language="en">P30</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P29">
          <gui_name language="en">P29</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[29]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P28">
          <gui_name language="en">P28</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[28]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P27">
          <gui_name language="en">P27</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[27]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P26">
          <gui_name language="en">P26</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[26]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P25">
          <gui_name language="en">P25</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P24">
          <gui_name language="en">P24</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P23">
          <gui_name language="en">P23</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[23]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P22">
          <gui_name language="en">P22</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P21">
          <gui_name language="en">P21</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P20">
          <gui_name language="en">P20</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P19">
          <gui_name language="en">P19</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P18">
          <gui_name language="en">P18</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[18]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P17">
          <gui_name language="en">P17</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[17]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P16">
          <gui_name language="en">P16</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[16]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P15">
          <gui_name language="en">P15</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P14">
          <gui_name language="en">P14</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P13">
          <gui_name language="en">P13</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P12">
          <gui_name language="en">P12</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P11">
          <gui_name language="en">P11</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P10">
          <gui_name language="en">P10</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P9">
          <gui_name language="en">P9</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P8">
          <gui_name language="en">P8</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P7">
          <gui_name language="en">P7</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P6">
          <gui_name language="en">P6</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P5">
          <gui_name language="en">P5</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P4">
          <gui_name language="en">P4</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P3">
          <gui_name language="en">P3</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P2">
          <gui_name language="en">P2</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P1">
          <gui_name language="en">P1</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_AP1R_n_EL2_P_x" name="P0">
          <gui_name language="en">P0</gui_name>
          <description language="en">Group 1 interrupt active priorities.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_eisr_el2.html" name="ICH_EISR_EL2" size="4">
        <gui_name language="en">Interrupt Controller End of Interrupt Status Register</gui_name>
        <description language="en">Indicates which List registers have outstanding EOI maintenance interrupts.</description>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_EISR_EL2_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">EOI maintenance interrupt status bit for List register &lt;n&gt;:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_elrsr_el2.html" name="ICH_ELRSR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Empty List Register Status Register</gui_name>
        <description language="en">These registers can be used to locate a usable List register when the hypervisor is delivering an interrupt to a VM.</description>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status15">
          <gui_name language="en">Status15</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[15]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status14">
          <gui_name language="en">Status14</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status13">
          <gui_name language="en">Status13</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status12">
          <gui_name language="en">Status12</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status11">
          <gui_name language="en">Status11</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status10">
          <gui_name language="en">Status10</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status9">
          <gui_name language="en">Status9</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status8">
          <gui_name language="en">Status8</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status7">
          <gui_name language="en">Status7</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status6">
          <gui_name language="en">Status6</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status5">
          <gui_name language="en">Status5</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status4">
          <gui_name language="en">Status4</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status3">
          <gui_name language="en">Status3</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status2">
          <gui_name language="en">Status2</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status1">
          <gui_name language="en">Status1</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_ELRSR_EL2_Status_n" name="Status0">
          <gui_name language="en">Status0</gui_name>
          <description language="en">Status bit for List register &lt;n&gt;, ICH_LR&lt;n&gt;_EL2:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_hcr_el2.html" name="ICH_HCR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Hyp Control Register</gui_name>
        <description language="en">Controls the environment for VMs.</description>
        <bitField name="EOIcount">
          <gui_name language="en">EOIcount</gui_name>
          <description language="en">This field is incremented whenever a successful write to a virtual EOIR or DIR register would have resulted in a virtual interrupt deactivation.</description>
          <definition>[31:27]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TDIR" name="TDIR">
          <gui_name language="en">TDIR</gui_name>
          <description language="en">Trap Non-secure EL1 writes to ICC_DIR_EL1 and ICV_DIR_EL1.</description>
          <definition>[14]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TSEI" name="TSEI">
          <gui_name language="en">TSEI</gui_name>
          <description language="en">Trap all locally generated SEIs. This bit allows the hypervisor to intercept locally generated SEIs that would otherwise be taken at Non-secure EL1.</description>
          <definition>[13]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TALL1" name="TALL1">
          <gui_name language="en">TALL1</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 1 interrupts to EL2.</description>
          <definition>[12]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TALL0" name="TALL0">
          <gui_name language="en">TALL0</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to ICC_* and ICV_* System registers for Group 0 interrupts to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_TC" name="TC">
          <gui_name language="en">TC</gui_name>
          <description language="en">Trap all Non-secure EL1 accesses to System registers that are common to Group 0 and Group 1 to EL2.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp1DIE" name="VGrp1DIE">
          <gui_name language="en">VGrp1DIE</gui_name>
          <description language="en">VM Group 1 Disabled Interrupt Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp1EIE" name="VGrp1EIE">
          <gui_name language="en">VGrp1EIE</gui_name>
          <description language="en">VM Group 1 Enabled Interrupt Enable.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp0DIE" name="VGrp0DIE">
          <gui_name language="en">VGrp0DIE</gui_name>
          <description language="en">VM Group 0 Disabled Interrupt Enable.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_VGrp0EIE" name="VGrp0EIE">
          <gui_name language="en">VGrp0EIE</gui_name>
          <description language="en">VM Group 0 Enabled Interrupt Enable.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_NPIE" name="NPIE">
          <gui_name language="en">NPIE</gui_name>
          <description language="en">No Pending Interrupt Enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_LRENPIE" name="LRENPIE">
          <gui_name language="en">LRENPIE</gui_name>
          <description language="en">List Register Entry Not Present Interrupt Enable.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_UIE" name="UIE">
          <gui_name language="en">UIE</gui_name>
          <description language="en">Underflow Interrupt Enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_HCR_EL2_En" name="En">
          <gui_name language="en">En</gui_name>
          <description language="en">Enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR0_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR1_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR2_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR3_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR4_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR5_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR6_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR7_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR8_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR9_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR10_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR11_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR12_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR13_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR14_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_lrn_el2.html" name="ICH_LR15_EL2" size="8">
        <gui_name language="en">Interrupt Controller List Registers</gui_name>
        <description language="en">Provides interrupt context information for the virtual CPU interface.</description>
        <bitField enumerationId="ICH_LR_n_EL2_State" name="State">
          <gui_name language="en">State</gui_name>
          <description language="en">The state of the interrupt:</description>
          <definition>[63:62]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_HW" name="HW">
          <gui_name language="en">HW</gui_name>
          <description language="en">Indicates whether this virtual interrupt maps directly to a hardware interrupt, meaning that it corresponds to a physical interrupt. Deactivation of the virtual interrupt also causes the deactivation of the physical interrupt with the ID that the pINTID field indicates.</description>
          <definition>[61]</definition>
        </bitField>
        <bitField enumerationId="ICH_LR_n_EL2_Group" name="Group">
          <gui_name language="en">Group</gui_name>
          <description language="en">Indicates the group for this virtual interrupt.</description>
          <definition>[60]</definition>
        </bitField>
        <bitField name="Priority">
          <gui_name language="en">Priority</gui_name>
          <description language="en">The priority of this interrupt.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="pINTID">
          <gui_name language="en">pINTID</gui_name>
          <description language="en">Physical INTID, for hardware interrupts.</description>
          <definition>[41:32]</definition>
        </bitField>
        <bitField name="vINTID">
          <gui_name language="en">vINTID</gui_name>
          <description language="en">Virtual INTID of the interrupt.</description>
          <definition>[31:0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_misr_el2.html" name="ICH_MISR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Maintenance Interrupt State Register</gui_name>
        <description language="en">Indicates which maintenance interrupts are asserted.</description>
        <bitField enumerationId="ICH_MISR_EL2_VGrp1D" name="VGrp1D">
          <gui_name language="en">VGrp1D</gui_name>
          <description language="en">vPE Group 1 Disabled.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp1E" name="VGrp1E">
          <gui_name language="en">VGrp1E</gui_name>
          <description language="en">vPE Group 1 Enabled.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp0D" name="VGrp0D">
          <gui_name language="en">VGrp0D</gui_name>
          <description language="en">vPE Group 0 Disabled.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_VGrp0E" name="VGrp0E">
          <gui_name language="en">VGrp0E</gui_name>
          <description language="en">vPE Group 0 Enabled.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_NP" name="NP">
          <gui_name language="en">NP</gui_name>
          <description language="en">No Pending.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_LRENP" name="LRENP">
          <gui_name language="en">LRENP</gui_name>
          <description language="en">List Register Entry Not Present.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Underflow.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_MISR_EL2_EOI" name="EOI">
          <gui_name language="en">EOI</gui_name>
          <description language="en">End Of Interrupt.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_vmcr_el2.html" name="ICH_VMCR_EL2" size="4">
        <gui_name language="en">Interrupt Controller Virtual Machine Control Register</gui_name>
        <description language="en">Enables the hypervisor to save and restore the virtual machine view of the GIC state.</description>
        <bitField name="VPMR">
          <gui_name language="en">VPMR</gui_name>
          <description language="en">Virtual Priority Mask. The priority mask level for the virtual CPU interface. If the priority of a pending virtual interrupt is higher than the value indicated by this field, the interface signals the virtual interrupt to the PE.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="VBPR0">
          <gui_name language="en">VBPR0</gui_name>
          <description language="en">Virtual Binary Point Register, Group 0. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 0 interrupt preemption, and also determines Group 1 interrupt preemption if ICH_VMCR_EL2.VCBPR == 1.</description>
          <definition>[23:21]</definition>
        </bitField>
        <bitField name="VBPR1">
          <gui_name language="en">VBPR1</gui_name>
          <description language="en">Virtual Binary Point Register, Group 1. Defines the point at which the priority value fields split into two parts, the group priority field and the subpriority field. The group priority field determines Group 1 interrupt preemption if ICH_VMCR_EL2.VCBPR == 0.</description>
          <definition>[20:18]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VEOIM" name="VEOIM">
          <gui_name language="en">VEOIM</gui_name>
          <description language="en">Virtual EOI mode.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VCBPR" name="VCBPR">
          <gui_name language="en">VCBPR</gui_name>
          <description language="en">Virtual Common Binary Point Register.</description>
          <definition>[4]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VFIQEn" name="VFIQEn">
          <gui_name language="en">VFIQEn</gui_name>
          <description language="en">Virtual FIQ enable.</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VAckCtl" name="VAckCtl">
          <gui_name language="en">VAckCtl</gui_name>
          <description language="en">Virtual AckCtl.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VENG1" name="VENG1">
          <gui_name language="en">VENG1</gui_name>
          <description language="en">Virtual Group 1 interrupt enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="ICH_VMCR_EL2_VENG0" name="VENG0">
          <gui_name language="en">VENG0</gui_name>
          <description language="en">Virtual Group 0 interrupt enable.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ich_vtr_el2.html" name="ICH_VTR_EL2" size="4">
        <gui_name language="en">Interrupt Controller VGIC Type Register</gui_name>
        <description language="en">Reports supported GIC virtualisartion features.</description>
        <bitField name="PRIbits">
          <gui_name language="en">PRIbits</gui_name>
          <description language="en">Priority bits. The number of virtual priority bits implemented, minus one.</description>
          <definition>[31:29]</definition>
        </bitField>
        <bitField name="PREbits">
          <gui_name language="en">PREbits</gui_name>
          <description language="en">The number of virtual preemption bits implemented, minus one.</description>
          <definition>[28:26]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_IDbits" name="IDbits">
          <gui_name language="en">IDbits</gui_name>
          <description language="en">The number of virtual interrupt identifier bits supported:</description>
          <definition>[25:23]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_SEIS" name="SEIS">
          <gui_name language="en">SEIS</gui_name>
          <description language="en">SEI Support.</description>
          <definition>[22]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_A3V" name="A3V">
          <gui_name language="en">A3V</gui_name>
          <description language="en">Affinity 3 Valid.</description>
          <definition>[21]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_nV4" name="nV4">
          <gui_name language="en">nV4</gui_name>
          <description language="en">Direct injection of virtual interrupts not supported.</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="ICH_VTR_EL2_TDS" name="TDS">
          <gui_name language="en">TDS</gui_name>
          <description language="en">Separate trapping of Non-secure EL1 writes to ICV_DIR_EL1 supported.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField name="ListRegs">
          <gui_name language="en">ListRegs</gui_name>
          <description language="en">The number of implemented List registers, minus one. For example, a value of 0b01111 indicates that the maximum of 16 List registers are implemented.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2e1.html" name="TLBI_IPAS2E1" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, EL1</gui_name>
        <device_name type="rvi">TLBI_IPAS2E1</device_name>
        <device_name type="cadi">TLBI IPAS2E1</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2e1is.html" name="TLBI_IPAS2E1IS" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_IPAS2E1IS</device_name>
        <device_name type="cadi">TLBI IPAS2E1IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2le1.html" name="TLBI_IPAS2LE1" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1</gui_name>
        <device_name type="rvi">TLBI_IPAS2LE1</device_name>
        <device_name type="cadi">TLBI IPAS2LE1</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tlbi-ipas2le1is.html" name="TLBI_IPAS2LE1IS" size="8">
        <gui_name language="en">TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable</gui_name>
        <device_name type="rvi">TLBI_IPAS2LE1IS</device_name>
        <device_name type="cadi">TLBI IPAS2LE1IS</device_name>
        <description language="en">If EL2 is implemented, invalidate cached copies of translation table entries from TLBs that meet all the following requirements...</description>
        <bitField name="IPA_47_12">
          <gui_name language="en">IPA_47_12</gui_name>
          <description language="en">Bits[47:12] of the intermediate physical address to match.</description>
          <definition>[35:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mair_el2.html" name="MAIR_EL2" size="8">
        <gui_name language="en">Memory Attribute Indirection Register (EL2)</gui_name>
        <description language="en">Provides the memory attribute encodings corresponding to the possible AttrIndx values in a Long-descriptor format translation table entry for stage 1 translations at EL2.</description>
        <bitField name="Attr7">
          <gui_name language="en">Attr7</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[63:56]</definition>
        </bitField>
        <bitField name="Attr6">
          <gui_name language="en">Attr6</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="Attr5">
          <gui_name language="en">Attr5</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[47:40]</definition>
        </bitField>
        <bitField name="Attr4">
          <gui_name language="en">Attr4</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField name="Attr3">
          <gui_name language="en">Attr3</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Attr2">
          <gui_name language="en">Attr2</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Attr1">
          <gui_name language="en">Attr1</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Attr0">
          <gui_name language="en">Attr0</gui_name>
          <description language="en">The memory attribute encoding for an AttrIndx[2:0] entry in a Long descriptor format translation table entry, where AttrIndx[2:0] gives the value of &lt;n&gt; in Attr&lt;n&gt;.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el2.html" name="MDCR_EL2" size="4">
        <gui_name language="en">Monitor Debug Configuration Register (EL2)</gui_name>
        <description language="en">Provides EL2 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
        <bitField enumerationId="MDCR_EL2_TDRA" name="TDRA">
          <gui_name language="en">TDRA</gui_name>
          <description language="en">Trap Debug ROM Address register access. Traps Non-secure System register accesses to the Debug ROM registers to EL2.</description>
          <definition>[11]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDOSA" name="TDOSA">
          <gui_name language="en">TDOSA</gui_name>
          <description language="en">Trap debug OS-related register access.</description>
          <definition>[10]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDA" name="TDA">
          <gui_name language="en">TDA</gui_name>
          <description language="en">Trap Debug Access.</description>
          <definition>[9]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TDE" name="TDE">
          <gui_name language="en">TDE</gui_name>
          <description language="en">Trap Debug exceptions.</description>
          <definition>[8]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_HPME" name="HPME">
          <gui_name language="en">HPME</gui_name>
          <description language="en">Hypervisor Performance Monitors Enable.</description>
          <definition>[7]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TPM" name="TPM">
          <gui_name language="en">TPM</gui_name>
          <description language="en">Trap Performance Monitors accesses.</description>
          <definition>[6]</definition>
        </bitField>
        <bitField enumerationId="MDCR_EL2_TPMCR" name="TPMCR">
          <gui_name language="en">TPMCR</gui_name>
          <description language="en">Trap PMCR_EL0 or PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR_EL0 or PMCR to EL2.</description>
          <definition>[5]</definition>
        </bitField>
        <bitField name="HPMN">
          <gui_name language="en">HPMN</gui_name>
          <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL0 and EL1 modes.</description>
          <definition>[4:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-rmr_el2.html" name="RMR_EL2" size="4">
        <gui_name language="en">Reset Management Register (EL2)</gui_name>
        <description language="en">If EL2 is the highest implemented Exception level and this register is implemented...</description>
        <bitField name="RR">
          <gui_name language="en">RR</gui_name>
          <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="RMR_EL2_AA64" name="AA64">
          <gui_name language="en">AA64</gui_name>
          <description language="en">When EL2 can use AArch32, determines which Execution state the PE boots into after a Warm reset:</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sctlr_el2.html" name="SCTLR_EL2" size="4">
        <gui_name language="en">System Control Register (EL2)</gui_name>
        <description language="en">Provides top level control of the system, including its memory system, at EL2.</description>
        <bitField enumerationId="SCTLR_EL2_EE" name="EE">
          <gui_name language="en">EE</gui_name>
          <description language="en">Endianness of data accesses at EL2, stage 1 translation table walks in the EL2 translation regime, and stage 2 translation table walks in the EL1&amp;0 translation regime.</description>
          <definition>[25]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_WXN" name="WXN">
          <gui_name language="en">WXN</gui_name>
          <description language="en">Write permission implies XN (Execute-never). For the EL2 translation regime, this bit can force all memory regions that are writable to be treated as XN.</description>
          <definition>[19]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_I" name="I">
          <gui_name language="en">I</gui_name>
          <description language="en">Instruction access Cacheability control, for accesses at EL2:</description>
          <definition>[12]</definition>
        </bitField>
        <bitField name="SA">
          <gui_name language="en">SA</gui_name>
          <description language="en">SP Alignment check enable. When set to 1, if a load or store instruction executed at EL2 uses the SP as the base address and the SP is not aligned to a 16-byte boundary, then a SP alignment fault exception is generated. For more information, see .</description>
          <definition>[3]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_C" name="C">
          <gui_name language="en">C</gui_name>
          <description language="en">Cacheability control, for data accesses.</description>
          <definition>[2]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_A" name="A">
          <gui_name language="en">A</gui_name>
          <description language="en">Alignment check enable.</description>
          <definition>[1]</definition>
        </bitField>
        <bitField enumerationId="SCTLR_EL2_M" name="M">
          <gui_name language="en">M</gui_name>
          <description language="en">MMU enable for EL2 stage 1 address translation.</description>
          <definition>[0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tcr_el2.html" name="TCR_EL2" size="4">
        <gui_name language="en">Translation Control Register (EL2)</gui_name>
        <description language="en">The control register for stage 1 of the EL2 translation regime.</description>
        <bitField name="TBI">
          <gui_name language="en">TBI</gui_name>
          <description language="en">Additionally, this affects changes to the program counter, when TBI is 1, caused by:</description>
          <definition>[20]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_PS" name="PS">
          <gui_name language="en">PS</gui_name>
          <description language="en">Physical Address Size.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the TTBR0_EL2.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="TCR_EL2_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using TTBR0_EL2.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by TTBR0_EL2. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-tpidr_el2.html" name="TPIDR_EL2" size="8">
        <gui_name language="en">EL2 Software Thread ID Register</gui_name>
        <description language="en">Provides a location where software executing at EL2 can store thread identifying information, for OS management purposes...</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-ttbr0_el2.html" name="TTBR0_EL2" size="8">
        <gui_name language="en">Translation Table Base Register 0 (EL2)</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 1 of an address translation in the EL2 translation regime, and other information for this translation regime.</description>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vbar_el2.html" name="VBAR_EL2" size="8">
        <gui_name language="en">Vector Base Address Register (EL2)</gui_name>
        <description language="en">Holds the vector base address for any exception that is taken to EL2.</description>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vmpidr_el2.html" name="VMPIDR_EL2" size="8">
        <gui_name language="en">Virtualization Multiprocessor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Multiprocessor ID. This is the value returned by Non-secure EL1 reads of MPIDR_EL1.</description>
        <bitField name="Aff3">
          <gui_name language="en">Aff3</gui_name>
          <description language="en">Affinity level 3. Highest level affinity field.</description>
          <definition>[39:32]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_EL2_U" name="U">
          <gui_name language="en">U</gui_name>
          <description language="en">Indicates a Uniprocessor system, as distinct from PE 0 in a multiprocessor system.</description>
          <definition>[30]</definition>
        </bitField>
        <bitField enumerationId="VMPIDR_EL2_MT" name="MT">
          <gui_name language="en">MT</gui_name>
          <description language="en">Indicates whether the lowest level of affinity consists of logical PEs that are implemented using a multithreading type approach.</description>
          <definition>[24]</definition>
        </bitField>
        <bitField name="Aff2">
          <gui_name language="en">Aff2</gui_name>
          <description language="en">Affinity level 2. Second highest level affinity field.</description>
          <definition>[23:16]</definition>
        </bitField>
        <bitField name="Aff1">
          <gui_name language="en">Aff1</gui_name>
          <description language="en">Affinity level 1. Third highest level affinity field.</description>
          <definition>[15:8]</definition>
        </bitField>
        <bitField name="Aff0">
          <gui_name language="en">Aff0</gui_name>
          <description language="en">Affinity level 0. Lowest level affinity field.</description>
          <definition>[7:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vpidr_el2.html" name="VPIDR_EL2" size="4">
        <gui_name language="en">Virtualization Processor ID Register</gui_name>
        <description language="en">Holds the value of the Virtualization Processor ID. This is the value returned by Non-secure EL1 reads of MIDR_EL1.</description>
        <bitField name="Implementer">
          <gui_name language="en">Implementer</gui_name>
          <description language="en">The Implementer code. This field must hold an implementer code that has been assigned by ARM.</description>
          <definition>[31:24]</definition>
        </bitField>
        <bitField name="Variant">
          <gui_name language="en">Variant</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED variant number. Typically, this field is used to distinguish between different product variants, or major revisions of a product.</description>
          <definition>[23:20]</definition>
        </bitField>
        <bitField enumerationId="VPIDR_EL2_Architecture" name="Architecture">
          <gui_name language="en">Architecture</gui_name>
          <description language="en">The permitted values of this field are:</description>
          <definition>[19:16]</definition>
        </bitField>
        <bitField name="PartNum">
          <gui_name language="en">PartNum</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED primary part number for the device.</description>
          <definition>[15:4]</definition>
        </bitField>
        <bitField name="Revision">
          <gui_name language="en">Revision</gui_name>
          <description language="en">An IMPLEMENTATION DEFINED revision number for the device.</description>
          <definition>[3:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vtcr_el2.html" name="VTCR_EL2" size="4">
        <gui_name language="en">Virtualization Translation Control Register</gui_name>
        <description language="en">The control register for stage 2 of the EL1&amp;0 translation regime.</description>
        <bitField enumerationId="VTCR_EL2_PS" name="PS">
          <gui_name language="en">PS</gui_name>
          <description language="en">Physical Address Size.</description>
          <definition>[18:16]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_TG0" name="TG0">
          <gui_name language="en">TG0</gui_name>
          <description language="en">Granule size for the VTTBR_EL2.</description>
          <definition>[15:14]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_SH0" name="SH0">
          <gui_name language="en">SH0</gui_name>
          <description language="en">Shareability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[13:12]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_ORGN0" name="ORGN0">
          <gui_name language="en">ORGN0</gui_name>
          <description language="en">Outer cacheability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[11:10]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_IRGN0" name="IRGN0">
          <gui_name language="en">IRGN0</gui_name>
          <description language="en">Inner cacheability attribute for memory associated with translation table walks using VTTBR_EL2.</description>
          <definition>[9:8]</definition>
        </bitField>
        <bitField enumerationId="VTCR_EL2_SL0" name="SL0">
          <gui_name language="en">SL0</gui_name>
          <description language="en">Starting level of the VTCR_EL2 addressed region. The meaning of this field depends on the value of VTCR_EL2.TG0 (the granule size).</description>
          <definition>[7:6]</definition>
        </bitField>
        <bitField name="T0SZ">
          <gui_name language="en">T0SZ</gui_name>
          <description language="en">The size offset of the memory region addressed by VTTBR_EL2. The region size is 2^(64-T0SZ) bytes.</description>
          <definition>[5:0]</definition>
        </bitField>
      </register>
      <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-vttbr_el2.html" name="VTTBR_EL2" size="8">
        <gui_name language="en">Virtualization Translation Table Base Register</gui_name>
        <description language="en">Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the Non-secure EL1&amp;0 translation regime, and other information for this translation regime.</description>
        <bitField name="VMID">
          <gui_name language="en">VMID</gui_name>
          <description language="en">The VMID for the translation table.</description>
          <definition>[55:48]</definition>
        </bitField>
        <bitField name="BADDR">
          <gui_name language="en">BADDR</gui_name>
          <description language="en">Translation table base address, A[47:x] or A[51:x], bits[47:1].</description>
          <definition>[47:1]</definition>
        </bitField>
      </register>
    </register_group>


    <register_group xmlns="http://www.arm.com/core_reg" name="ImplementationDefined" xml:base="Registers/System/A35_AARCH64_ImpDef.xml">
      <gui_name language="en">Implementation Defined</gui_name>
      <description language="en">Implementation Defined</description>
      <register access="RW" name="L2CTLR_EL1" size="4">
        <gui_name language="en">L2 Control Register</gui_name>
        <description language="en">L2 Control Register.</description>
      </register>
      <register access="RW" name="L2ECTLR_EL1" size="4">
        <gui_name language="en">L2 Extended Control Register</gui_name>
        <description language="en">L2 Extended Control Register.</description>
      </register>
      <register access="RW" name="L2ACTLR_EL1" size="4">
        <gui_name language="en">L2 Auxiliary Control Register</gui_name>
        <description language="en">L2 Auxiliary Control Register.</description>
      </register>
      <register access="RO" name="CBAR_EL1" size="4">
        <gui_name language="en">Configuration Base Address Register</gui_name>
        <description language="en">Configuration Base Address Register.</description>
      </register>
      <register access="RW" name="CPUACTLR_EL1" size="8">
        <gui_name language="en">CPU Auxiliary Control Register</gui_name>
        <description language="en">CPU Auxiliary Control Register.</description>
      </register>
      <register access="RW" name="CPUECTLR_EL1" size="8">
        <gui_name language="en">CPU Extended Control Register</gui_name>
        <description language="en">CPU Extended Control Register.</description>
      </register>
      <register access="RW" name="L2MERRSR_EL1" size="8">
        <gui_name language="en">L2 Memory Error Syndrome Register</gui_name>
        <description language="en">L2 Memory Error Syndrome Register.</description>
      </register>
    </register_group>

    <!--   <xi:include href="Registers/System/A35_AARCH64_ImpDef.xml" xpointer="xmlns(namespace=http://com.arm.targetconfigurationeditor)xpointer(//namespace:enumeration)"/>-->
  </cr:register_list>
  <cache_awareness_list type="HARDWARE" core="Cortex-A35" cache_preservation_mode_available="true">
    <cache_awareness id="L1I" class="com.arm.debug.targetaccess.targetabstraction.cache.arm.v8a.a35.hw.A35L1ICache">
        </cache_awareness>
    <cache_awareness id="L1D" class="com.arm.debug.targetaccess.targetabstraction.cache.arm.v8a.a35.hw.A35L1DCache">
      <associated_cache id="L1D" scope="cluster"/>
    </cache_awareness>
  </cache_awareness_list>
  <cache_awareness_list type="FVP" core="Cortex-A35">
    <cache_awareness id="L1I" class="com.arm.debug.targetaccess.targetabstraction.cache.arm.v8a.fvp.L1ICache">
      <associated_cache id="L2"/>
    </cache_awareness>
    <cache_awareness id="L1D" class="com.arm.debug.targetaccess.targetabstraction.cache.arm.v8a.fvp.L1DCache">
      <associated_cache id="L1D" scope="cluster"/>
      <associated_cache id="L2"/>
    </cache_awareness>
    <cache_awareness id="L2" class="com.arm.debug.targetaccess.targetabstraction.cache.arm.v8a.fvp.L2Cache"/>
  </cache_awareness_list>
</core_definition>
