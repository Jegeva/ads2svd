<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--Copyright (C) 2009-2013 ARM Limited. All rights reserved.-->
<platform_data xmlns="http://www.arm.com/project_type" xmlns:peripheral="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="HARDWARE" xsi:schemaLocation="http://www.arm.com/project_type ../../../Schemas/platform_data-1.xsd">
    <project_type_list>

        <!-- Contents originally from ../../../Gdbserver/tcp_project_types_v5.xml, but needed filter tags adding -->
        <project_type type="GDB_SERVER">
            <name language="en">Linux Application Debug</name>
            <description language="en">This allows Linux application debug using gdbserver.</description>
            <execution_environment id="gdb_tcp">
                <name language="en">gdbserver (TCP)</name>
                <description language="en">Connect to a platform running gdbserver using a TCP connection.</description>
                <param default="" id="gdb_address" rvc_tag="host" type="string">
                    <name language="en">Address:</name>
                    <description language="en">Address of Target (TCP/IP).</description>
                </param>
                <param default="5000" id="gdb_port" rvc_tag="port" type="string">
                    <name language="en">Port:</name>
                    <description language="en">Debug Port on Target.</description>
                </param>
                <param default="True" id="gdb_disable_acks" type="string" visible="false"/>
                <config_file>gdbserver.xml</config_file>
                <xi:include href="../../../Gdbserver/symbols_glibc_2_10_1.xml"/>
                <activity id="DOWNLOAD_DEBUG" type="Debug">
                    <name language="en">Download and debug application</name>
                    <description language="en">Arm Debugger will download your application to the target system and then start a new gdbserver session to debug the application. This configuration requires ssh and gdbserver on the target platform. </description>
                    <core connection_id="0">
                        <core_definition>GDBServerPseudoCore_v5</core_definition>
                    </core>
                    <setup_script>
                        <name language="en">RSE://</name>
                    </setup_script>
                </activity>
                <activity id="DEBUG_RESIDENT_APP" type="Debug">
                    <name language="en">Start gdbserver and debug target resident application</name>
                    <description language="en">Arm Debugger will connect to the target and start a new gdbserver session to debug an application already present on the target system. This configuration requires ssh and gdbserver on the target platform. </description>
                    <core connection_id="0">
                        <core_definition>GDBServerPseudoCore_v5</core_definition>
                    </core>
                    <setup_script>
                        <name language="en">RSE://</name>
                    </setup_script>
                </activity>
                <activity id="CONNECT_TO_GDB_SERVER" type="Debug">
                    <name language="en">Connect to already running gdbserver</name>
                    <description language="en">Arm Debugger will connect to an already running gdbserver on the target system.</description>
                    <core connection_id="0">
                        <core_definition>GDBServerPseudoCore_v5</core_definition>
                    </core>
                </activity>
            </execution_environment>
        </project_type>
        <!-- end tcp_project_types_v5.xml -->

        <project_type type="BARE_METAL">
            <name language="en">Bare Metal Debug</name>
            <description language="en">This allows a bare-metal debug connection.</description>
            <execution_environment id="BARE_METAL">
                <name language="en">Bare Metal Debug</name>
                <description language="en">Connect to a platform using a DSTREAM/RVI</description>
                <param default="CDB://Freescale_Vybrid_A5_M4.rvc" id="config_file" type="string" visible="false"/>
                <param default="CDB://dtsl_config_script.py" id="dtsl_config_script" type="string" visible="false"/>
                <xi:include href="../../../Include/hardware_address.xml"/>
                <!-- DSTREAM -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- DSTREAM-ST -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-ST to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_st_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_ST" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-ST to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_st_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_ST" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- DSTREAM-PT -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-PT to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_pt_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_PT" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-PT to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_pt_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_PT" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- RVI -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a RealView ICE to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/rvi_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_RVI" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a RealView ICE to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/rvi_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_RVI" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- CMSIS-DAP -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect via CMSIS-DAP to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <connection_type language="en">CMSIS-DAP</connection_type>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_CMSIS" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <browse_script>
                        <name language="en">CDB://../../../Scripts/device_browser.py</name>
                        <arguments>--app=browse_cmsis_dap
                        </arguments>
                    </browse_script>
                    <setup_script>
                        <name>CDB://../../../Scripts/cmsis_dap_debug_server.py</name>
                        <arguments>CDB://rddi-dap_cfg-osda-cmsis-vybrid.txt</arguments>
                    </setup_script>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect via CMSIS-DAP to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <connection_type language="en">CMSIS-DAP</connection_type>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_CMSIS" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <browse_script>
                        <name language="en">CDB://../../../Scripts/device_browser.py</name>
                        <arguments>--app=browse_cmsis_dap
                        </arguments>
                    </browse_script>
                    <setup_script>
                        <name>CDB://../../../Scripts/cmsis_dap_debug_server.py</name>
                        <arguments>CDB://rddi-dap_cfg-osda-cmsis-vybrid.txt</arguments>
                    </setup_script>
                </activity>
                <!-- ULINKpro -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkpro_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKpro" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkpro_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkpro_setup_script.xml"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkpro_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKpro" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkpro_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkpro_setup_script.xml"/>
                </activity>
                <!-- ULINKpro D -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro D to debug a bare metal application.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkprod_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKproD" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkprod_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkprod_setup_script.xml"/>
                </activity>
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-M4</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro D to debug a bare metal application.
Note that if the Cortex-M4 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-A5 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkprod_connection_type.xml"/>
                    <core connection_id="Cortex-M4_0" core_ref="Cortex-M4" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKproD" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexM4.cortexM4coreTrace.M4traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkprod_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkprod_setup_script.xml"/>
                </activity>
            </execution_environment>
        </project_type>
        <project_type os_abstraction="LINUX_KERNEL" type="BARE_METAL">
            <name language="en">Linux Kernel and/or Device Driver Debug</name>
            <description language="en">This allows a bare metal debug connection for Linux kernel or Linux device driver debug.</description>
            <execution_environment id="bare_metal_linux_kernel_debug">
                <name language="en">Linux Kernel Debug</name>
                <description language="en">Connect to a platform using a DSTREAM/RVI</description>
                <param default="CDB://Freescale_Vybrid_A5_M4.rvc" id="config_file" type="string" visible="false"/>
                <param default="CDB://dtsl_config_script.py" id="dtsl_config_script" type="string" visible="false"/>
                <xi:include href="../../../Include/hardware_address.xml"/>
                <!-- DSTREAM -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- DSTREAM-ST -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-ST to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_st_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_ST" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- DSTREAM-PT -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a DSTREAM-PT to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/dstream_pt_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_DSTREAM_PT" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- RVI -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a RealView ICE to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/rvi_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_RVI" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                </activity>
                <!-- CMSIS-DAP -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect via CMSIS-DAP to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <connection_type language="en">CMSIS-DAP</connection_type>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_CMSIS" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <browse_script>
                        <name language="en">CDB://../../../Scripts/device_browser.py</name>
                        <arguments>--app=browse_cmsis_dap
                        </arguments>
                    </browse_script>
                    <setup_script>
                        <name>CDB://../../../Scripts/cmsis_dap_debug_server.py</name>
                        <arguments>CDB://rddi-dap_cfg-osda-cmsis-vybrid.txt</arguments>
                    </setup_script>
                </activity>
                <!-- ULINKpro -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkpro_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKpro" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkpro_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkpro_setup_script.xml"/>
                </activity>
                <!-- ULINKpro D -->
                <activity id="ICE_DEBUG" type="Debug">
                    <name language="en">Debug Cortex-A5</name>
                    <description language="en">Arm Debugger will connect to a ULINKpro D to debug a Linux kernel.
Note that if the Cortex-A5 is the secondary core, its clock must be enabled. Edit the DTSL Options to enable this if the software on the Cortex-M4 does not enable it.</description>
                    <xi:include href="../../../Include/ulinkprod_connection_type.xml"/>
                    <core connection_id="Cortex-A5_0" core_ref="Cortex-A5" soc="freescale/MVF61GS151MK50"/>
                    <param default="DtslScript_ULINKproD" id="dtsl_config" type="string" visible="false"/>
                    <param default="options.cortexA5.cortexA5coreTrace.A5traceCapture" id="dtsl_tracecapture_option" type="string" visible="false"/>
                    <xi:include href="../../../Include/ulinkprod_browse_script.xml"/>
                    <xi:include href="../../../Include/ulinkprod_setup_script.xml"/>
                </activity>
            </execution_environment>
        </project_type>
    </project_type_list>
</platform_data>