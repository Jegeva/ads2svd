<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<boards xmlns="http://com.arm.targetconfigurationeditor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://com.arm.targetconfigurationeditor ../../Schemas/board-01.xsd">
    <board endianess="little" name="zynq7000_core" power_domain_support="Unsupported" trustzone="Supported" type="BOARD">       
        <memory name="M_L2CACHE" offset="0xf8f02000" size="0x1000" tz_world="Non-Secure">
            <gui_name language="en">l2cache</gui_name>
            <description language="en">l2cache</description>
        </memory>
        <memory name="M_MPCORE" offset="0xf8f00000" size="0x2000" tz_world="Non-Secure">
            <gui_name language="en">mpcore</gui_name>
            <description language="en">mpcore</description>
        </memory>
        <peripheral address_type="Non-Secure" base_addr="M_L2CACHE" name="L2CACHE" offset="0xf8f02000">
            <gui_name language="en">l2cache</gui_name>
            <description language="en">l2cache</description>
            <register name="L2CACHE_REG0_CACHE_ID" offset="0xf8f02000" size="0x4">
                <gui_name language="en">reg0_cache_id</gui_name>
                <description language="en">cache ID register, Returns the 32-bit device ID code it reads off the CACHEID input bus.
The value is specified by the system integrator. Reset value: 0x410000c8</description>
                <bitField access="Read Only" high_bit="31" low_bit="24" name="implementer">
                    <gui_name language="en">implementer</gui_name>
                    <description language="en">0x41, ARM</description>
                </bitField>
                <bitField access="Read Only" high_bit="15" low_bit="10" name="cache_id">
                    <gui_name language="en">cache_id</gui_name>
                    <description language="en">cache id</description>
                </bitField>
                <bitField access="Read Only" high_bit="9" low_bit="6" name="part_num">
                    <gui_name language="en">part_num</gui_name>
                    <description language="en">part number</description>
                </bitField>
                <bitField access="Read Only" high_bit="5" low_bit="0" name="rtl_release">
                    <gui_name language="en">rtl_release</gui_name>
                    <description language="en">RTL release R3p2</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG0_CACHE_TYPE" offset="0xf8f02004" size="0x4">
                <gui_name language="en">reg0_cache_type</gui_name>
                <description language="en">cache type register, Returns the 32-bit cache type. Reset value: 0x1c100100</description>
                <bitField access="Read Only" enumerationId="reg0_cache_type_data_banking_ENUM" high_bit="31" low_bit="31" name="data_banking">
                    <gui_name language="en">data_banking</gui_name>
                    <description language="en">0 = Data banking not implemented.
1 = Data banking implemented.</description>
                </bitField>
                <bitField access="Read Only" high_bit="28" low_bit="25" name="ctype">
                    <gui_name language="en">ctype</gui_name>
                    <description language="en">11xy, where:
x=1 if pl310_LOCKDOWN_BY_MASTER is defined, otherwise 0
y=1 if pl310_LOCKDOWN_BY_LINE is defined, otherwise 0.</description>
                </bitField>
                <bitField access="Read Only" high_bit="24" low_bit="24" name="H">
                    <gui_name language="en">H</gui_name>
                    <description language="en">unified</description>
                </bitField>
                <bitField access="Read Write" high_bit="23" low_bit="23" name="Dsize_23">
                    <gui_name language="en">Dsize_23</gui_name>
                    <description language="en">fixed to 0</description>
                </bitField>
                <bitField access="Read Only" high_bit="22" low_bit="20" name="Dsize_mid">
                    <gui_name language="en">Dsize_mid</gui_name>
                    <description language="en">L2 cache way size Read from Auxiliary Control Register19 through 17</description>
                </bitField>
                <bitField access="Read Write" high_bit="19" low_bit="19" name="Dsize_19">
                    <gui_name language="en">Dsize_19</gui_name>
                    <description language="en">fixed to 0</description>
                </bitField>
                <bitField access="Read Only" high_bit="18" low_bit="18" name="L2_assoc_D">
                    <gui_name language="en">L2_assoc_D</gui_name>
                    <description language="en">Read from Auxiliary Control Register bit 16</description>
                </bitField>
                <bitField access="Read Only" high_bit="13" low_bit="12" name="l2cache_line_len_D">
                    <gui_name language="en">l2cache_line_len_D</gui_name>
                    <description language="en">L2 cache line length - 00-32 bytes</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="11" name="Isize_11">
                    <gui_name language="en">Isize_11</gui_name>
                    <description language="en">fixed to 0</description>
                </bitField>
                <bitField access="Read Only" high_bit="10" low_bit="8" name="Isize_mid">
                    <gui_name language="en">Isize_mid</gui_name>
                    <description language="en">L2 cache way size Read from Auxiliary Control Register[19:17]</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="7" name="Isize_7">
                    <gui_name language="en">Isize_7</gui_name>
                    <description language="en">fixed to 0</description>
                </bitField>
                <bitField access="Read Only" high_bit="6" low_bit="6" name="L2_assoc_I">
                    <gui_name language="en">L2_assoc_I</gui_name>
                    <description language="en">Read from Auxiliary Control Register bit 16</description>
                </bitField>
                <bitField access="Read Only" high_bit="1" low_bit="0" name="l2cache_line_len_I">
                    <gui_name language="en">l2cache_line_len_I</gui_name>
                    <description language="en">L2 cache line length - 00-32 bytes</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG1_CONTROL" offset="0xf8f02100" size="0x4">
                <gui_name language="en">reg1_control</gui_name>
                <description language="en">control register, reset value: 0x0</description>
                <bitField access="Read Write" enumerationId="reg1_control_l2_enable_ENUM" high_bit="0" low_bit="0" name="l2_enable">
                    <gui_name language="en">l2_enable</gui_name>
                    <description language="en">0 = L2 Cache is disabled. This is the default value.
1 = L2 Cache is enabled.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG1_AUX_CONTROL" offset="0xf8f02104" size="0x4">
                <gui_name language="en">reg1_aux_control</gui_name>
                <description language="en">auxilary control register, reset value: 0x02020000+H273</description>
                <bitField access="Read Write" enumerationId="reg1_aux_control_early_bresp_en_ENUM" high_bit="30" low_bit="30" name="early_bresp_en">
                    <gui_name language="en">early_bresp_en</gui_name>
                    <description language="en">Early BRESP enable
0 = Early BRESP disabled. This is the default.
1 = Early BRESP enabled.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_instr_prefetch_en_ENUM" high_bit="29" low_bit="29" name="instr_prefetch_en">
                    <gui_name language="en">instr_prefetch_en</gui_name>
                    <description language="en">Instruction prefetch enable
0 = Instruction prefetching disabled. This is the default.
1 = Instruction prefetching enabled.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_data_prefetch_en_ENUM" high_bit="28" low_bit="28" name="data_prefetch_en">
                    <gui_name language="en">data_prefetch_en</gui_name>
                    <description language="en">Data prefetch enable
0 = Data prefetching disabled. This is the default.
1 = Data prefetching enabled.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_nonsec_inte_access_ctrl_ENUM" high_bit="27" low_bit="27" name="nonsec_inte_access_ctrl">
                    <gui_name language="en">nonsec_inte_access_ctrl</gui_name>
                    <description language="en">Non-secure interrupt access control 0 = Interrupt Clear, 0x220, and Interrupt Mask, 0x214, can only be modified or read
with secure accesses. This is the default.
1 = Interrupt Clear, 0x220, and Interrupt Mask, 0x214, can be modified or read with
secure or non-secure accesses.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_nonsec_lockdown_en_ENUM" high_bit="26" low_bit="26" name="nonsec_lockdown_en">
                    <gui_name language="en">nonsec_lockdown_en</gui_name>
                    <description language="en">Non-secure lockdown enable
0 = Lockdown registers cannot be modified using non-secure accesses. This is the
default.
1 = Non-secure accesses can write to the lockdown registers.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_cache_replace_policy_ENUM" high_bit="25" low_bit="25" name="cache_replace_policy">
                    <gui_name language="en">cache_replace_policy</gui_name>
                    <description language="en">Cache replacement policy
0 = pseudo-random replacement using lfsr.
1 = round-robin replacement. This is the default.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_force_write_alloc_ENUM" high_bit="24" low_bit="23" name="force_write_alloc">
                    <gui_name language="en">force_write_alloc</gui_name>
                    <description language="en">Force write allocate
b00 = Use AWCACHE attributes for WA. This is the default.
b01 = Force no allocate, set WA bit always 0.
b10 = Override AWCACHE attributes, set WA bit always 1, all cacheable write
misses become write allocated.
b11 = Internally mapped to 00. See Cache operation on page 2-11 for more
information.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_shared_attr_override_en_ENUM" high_bit="22" low_bit="22" name="shared_attr_override_en">
                    <gui_name language="en">shared_attr_override_en</gui_name>
                    <description language="en">Shared attribute override enable
0 = Treats shared accesses as specified in Shareable attribute on page 2-15. This
is the default.
1 = Shared attribute internally ignored.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_parity_en_ENUM" high_bit="21" low_bit="21" name="parity_en">
                    <gui_name language="en">parity_en</gui_name>
                    <description language="en">Parity enable
0 = Disabled. This is the default.
1 = Enabled</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_event_mon_bus_en_ENUM" high_bit="20" low_bit="20" name="event_mon_bus_en">
                    <gui_name language="en">event_mon_bus_en</gui_name>
                    <description language="en">Event monitor bus enable
0 = Disabled. This is the default.
1 = Enabled</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_way_size_ENUM" high_bit="19" low_bit="17" name="way_size">
                    <gui_name language="en">way_size</gui_name>
                    <description language="en">Way-size
b000 = Reserved, internally mapped to 16KB.
b001 = 16KB.
b010 = 32KB.
b011 = 64KB.
b100 = 128KB.
b101 = 256KB.
b110 = 512KB.
b111 = Reserved, internally mapped to 512 KB.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_associativity_ENUM" high_bit="16" low_bit="16" name="associativity">
                    <gui_name language="en">associativity</gui_name>
                    <description language="en">Associativity
0 = 8-way.
1 = 16-way.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_shared_attr_inva_en_ENUM" high_bit="13" low_bit="13" name="shared_attr_inva_en">
                    <gui_name language="en">shared_attr_inva_en</gui_name>
                    <description language="en">Shared Attribute Invalidate
Enable 0 = Shared invalidate behavior disabled. This is the default.
1 = Shared invalidate behavior enabled, if Shared Attribute Override Enable bit
not set. See Shareable attribute on page 2-15.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_ex_cache_config_ENUM" high_bit="12" low_bit="12" name="ex_cache_config">
                    <gui_name language="en">ex_cache_config</gui_name>
                    <description language="en">Exclusive cache configuration
0 = Disabled. This is the default.
1 = Enabled,</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_store_buff_dev_lim_en_ENUM" high_bit="11" low_bit="11" name="store_buff_dev_lim_en">
                    <gui_name language="en">store_buff_dev_lim_en</gui_name>
                    <description language="en">Store buffer device limitation Enable
0 = Store buffer device limitation disabled. Device writes can take all slots in store
buffer. This is the default.
1= Store buffer device limitation enabled. Device writes cannot take all slots in
store buffer when connected to the Cortex-A9 MPCore processor. There is always
one available slot to service Normal Memory</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_high_pr_so_dev_rd_en_ENUM" high_bit="10" low_bit="10" name="high_pr_so_dev_rd_en">
                    <gui_name language="en">high_pr_so_dev_rd_en</gui_name>
                    <description language="en">High Priority for SO and Dev Reads Enable
0 = Strongly Ordered and Device reads have lower priority than cacheable
accesses when arbitrated in the L2CC (L2C-310) master ports. This is the default.
1 = Strongly Ordered and Device reads get the highest priority when arbitrated in
the L2CC (L2C-310) master ports.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_aux_control_full_line_zero_enable_ENUM" high_bit="0" low_bit="0" name="full_line_zero_enable">
                    <gui_name language="en">full_line_zero_enable</gui_name>
                    <description language="en">Full Line of Zero Enable
0 = Full line of write zero behavior disabled. This is the default.
1 = Full line of write zero behavior Enabled.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG1_TAG_RAM_CONTROL" offset="0xf8f02108" size="0x4">
                <gui_name language="en">reg1_tag_ram_control</gui_name>
                <description language="en">Configures Tag RAM latencies</description>
                <bitField access="Read Write" enumerationId="reg1_tag_ram_control_ram_wr_access_lat_ENUM" high_bit="10" low_bit="8" name="ram_wr_access_lat">
                    <gui_name language="en">ram_wr_access_lat</gui_name>
                    <description language="en">RAM write access latency Default value depends on the value of pl310_TAG_WRITE_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_tag_ram_control_ram_rd_access_lat_ENUM" high_bit="6" low_bit="4" name="ram_rd_access_lat">
                    <gui_name language="en">ram_rd_access_lat</gui_name>
                    <description language="en">RAM read access latency Default value depends on the value of pl310_TAG_READ_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_tag_ram_control_ram_setup_lat_ENUM" high_bit="2" low_bit="0" name="ram_setup_lat">
                    <gui_name language="en">ram_setup_lat</gui_name>
                    <description language="en">RAM setup latency Default value depends on the value of pl310_TAG_SETUP_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG1_DATA_RAM_CONTROL" offset="0xf8f0210c" size="0x4">
                <gui_name language="en">reg1_data_ram_control</gui_name>
                <description language="en">configures data RAM latencies</description>
                <bitField access="Read Write" enumerationId="reg1_data_ram_control_ram_wr_access_lat_ENUM" high_bit="10" low_bit="8" name="ram_wr_access_lat">
                    <gui_name language="en">ram_wr_access_lat</gui_name>
                    <description language="en">RAM write access latency Default value depends on the value of pl310_DATA_WRITE_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_data_ram_control_ram_rd_access_lat_ENUM" high_bit="6" low_bit="4" name="ram_rd_access_lat">
                    <gui_name language="en">ram_rd_access_lat</gui_name>
                    <description language="en">RAM read access latency Default value depends on the value of pl310_DATA_READ_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg1_data_ram_control_ran_setup_lat_ENUM" high_bit="2" low_bit="0" name="ran_setup_lat">
                    <gui_name language="en">ran_setup_lat</gui_name>
                    <description language="en">RAM setup latency Default value depends on the value of pl310_DATA_SETUP_LAT
b000 = 1 cycle of latency, there is no additional latency.
b001 = 2 cycles of latency.
b010 = 3 cycles of latency.
b011 = 4 cycles of latency.
b100 = 5 cycles of latency.
b101 = 6 cycles of latency.
b110 = 7 cycles of latency.
b111 = 8 cycles of latency.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_EV_COUNTER_CTRL" offset="0xf8f02200" size="0x4">
                <gui_name language="en">reg2_ev_counter_ctrl</gui_name>
                <description language="en">Permits the event counters to be enabled and reset.</description>
                <bitField access="Read Only" high_bit="2" low_bit="1" name="counter_reset">
                    <gui_name language="en">counter_reset</gui_name>
                    <description language="en">Always Read as zero. The following counters are reset when a 1 is written to the following bits:
bit[2] = Event Counter1 reset
bit[1] = Event Counter0 reset.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg2_ev_counter_ctrl_ev_ctr_en_ENUM" high_bit="0" low_bit="0" name="ev_ctr_en">
                    <gui_name language="en">ev_ctr_en</gui_name>
                    <description language="en">Event counter enable 0 = Event Counting Disable. This is the default.
1 = Event Counting Enable.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_EV_COUNTER1_CFG" offset="0xf8f02204" size="0x4">
                <gui_name language="en">reg2_ev_counter1_cfg</gui_name>
                <description language="en">Enables event counter 1 to be driven by a specific event. Counter 1
increments when the event occurs.</description>
                <bitField access="Read Write" enumerationId="reg2_ev_counter1_cfg_ctr_ev_src_ENUM" high_bit="5" low_bit="2" name="ctr_ev_src">
                    <gui_name language="en">ctr_ev_src</gui_name>
                    <description language="en">Counter event source Event Encoding
Counter Disabled b0000
CO b0001
DRHIT b0010
DRREQ b0011
DWHIT b0100
DWREQ b0101
DWTREQ b0110
IRHIT b0111
IRREQ b1000
WA b1001
IPFALLOC b1010
EPFHIT b1011
EPFALLOC b1100
SRRCVD b1101
SRCONF b1110
EPFRCVD b1111</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg2_ev_counter1_cfg_ev_ctr_intr_gen_ENUM" high_bit="1" low_bit="0" name="ev_ctr_intr_gen">
                    <gui_name language="en">ev_ctr_intr_gen</gui_name>
                    <description language="en">Event counter interrupt generation b00 = Disabled. This is the default.
b01 = Enabled: Increment condition.
b10 = Enabled: Overflow condition.
b11 = Interrupt generation is disabled.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_EV_COUNTER0_CFG" offset="0xf8f02208" size="0x4">
                <gui_name language="en">reg2_ev_counter0_cfg</gui_name>
                <description language="en">Enables event counter 0 to be driven by a specific event. Counter 0 increments when the event occurs.</description>
                <bitField access="Read Write" enumerationId="reg2_ev_counter0_cfg_ctr_ev_src_ENUM" high_bit="5" low_bit="2" name="ctr_ev_src">
                    <gui_name language="en">ctr_ev_src</gui_name>
                    <description language="en">Counter event source Event Encoding
Counter Disabled b0000
CO b0001
DRHIT b0010
DRREQ b0011
DWHIT b0100
DWREQ b0101
DWTREQ b0110
IRHIT b0111
IRREQ b1000
WA b1001
IPFALLOC b1010
EPFHIT b1011
EPFALLOC b1100
SRRCVD b1101
SRCONF b1110
EPFRCVD b1111</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg2_ev_counter0_cfg_ev_ctr_intr_gen_ENUM" high_bit="1" low_bit="0" name="ev_ctr_intr_gen">
                    <gui_name language="en">ev_ctr_intr_gen</gui_name>
                    <description language="en">Event counter interrupt generation b00 = Disabled. This is the default.
b01 = Enabled: Increment condition.
b10 = Enabled: Overflow condition.
b11 = Interrupt generation is disabled.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_EV_COUNTER1" offset="0xf8f0220c" size="0x4">
                <gui_name language="en">reg2_ev_counter1</gui_name>
                <description language="en">Enable the programmer to read off the counter value. The counter counts
an event as specified by the Counter Configuration Registers. The counter
can be preloaded if counting is disabled and reset by the Event Counter
Control Register.</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="counter_val">
                    <gui_name language="en">counter_val</gui_name>
                    <description language="en">Total of the event selected.
If a counter reaches its maximum value, it saturates at that value until it is reset.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_EV_COUNTER0" offset="0xf8f02210" size="0x4">
                <gui_name language="en">reg2_ev_counter0</gui_name>
                <description language="en">Enable the programmer to read off the counter value. The counter counts
an event as specified by the Counter Configuration Registers. The counter
can be preloaded if counting is disabled and reset by the Event Counter
Control Register.</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="counter_val">
                    <gui_name language="en">counter_val</gui_name>
                    <description language="en">Total of the event selected.
If a counter reaches its maximum value, it saturates at that value until it is reset.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_INT_MASK" offset="0xf8f02214" size="0x4">
                <gui_name language="en">reg2_int_mask</gui_name>
                <description language="en">This register enables or masks interrupts from being triggered on the
external pins of the cache controller. Figure 3-8 on page 3-17 shows the
register bit assignments. The bit assignments enables the masking of the
interrupts on both their individual outputs and the combined L2CCINTR
line. Clearing a bit by writing a 0, disables the interrupt triggering on that
pin. All bits are cleared by a reset. You must write to the register bits with a 1 to enable the generation of interrupts.
1 = Enabled.
0 = Masked. This is the default.</description>
                <bitField access="Read Write" high_bit="8" low_bit="8" name="DECERR">
                    <gui_name language="en">DECERR</gui_name>
                    <description language="en">DECERR: DECERR from L3</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="7" name="SLVERR">
                    <gui_name language="en">SLVERR</gui_name>
                    <description language="en">SLVERR: SLVERR from L3</description>
                </bitField>
                <bitField access="Read Write" high_bit="6" low_bit="6" name="ERRRD">
                    <gui_name language="en">ERRRD</gui_name>
                    <description language="en">ERRRD: Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="5" low_bit="5" name="ERRRT">
                    <gui_name language="en">ERRRT</gui_name>
                    <description language="en">ERRRT: Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="4" low_bit="4" name="ERRWD">
                    <gui_name language="en">ERRWD</gui_name>
                    <description language="en">ERRWD: Error on L2 data RAM, Write</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="3" name="ERRWT">
                    <gui_name language="en">ERRWT</gui_name>
                    <description language="en">ERRWT: Error on L2 tag RAM, Write</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="PARRD">
                    <gui_name language="en">PARRD</gui_name>
                    <description language="en">PARRD: Parity Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="1" low_bit="1" name="PARRT">
                    <gui_name language="en">PARRT</gui_name>
                    <description language="en">PARRT: Parity Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="ECNTR">
                    <gui_name language="en">ECNTR</gui_name>
                    <description language="en">ECNTR: Event Counter1/0 Overflow Increment</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_INT_MASK_STATUS" offset="0xf8f02218" size="0x4">
                <gui_name language="en">reg2_int_mask_status</gui_name>
                <description language="en">This register is a read-only.It returns the masked interrupt status. This
register can be accessed by secure and non-secure operations. The register
gives an AND function of the raw interrupt status with the values of the
interrupt mask register. All the bits are cleared by a reset. A write to this register is ignored. Bits read can be HIGH or LOW:
HIGH If the bits read HIGH, they reflect the status of the input lines triggering an interrupt.
LOW If the bits read LOW, either no interrupt has been
generated, or the interrupt is masked.</description>
                <bitField access="Read Only" high_bit="8" low_bit="8" name="DECERR">
                    <gui_name language="en">DECERR</gui_name>
                    <description language="en">DECERR: DECERR from L3</description>
                </bitField>
                <bitField access="Read Only" high_bit="7" low_bit="7" name="SLVERR">
                    <gui_name language="en">SLVERR</gui_name>
                    <description language="en">SLVERR: SLVERR from L3</description>
                </bitField>
                <bitField access="Read Only" high_bit="6" low_bit="6" name="ERRRD">
                    <gui_name language="en">ERRRD</gui_name>
                    <description language="en">ERRRD: Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="5" low_bit="5" name="ERRRT">
                    <gui_name language="en">ERRRT</gui_name>
                    <description language="en">ERRRT: Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="4" low_bit="4" name="ERRWD">
                    <gui_name language="en">ERRWD</gui_name>
                    <description language="en">ERRWD: Error on L2 data RAM, Write</description>
                </bitField>
                <bitField access="Read Only" high_bit="3" low_bit="3" name="ERRWT">
                    <gui_name language="en">ERRWT</gui_name>
                    <description language="en">ERRWT: Error on L2 tag RAM, Write</description>
                </bitField>
                <bitField access="Read Only" high_bit="2" low_bit="2" name="PARRD">
                    <gui_name language="en">PARRD</gui_name>
                    <description language="en">PARRD: Parity Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="1" low_bit="1" name="PARRT">
                    <gui_name language="en">PARRT</gui_name>
                    <description language="en">PARRT: Parity Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="0" low_bit="0" name="ECNTR">
                    <gui_name language="en">ECNTR</gui_name>
                    <description language="en">ECNTR: Event Counter1/0 Overflow Increment</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_INT_RAW_STATUS" offset="0xf8f0221c" size="0x4">
                <gui_name language="en">reg2_int_raw_status</gui_name>
                <description language="en">The Raw Interrupt Status Register enables the interrupt status that excludes the masking logic.
Bits read can be HIGH or LOW:
HIGH If the bits read HIGH, they reflect the status of the input lines triggering an interrupt.
LOW If the bits read LOW, no interrupt has been generated.</description>
                <bitField access="Read Only" high_bit="8" low_bit="8" name="DECERR">
                    <gui_name language="en">DECERR</gui_name>
                    <description language="en">DECERR: DECERR from L3</description>
                </bitField>
                <bitField access="Read Only" high_bit="7" low_bit="7" name="SLVERR">
                    <gui_name language="en">SLVERR</gui_name>
                    <description language="en">SLVERR: SLVERR from L3</description>
                </bitField>
                <bitField access="Read Only" high_bit="6" low_bit="6" name="ERRRD">
                    <gui_name language="en">ERRRD</gui_name>
                    <description language="en">ERRRD: Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="5" low_bit="5" name="ERRRT">
                    <gui_name language="en">ERRRT</gui_name>
                    <description language="en">ERRRT: Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="4" low_bit="4" name="ERRWD">
                    <gui_name language="en">ERRWD</gui_name>
                    <description language="en">ERRWD: Error on L2 data RAM, Write</description>
                </bitField>
                <bitField access="Read Only" high_bit="3" low_bit="3" name="ERRWT">
                    <gui_name language="en">ERRWT</gui_name>
                    <description language="en">ERRWT: Error on L2 tag RAM, Write</description>
                </bitField>
                <bitField access="Read Only" high_bit="2" low_bit="2" name="PARRD">
                    <gui_name language="en">PARRD</gui_name>
                    <description language="en">PARRD: Parity Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="1" low_bit="1" name="PARRT">
                    <gui_name language="en">PARRT</gui_name>
                    <description language="en">PARRT: Parity Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Only" high_bit="0" low_bit="0" name="ECNTR">
                    <gui_name language="en">ECNTR</gui_name>
                    <description language="en">ECNTR: Event Counter1/0 Overflow Increment</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG2_INT_CLEAR" offset="0xf8f02220" size="0x4">
                <gui_name language="en">reg2_int_clear</gui_name>
                <description language="en">Clears the Raw Interrupt Status Register bits.
When a bit is written as 1, it clears the corresponding bit in the Raw Interrupt Status Register. When a bit is written as 0, it has no effect</description>
                <bitField access="Read Write" high_bit="8" low_bit="8" name="DECERR">
                    <gui_name language="en">DECERR</gui_name>
                    <description language="en">DECERR: DECERR from L3</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="7" name="SLVERR">
                    <gui_name language="en">SLVERR</gui_name>
                    <description language="en">SLVERR: SLVERR from L3</description>
                </bitField>
                <bitField access="Read Write" high_bit="6" low_bit="6" name="ERRRD">
                    <gui_name language="en">ERRRD</gui_name>
                    <description language="en">ERRRD: Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="5" low_bit="5" name="ERRRT">
                    <gui_name language="en">ERRRT</gui_name>
                    <description language="en">ERRRT: Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="4" low_bit="4" name="ERRWD">
                    <gui_name language="en">ERRWD</gui_name>
                    <description language="en">ERRWD: Error on L2 data RAM, Write</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="3" name="ERRWT">
                    <gui_name language="en">ERRWT</gui_name>
                    <description language="en">ERRWT: Error on L2 tag RAM, Write</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="PARRD">
                    <gui_name language="en">PARRD</gui_name>
                    <description language="en">PARRD: Parity Error on L2 data RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="1" low_bit="1" name="PARRT">
                    <gui_name language="en">PARRT</gui_name>
                    <description language="en">PARRT: Parity Error on L2 tag RAM, Read</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="ECNTR">
                    <gui_name language="en">ECNTR</gui_name>
                    <description language="en">ECNTR: Event Counter1/0 Overflow Increment</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CACHE_SYNC" offset="0xf8f02730" size="0x4">
                <gui_name language="en">reg7_cache_sync</gui_name>
                <description language="en">Drain the STB. Operation complete when all buffers, LRB, LFB, STB, and EB, are empty</description>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">Cache Sync: Drain the STB. Operation complete when all buffers, LRB, LFB, STB, and EB, are empty.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_INV_PA" offset="0xf8f02770" size="0x4">
                <gui_name language="en">reg7_inv_pa</gui_name>
                <description language="en">Invalidate Line by PA: Specific L2 cache line is marked as not valid</description>
                <bitField access="Read Write" high_bit="31" low_bit="12" name="tag">
                    <gui_name language="en">tag</gui_name>
                    <description language="en">tag</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="5" name="index">
                    <gui_name language="en">index</gui_name>
                    <description language="en">index</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">C Flag
When written must be 0.
When read, indicates that a background operation is in progress</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_INV_WAY" offset="0xf8f0277c" size="0x4">
                <gui_name language="en">reg7_inv_way</gui_name>
                <description language="en">Invalidate by Way Invalidate all data in specified ways, including dirty data. An Invalidate by way while
selecting all cache ways is equivalent to invalidating all cache entries. Completes as a
background task with the way, or ways, locked, preventing allocation.</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="way_bits">
                    <gui_name language="en">way_bits</gui_name>
                    <description language="en">way bits: You can select multiple ways at the same time, by setting the Way bits to 1</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_PA" offset="0xf8f027b0" size="0x4">
                <gui_name language="en">reg7_clean_pa</gui_name>
                <description language="en">Clean Line by PA Write the specific L2 cache line to L3 main memory if the line is marked as valid and dirty.
The line is marked as not dirty. The valid bit is unchanged</description>
                <bitField access="Read Write" high_bit="31" low_bit="12" name="tag">
                    <gui_name language="en">tag</gui_name>
                    <description language="en">tag</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="5" name="index">
                    <gui_name language="en">index</gui_name>
                    <description language="en">index</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">C Flag
When written must be 0.
When read, indicates that a background operation is in progress</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_INDEX" offset="0xf8f027b8" size="0x4">
                <gui_name language="en">reg7_clean_index</gui_name>
                <description language="en">Clean Line by Set/Way Write the specific L2 cache line within the specified way to L3 main memory if the line is
marked as valid and dirty. The line is marked as not dirty. The valid bit is unchanged</description>
                <bitField access="Read Write" high_bit="30" low_bit="28" name="way">
                    <gui_name language="en">way</gui_name>
                    <description language="en">way</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="5" name="index">
                    <gui_name language="en">index</gui_name>
                    <description language="en">index</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">c</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_WAY" offset="0xf8f027bc" size="0x4">
                <gui_name language="en">reg7_clean_way</gui_name>
                <description language="en">Clean by Way Writes each line of the specified L2 cache ways to L3 main memory if the line is marked
as valid and dirty. The lines are marked as not dirty. The valid bits are unchanged.
Completes as a background task with the way, or ways, locked, preventing allocation.</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="way_bits">
                    <gui_name language="en">way_bits</gui_name>
                    <description language="en">way bits: You can select multiple ways at the same time, by setting the Way bits to 1</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_INV_PA" offset="0xf8f027f0" size="0x4">
                <gui_name language="en">reg7_clean_inv_pa</gui_name>
                <description language="en">Clean and Invalidate Line by PA Write the specific L2 cache line to L3 main memory if the line is marked as valid and dirty.
The line is marked as not valid</description>
                <bitField access="Read Write" high_bit="31" low_bit="12" name="tag">
                    <gui_name language="en">tag</gui_name>
                    <description language="en">tag</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="5" name="index">
                    <gui_name language="en">index</gui_name>
                    <description language="en">index</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">C Flag
When written must be 0.
When read, indicates that a background operation is in progress</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_INV_INDEX" offset="0xf8f027f8" size="0x4">
                <gui_name language="en">reg7_clean_inv_index</gui_name>
                <description language="en">Clean and Invalidate Line by Set/Way Write the specific L2 cache line within the specified way to L3 main memory if the line is
marked as valid and dirty. The line is marked as not valid</description>
                <bitField access="Read Write" high_bit="30" low_bit="28" name="way">
                    <gui_name language="en">way</gui_name>
                    <description language="en">way</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="5" name="index">
                    <gui_name language="en">index</gui_name>
                    <description language="en">index</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="c">
                    <gui_name language="en">c</gui_name>
                    <description language="en">c</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG7_CLEAN_INV_WAY" offset="0xf8f027fc" size="0x4">
                <gui_name language="en">reg7_clean_inv_way</gui_name>
                <description language="en">Clean and Invalidate by Way Writes each line of the specified L2 cache ways to L3 main memory if the line is marked
as valid and dirty. The lines are marked as not valid. Completes as a background task with
the way, or ways, locked, preventing allocation.</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="way_bits">
                    <gui_name language="en">way_bits</gui_name>
                    <description language="en">way bits: You can select multiple ways at the same time, by setting the Way bits to 1</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN0" offset="0xf8f02900" size="0x4">
                <gui_name language="en">reg9_d_lockdown0</gui_name>
                <description language="en">These registers can prevent new addresses from being allocated and can also prevent data from
being evicted out of the L2 cache. Such behavior can distinguish instructions from data
transactions.
To control the cache lockdown by way and the cache lockdown by master mechanisms see the
tables from Table 3-20 to Table 3-35 on page 3-31. For these tables each bit has the following
meaning:
0 allocation can occur in the corresponding way.
1 there is no allocation in the corresponding way.</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown0_DATALOCK000_ENUM" high_bit="15" low_bit="0" name="DATALOCK000">
                    <gui_name language="en">DATALOCK000</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 000</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN0" offset="0xf8f02904" size="0x4">
                <gui_name language="en">reg9_i_lockdown0</gui_name>
                <description language="en">instruction lock down 0</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown0_INSTRLOCK000_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK000">
                    <gui_name language="en">INSTRLOCK000</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 000</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN1" offset="0xf8f02908" size="0x4">
                <gui_name language="en">reg9_d_lockdown1</gui_name>
                <description language="en">data lock down 1</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown1_DATALOCK001_ENUM" high_bit="15" low_bit="0" name="DATALOCK001">
                    <gui_name language="en">DATALOCK001</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 001</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN1" offset="0xf8f0290c" size="0x4">
                <gui_name language="en">reg9_i_lockdown1</gui_name>
                <description language="en">instruction lock down 1</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown1_INSTRLOCK001_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK001">
                    <gui_name language="en">INSTRLOCK001</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 001</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN2" offset="0xf8f02910" size="0x4">
                <gui_name language="en">reg9_d_lockdown2</gui_name>
                <description language="en">data lock down 2</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown2_DATALOCK010_ENUM" high_bit="15" low_bit="0" name="DATALOCK010">
                    <gui_name language="en">DATALOCK010</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 010</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN2" offset="0xf8f02914" size="0x4">
                <gui_name language="en">reg9_i_lockdown2</gui_name>
                <description language="en">instruction lock down 2</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown2_INSTRLOCK010_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK010">
                    <gui_name language="en">INSTRLOCK010</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 010</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN3" offset="0xf8f02918" size="0x4">
                <gui_name language="en">reg9_d_lockdown3</gui_name>
                <description language="en">data lock down 3</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown3_DATALOCK011_ENUM" high_bit="15" low_bit="0" name="DATALOCK011">
                    <gui_name language="en">DATALOCK011</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 011</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN3" offset="0xf8f0291c" size="0x4">
                <gui_name language="en">reg9_i_lockdown3</gui_name>
                <description language="en">instruction lock down 3</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown3_INSTRLOCK011_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK011">
                    <gui_name language="en">INSTRLOCK011</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 011</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN4" offset="0xf8f02920" size="0x4">
                <gui_name language="en">reg9_d_lockdown4</gui_name>
                <description language="en">data lock down 4</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown4_DATALOCK100_ENUM" high_bit="15" low_bit="0" name="DATALOCK100">
                    <gui_name language="en">DATALOCK100</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 100</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN4" offset="0xf8f02924" size="0x4">
                <gui_name language="en">reg9_i_lockdown4</gui_name>
                <description language="en">instruction lock down 4</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown4_INSTRLOCK100_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK100">
                    <gui_name language="en">INSTRLOCK100</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 100</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN5" offset="0xf8f02928" size="0x4">
                <gui_name language="en">reg9_d_lockdown5</gui_name>
                <description language="en">data lock down 5</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown5_DATALOCK101_ENUM" high_bit="15" low_bit="0" name="DATALOCK101">
                    <gui_name language="en">DATALOCK101</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 101</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN5" offset="0xf8f0292c" size="0x4">
                <gui_name language="en">reg9_i_lockdown5</gui_name>
                <description language="en">instruction lock down 5</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown5_INSTRLOCK101_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK101">
                    <gui_name language="en">INSTRLOCK101</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 101</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN6" offset="0xf8f02930" size="0x4">
                <gui_name language="en">reg9_d_lockdown6</gui_name>
                <description language="en">data lock down 6</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown6_DATALOCK110_ENUM" high_bit="15" low_bit="0" name="DATALOCK110">
                    <gui_name language="en">DATALOCK110</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 110</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN6" offset="0xf8f02934" size="0x4">
                <gui_name language="en">reg9_i_lockdown6</gui_name>
                <description language="en">instruction lock down 6</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown6_INSTRLOCK110_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK110">
                    <gui_name language="en">INSTRLOCK110</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 110</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_D_LOCKDOWN7" offset="0xf8f02938" size="0x4">
                <gui_name language="en">reg9_d_lockdown7</gui_name>
                <description language="en">data lock down 7</description>
                <bitField access="Read Write" enumerationId="reg9_d_lockdown7_DATALOCK111_ENUM" high_bit="15" low_bit="0" name="DATALOCK111">
                    <gui_name language="en">DATALOCK111</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 111</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_I_LOCKDOWN7" offset="0xf8f0293c" size="0x4">
                <gui_name language="en">reg9_i_lockdown7</gui_name>
                <description language="en">instruction lock down 7</description>
                <bitField access="Read Write" enumerationId="reg9_i_lockdown7_INSTRLOCK111_ENUM" high_bit="15" low_bit="0" name="INSTRLOCK111">
                    <gui_name language="en">INSTRLOCK111</gui_name>
                    <description language="en">Use when AR/WUSERSx[7:5] = 111</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_LOCK_LINE_EN" offset="0xf8f02950" size="0x4">
                <gui_name language="en">reg9_lock_line_en</gui_name>
                <description language="en">Lockdown by Line Enable Register.</description>
                <bitField access="Read Write" enumerationId="reg9_lock_line_en_lock_down_by_line_enable_ENUM" high_bit="0" low_bit="0" name="lock_down_by_line_enable">
                    <gui_name language="en">lock_down_by_line_enable</gui_name>
                    <description language="en">0 = Lockdown by line disabled. This is the default.
1 = Lockdown by line enabled.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG9_UNLOCK_WAY" offset="0xf8f02954" size="0x4">
                <gui_name language="en">reg9_unlock_way</gui_name>
                <description language="en">Cache lockdown by way
To control the cache lockdown by way and the cache lockdown by master mechanisms see the
tables from Table 3-20 to Table 3-35 on page 3-31. For these tables each bit has the following
meaning:
0 allocation can occur in the corresponding way.
1 there is no allocation in the corresponding way.</description>
                <bitField access="Read Write" enumerationId="reg9_unlock_way_unlock_all_lines_by_way_operation_ENUM" high_bit="15" low_bit="0" name="unlock_all_lines_by_way_operation">
                    <gui_name language="en">unlock_all_lines_by_way_operation</gui_name>
                    <description language="en">For all bits:
0 = Unlock all lines disabled. This is the default.
1 = Unlock all lines operation in progress for the corresponding way.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG12_ADDR_FILTERING_START" offset="0xf8f02c00" size="0x4">
                <gui_name language="en">reg12_addr_filtering_start</gui_name>
                <description language="en">When two masters are implemented, you can redirect a whole address range to master 1 (M1).
When address_filtering_enable is set, all accesses with address &gt;= address_filtering_start and &lt;address_filtering_end are automatically directed to M1. All other accesses are directed to M0.
This feature is programmed using two registers.</description>
                <bitField access="Read Write" high_bit="31" low_bit="20" name="addr_filtering_start">
                    <gui_name language="en">addr_filtering_start</gui_name>
                    <description language="en">Address filtering start address.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg12_addr_filtering_start_addr_filtering_enable_ENUM" high_bit="0" low_bit="0" name="addr_filtering_enable">
                    <gui_name language="en">addr_filtering_enable</gui_name>
                    <description language="en">0 = Address filtering disabled.
1 = Address filtering enabled</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG12_ADDR_FILTERING_END" offset="0xf8f02c04" size="0x4">
                <gui_name language="en">reg12_addr_filtering_end</gui_name>
                <description language="en">When two masters are implemented, you can redirect a whole address range to master 1 (M1).
When address_filtering_enable is set, all accesses with address &gt;= address_filtering_start and &lt;address_filtering_end are automatically directed to M1. All other accesses are directed to M0.
This feature is programmed using two registers.</description>
                <bitField access="Read Write" high_bit="31" low_bit="20" name="addr_filtering_end">
                    <gui_name language="en">addr_filtering_end</gui_name>
                    <description language="en">Address filtering end address.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG15_DEBUG_CTRL" offset="0xf8f02f40" size="0x4">
                <gui_name language="en">reg15_debug_ctrl</gui_name>
                <description language="en">The Debug Control Register forces specific cache behavior required for debug. This register has
read-only, non-secure, or read and write, secure, permission. Any secure access and non-secure
access can read this register. Only a secure access can write to this register. If a non-secure
access tries to write to this register the register issues a DECERR response and does not update.</description>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="SPNIDEN">
                    <gui_name language="en">SPNIDEN</gui_name>
                    <description language="en">Reads value of SPNIDEN input.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_debug_ctrl_DWB_ENUM" high_bit="1" low_bit="1" name="DWB">
                    <gui_name language="en">DWB</gui_name>
                    <description language="en">DWB: Disable write-back, force WT 0 = Enable write-back behavior. This is the default.
1 = Force write-through behavior</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_debug_ctrl_DCL_ENUM" high_bit="0" low_bit="0" name="DCL">
                    <gui_name language="en">DCL</gui_name>
                    <description language="en">DCL: Disable cache linefill 0 = Enable cache linefills. This is the default.
1 = Disable cache linefills.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG15_PREFETCH_CTRL" offset="0xf8f02f60" size="0x4">
                <gui_name language="en">reg15_prefetch_ctrl</gui_name>
                <description language="en">Purpose Enables prefetch-related features that can improve system performance.
Usage constraints This register has both read-only, non-secure, and read and write, secure,
permissions. Any secure or non-secure access can read this register. Only
a secure access can write to this register. If a non-secure access attempts
to write to this register, the register</description>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_double_linefill_en_ENUM" high_bit="30" low_bit="30" name="double_linefill_en">
                    <gui_name language="en">double_linefill_en</gui_name>
                    <description language="en">Double linefill enable: You can set the following options for this register bit:
0 The L2CC always issues 4x64-bit read bursts to L3 on reads
that miss in the L2 cache. This is the default.
1 The L2CC issues 8x64-bit read bursts to L3 on reads that
miss in the L2 cache.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_inst_pref_en_ENUM" high_bit="29" low_bit="29" name="inst_pref_en">
                    <gui_name language="en">inst_pref_en</gui_name>
                    <description language="en">Instruction prefetch enable: You can set the following options for this register bit:
0 Instruction prefetching disabled. This is the default.
1 Instruction prefetching enabled</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_data_pref_en_ENUM" high_bit="28" low_bit="28" name="data_pref_en">
                    <gui_name language="en">data_pref_en</gui_name>
                    <description language="en">Data prefetch enable: You can set the following options for this register bit:
0 Data prefetching disabled. This is the default.
1 Data prefetching enabled.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_double_linefill_on_wrapread_en_ENUM" high_bit="27" low_bit="27" name="double_linefill_on_wrapread_en">
                    <gui_name language="en">double_linefill_on_wrapread_en</gui_name>
                    <description language="en">Double linefill on WRAP read disable: You can set the following options for this register bit:
0 Double linefill on WRAP read enabled. This is the default.
1 Double linefill on WRAP read disabled</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_pref_drop_en_ENUM" high_bit="24" low_bit="24" name="pref_drop_en">
                    <gui_name language="en">pref_drop_en</gui_name>
                    <description language="en">Prefetch drop enable: You can set the following options for this register bit:
0 The L2CC does not discard prefetch reads issued to L3. This
is the default.
1 The L2CC discards prefetch reads issued to L3 when there is
a resource conflict with explicit reads.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_incr_double_linefill_en_ENUM" high_bit="23" low_bit="23" name="incr_double_linefill_en">
                    <gui_name language="en">incr_double_linefill_en</gui_name>
                    <description language="en">Incr double Linefill enable: You can set the following options for this register bit:
0 The L2CC does not issue INCR 8x64-bit read bursts to L3 on
reads that miss in the L2 cache. This is the default.
1 The L2CC can issue INCR 8x64-bit read bursts to L3 on
reads that miss in the L2 cache.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_prefetch_ctrl_not_same_id_on_excl_seq_en_ENUM" high_bit="21" low_bit="21" name="not_same_id_on_excl_seq_en">
                    <gui_name language="en">not_same_id_on_excl_seq_en</gui_name>
                    <description language="en">Not same ID on exclusive sequence enable: You can set the following options for this register bit:
0 Read and write portions of a non-cacheable exclusive
sequence have the same AXI ID when issued to L3. This is
the default.
1 Read and write portions of a non-cacheable exclusive
sequence do not have the same AXI ID when issued to L3.</description>
                </bitField>
                <bitField access="Read Write" high_bit="4" low_bit="0" name="prefetch_offset">
                    <gui_name language="en">prefetch_offset</gui_name>
                    <description language="en">Default = b00000.</description>
                </bitField>
            </register>
            <register name="L2CACHE_REG15_POWER_CTRL" offset="0xf8f02f80" size="0x4">
                <gui_name language="en">reg15_power_ctrl</gui_name>
                <description language="en">Purpose Controls the operating mode clock and power modes.
Usage constraints There are no usage constraints.</description>
                <bitField access="Read Write" enumerationId="reg15_power_ctrl_dynamic_clk_gating_en_ENUM" high_bit="1" low_bit="1" name="dynamic_clk_gating_en">
                    <gui_name language="en">dynamic_clk_gating_en</gui_name>
                    <description language="en">Dynamic clock gating enable.
1 = Enabled.
0 = Masked. This is the default.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="reg15_power_ctrl_standby_mode_en_ENUM" high_bit="0" low_bit="0" name="standby_mode_en">
                    <gui_name language="en">standby_mode_en</gui_name>
                    <description language="en">Standby mode enable.
1 = Enabled.
0 = Masked. This is the default</description>
                </bitField>
            </register>
        </peripheral>        
        <peripheral address_type="Non-Secure" base_addr="M_MPCORE" name="MPCORE" offset="0xf8f00000">
            <gui_name language="en">mpcore</gui_name>
            <description language="en">mpcore</description>
            <register name="MPCORE_SCU_CONTROL_REGISTER" offset="0xf8f00000" size="0x4">
                <gui_name language="en">SCU_CONTROL_REGISTER</gui_name>
                <description language="en">SCU Control Register</description>
                <bitField access="Read Write" high_bit="6" low_bit="6" name="IC_standby_enable">
                    <gui_name language="en">IC_standby_enable</gui_name>
                    <description language="en">When set, this stops the Interrupt Controller clock when no interrupts are pending, and no CPU is performing a read/write request.</description>
                </bitField>
                <bitField access="Read Write" high_bit="5" low_bit="5" name="SCU_standby_enable">
                    <gui_name language="en">SCU_standby_enable</gui_name>
                    <description language="en">When set, SCU CLK is turned off when all processors are in WFI mode,
there is no pending request on the ACP (if implemented), and there is no
remaining activity in the SCU.
When SCU CLK is off, ARREADYS, AWREADYS and WREADYS on
the ACP are forced LOW. The clock is turned on when any processor
leaves WFI mode, or if there is a new request on the ACP.</description>
                </bitField>
                <bitField access="Read Write" high_bit="4" low_bit="4" name="Force_all_Device_to_port0_enable">
                    <gui_name language="en">Force_all_Device_to_port0_enable</gui_name>
                    <description language="en">When set, all requests from the ACP or processors with AxCACHE =
NonCacheable Bufferable are forced to be issued on the AXI Master port
M0.</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="3" name="SCU_Speculative_linefills_enable">
                    <gui_name language="en">SCU_Speculative_linefills_enable</gui_name>
                    <description language="en">When set, coherent linefill requests are sent speculatively to the L2C-310
in parallel with the tag look-up. If the tag look-up misses, the confirmed
linefill is sent to the L2C-310 and gets RDATA earlier because the data
request was already initiated by the speculative request. This feature works
only if the L2C-310 is present in the design.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_CONTROL_REGISTER_SCU_RAMs_Parity_enable_ENUM" high_bit="2" low_bit="2" name="SCU_RAMs_Parity_enable">
                    <gui_name language="en">SCU_RAMs_Parity_enable</gui_name>
                    <description language="en">1 = Parity on.
0 = Parity off. This is the default setting.
This bit is always zero if support for parity is not implemented.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_CONTROL_REGISTER_Address_filtering_enable_ENUM" high_bit="1" low_bit="1" name="Address_filtering_enable">
                    <gui_name language="en">Address_filtering_enable</gui_name>
                    <description language="en">1 = Addressing filtering on.
0 = Addressing filtering off.
The default value is the value of FILTEREN sampled when nSCURESET
is deasserted.
This bit is always zero if the SCU is implemented in the single master port
configuration.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_CONTROL_REGISTER_SCU_enable_ENUM" high_bit="0" low_bit="0" name="SCU_enable">
                    <gui_name language="en">SCU_enable</gui_name>
                    <description language="en">1 = SCU enable.
0 = SCU disable. This is the default setting</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_SCU_CONFIGURATION_REGISTER" offset="0xf8f00004" size="0x4">
                <gui_name language="en">SCU_CONFIGURATION_REGISTER</gui_name>
                <description language="en">SCU Configuration Register</description>
                <bitField access="Read Only" enumerationId="SCU_CONFIGURATION_REGISTER_Tag_RAM_sizes_ENUM" high_bit="15" low_bit="8" name="Tag_RAM_sizes">
                    <gui_name language="en">Tag_RAM_sizes</gui_name>
                    <description language="en">Bits [15:14] indicate Cortex-A9 processor CPU3 tag RAM size if present.
Bits [13:12] indicate Cortex-A9 processor CPU2 tag RAM size if present.
Bits [11:10] indicate Cortex-A9 processor CPU1 tag RAM size if present.
Bits [9:8] indicate Cortex-A9 processor CPU0 tag RAM size.
The encoding is as follows:
b11 = reserved
b10 = 64KB cache, 256 indexes per tag RAM
b01 = 32KB cache, 128 indexes per tag RAM
b00 = 16KB cache, 64 indexes per tag RAM.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="SCU_CONFIGURATION_REGISTER_CPUs_SMP_ENUM" high_bit="7" low_bit="4" name="CPUs_SMP">
                    <gui_name language="en">CPUs_SMP</gui_name>
                    <description language="en">Shows the Cortex-A9 processors that are in Symmetric Multi-processing (SMP) or
Asymmetric Multi-processing (AMP) mode.
0 = this Cortex-A9 processor is in AMP mode not taking part in coherency or not present.
1 = this Cortex-A9 processor is in SMP mode taking part in coherency.
Bit 7 is for CPU3
Bit 6 is for CPU2
Bit 5 is for CPU1
Bit 4 is for CPU0.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="SCU_CONFIGURATION_REGISTER_CPU_number_ENUM" high_bit="1" low_bit="0" name="CPU_number">
                    <gui_name language="en">CPU_number</gui_name>
                    <description language="en">Number of CPUs present in the Cortex-A9 MPCore processor
b11 = four Cortex-A9 processors, CPU0, CPU1, CPU2, and CPU3
b10 = three Cortex-A9 processors, CPU0, CPU1, and CPU2
b01 = two Cortex-A9 processors, CPU0 and CPU1
b00 = one Cortex-A9 processor, CPU0.</description>
                </bitField>
            </register>
            <register name="MPCORE_SCU_CPU_POWER_STATUS_REGISTER" offset="0xf8f00008" size="0x4">
                <gui_name language="en">SCU_CPU_Power_Status_Register</gui_name>
                <description language="en">SCU CPU Power Status Register</description>
                <bitField access="Read Write" enumerationId="SCU_CPU_Power_Status_Register_CPU3_status_ENUM" high_bit="25" low_bit="24" name="CPU3_status">
                    <gui_name language="en">CPU3_status</gui_name>
                    <description language="en">Power status of the Cortex-A9 processor:
b00: Normal mode.
b01: Reserved.
b10: the Cortex-A9 processor is about to enter (or is in) dormant mode. No coherency
request is sent to the Cortex-A9 processor.
b11: the Cortex-A9 processor is about to enter (or is in) powered-off mode, or is nonpresent.
No coherency request is sent to the Cortex-A9 processor.</description>
                </bitField>
                <bitField access="Read Write" high_bit="17" low_bit="16" name="CPU2_status">
                    <gui_name language="en">CPU2_status</gui_name>
                    <description language="en">Power status of the Cortex-A9 processor</description>
                </bitField>
                <bitField access="Read Write" high_bit="9" low_bit="8" name="CPU1_status">
                    <gui_name language="en">CPU1_status</gui_name>
                    <description language="en">Power status of the Cortex-A9 processor</description>
                </bitField>
                <bitField access="Read Write" high_bit="1" low_bit="0" name="CPU0_status">
                    <gui_name language="en">CPU0_status</gui_name>
                    <description language="en">Power status of the Cortex-A9 processor</description>
                </bitField>
            </register>
            <register name="MPCORE_SCU_INVALIDATE_ALL_REGISTERS_IN_SECURE_STATE" offset="0xf8f0000c" size="0x4">
                <gui_name language="en">SCU_Invalidate_All_Registers_in_Secure_State</gui_name>
                <description language="en">SCU Invalidate All Registers in
Secure State</description>
                <bitField access="Read Write" high_bit="31" low_bit="16" name="NA">
                    <gui_name language="en">NA</gui_name>
                    <description language="en">NA</description>
                </bitField>
                <bitField access="Read Write" high_bit="15" low_bit="12" name="CPU3_ways">
                    <gui_name language="en">CPU3_ways</gui_name>
                    <description language="en">Specifies the ways that must be invalidated for CPU3. Writing to these bits has no effect if the
Cortex-A9 MPCore processor has fewer than four processors.</description>
                </bitField>
                <bitField access="Read Write" high_bit="11" low_bit="8" name="CPU2_ways">
                    <gui_name language="en">CPU2_ways</gui_name>
                    <description language="en">Specifies the ways that must be invalidated for CPU2. Writing to these bits has no effect if the
Cortex-A9 MPCore processor has fewer than three processors</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="4" name="CPU1_ways">
                    <gui_name language="en">CPU1_ways</gui_name>
                    <description language="en">Specifies the ways that must be invalidated for CPU1. Writing to these bits has no effect if the
Cortex-A9 MPCore processor has fewer than two processors.</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="0" name="CPU0_ways">
                    <gui_name language="en">CPU0_ways</gui_name>
                    <description language="en">Specifies the ways that must be invalidated for CPU0</description>
                </bitField>
            </register>
            <register name="MPCORE_FILTERING_START_ADDRESS_REGISTER" offset="0xf8f00040" size="0x4">
                <gui_name language="en">Filtering_Start_Address_Register</gui_name>
                <description language="en">Filtering Start Address Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="20" name="Filtering_start_address">
                    <gui_name language="en">Filtering_start_address</gui_name>
                    <description language="en">Start address for use with master port 1 in a two-master port configuration when
address filtering is enabled.
The default value is the value of FILTERSTART sampled on exit from reset. The
value on the pin gives the upper address bits with 1MB granularity.</description>
                </bitField>
                <bitField access="Read Write" high_bit="19" low_bit="0" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
            </register>
            <register name="MPCORE_FILTERING_END_ADDRESS_REGISTER" offset="0xf8f00044" size="0x4">
                <gui_name language="en">Filtering_End_Address_Register</gui_name>
                <description language="en">Defined by FILTEREND input</description>
                <bitField access="Read Write" high_bit="31" low_bit="20" name="Filtering_end_address">
                    <gui_name language="en">Filtering_end_address</gui_name>
                    <description language="en">End address for use with master port 1 in a two-master port configuration, when
address filtering is enabled.
The default value is the value of FILTEREND sampled on exit from reset. The value
on the pin gives the upper address bits with 1MB granularity.</description>
                </bitField>
                <bitField access="Read Write" high_bit="19" low_bit="0" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
            </register>
            <register name="MPCORE_SCU_ACCESS_CONTROL_REGISTER_SAC" offset="0xf8f00050" size="0x4">
                <gui_name language="en">SCU_Access_Control_Register_SAC</gui_name>
                <description language="en">SCU Access Control (SAC) Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="4" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_Access_Control_Register_SAC_CPU3_ENUM" high_bit="3" low_bit="3" name="CPU3">
                    <gui_name language="en">CPU3</gui_name>
                    <description language="en">0 = CPU3 cannot access the components.
1 = CPU3 can access the components. This is the default.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_Access_Control_Register_SAC_CPU2_ENUM" high_bit="2" low_bit="2" name="CPU2">
                    <gui_name language="en">CPU2</gui_name>
                    <description language="en">0 = CPU2 cannot access the components.
1 = CPU2 can access the components. This is the default.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_Access_Control_Register_SAC_CPU1_ENUM" high_bit="1" low_bit="1" name="CPU1">
                    <gui_name language="en">CPU1</gui_name>
                    <description language="en">0 = CPU1 cannot access the components.
1 = CPU1 can access the components. This is the default.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="SCU_Access_Control_Register_SAC_CPU0_ENUM" high_bit="0" low_bit="0" name="CPU0">
                    <gui_name language="en">CPU0</gui_name>
                    <description language="en">0 = CPU0 cannot access the components.
1 = CPU0 can access the components. This is the default.</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_SCU_NON_SECURE_ACCESS_CONTROL_REGISTER" offset="0xf8f00054" size="0x4">
                <gui_name language="en">SCU_Non_secure_Access_Control_Register</gui_name>
                <description language="en">SCU Non-secure Access Control Register
SNSAC</description>
                <bitField access="Read Only" high_bit="31" low_bit="12" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
                <bitField access="Read Only" high_bit="11" low_bit="11" name="CPU3_global_timer">
                    <gui_name language="en">CPU3_global_timer</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="10" low_bit="10" name="CPU2_global_timer">
                    <gui_name language="en">CPU2_global_timer</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="9" low_bit="9" name="CPU1_global_timer">
                    <gui_name language="en">CPU1_global_timer</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" enumerationId="SCU_Non_secure_Access_Control_Register_CPU0_global_timer_ENUM" high_bit="8" low_bit="8" name="CPU0_global_timer">
                    <gui_name language="en">CPU0_global_timer</gui_name>
                    <description language="en">Non-secure access to the global timer for CPU&lt;n&gt;.
* &lt;n&gt; is 3 for bit[11]
* &lt;n&gt; is 2 for bit[10]
* &lt;n&gt; is 1 for bit[9]
* &lt;n&gt; is 0 for bit[8].
0 = Secure accesses only. This is the default value.
1 = Secure accesses and Non-Secure accesses.</description>
                </bitField>
                <bitField access="Read Only" high_bit="7" low_bit="7" name="Private_timers_for_CPU3">
                    <gui_name language="en">Private_timers_for_CPU3</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="6" low_bit="6" name="Private_timers_for_CPU2">
                    <gui_name language="en">Private_timers_for_CPU2</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="5" low_bit="5" name="Private_timers_for_CPU1">
                    <gui_name language="en">Private_timers_for_CPU1</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" enumerationId="SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU0_ENUM" high_bit="4" low_bit="4" name="Private_timers_for_CPU0">
                    <gui_name language="en">Private_timers_for_CPU0</gui_name>
                    <description language="en">Non-secure access to the private timer and watchdog for CPU&lt;n&gt;.
* &lt;n&gt; is 3 for bit[7]
* &lt;n&gt; is 2 for bit[6]]
* &lt;n&gt; is 1 for bit[5]
* &lt;n&gt; is 0 for bit[4].
0 = Secure accesses only. Non-secure reads return 0. This is the default value.
1 = Secure accesses and Non-secure accesses.</description>
                </bitField>
                <bitField access="Read Only" high_bit="3" low_bit="3" name="Component_access_for_CPU3">
                    <gui_name language="en">Component_access_for_CPU3</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="2" low_bit="2" name="Component_access_for_CPU2">
                    <gui_name language="en">Component_access_for_CPU2</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" high_bit="1" low_bit="1" name="Component_access_for_CPU1">
                    <gui_name language="en">Component_access_for_CPU1</gui_name>
                    <description language="en">same as above</description>
                </bitField>
                <bitField access="Read Only" enumerationId="SCU_Non_secure_Access_Control_Register_Component_access_for_CPU0_ENUM" high_bit="0" low_bit="0" name="Component_access_for_CPU0">
                    <gui_name language="en">Component_access_for_CPU0</gui_name>
                    <description language="en">Non-secure access to the components for CPU&lt;n&gt;.
* &lt;n&gt; is 3 for bit[3]
* &lt;n&gt; is 2 for bit[2]]
* &lt;n&gt; is 1 for bit[1]
* &lt;n&gt; is 0 for bit[0].
0 = CPU cannot write the componentsa
1 = CPU can access the componentsa.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCPMR" offset="0xf8f00104" size="0x4">
                <gui_name language="en">ICCPMR</gui_name>
                <description language="en">Interrupt Priority Mask Register</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The priority mask level for the CPU interface.
If the priority of an interrupt is higher than the value indicated by this field, the interface signals the interrupt to the processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCBPR" offset="0xf8f00108" size="0x4">
                <gui_name language="en">ICCBPR</gui_name>
                <description language="en">Binary Point Register</description>
                <bitField access="Read Write" high_bit="2" low_bit="0" name="Binary_point">
                    <gui_name language="en">Binary_point</gui_name>
                    <description language="en">The value of this field controls thow the 8-bit interrupt priority field is split into a group priority field, used to determine interrupt preemptioin, and a subpriority field.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCIAR" offset="0xf8f0010c" size="0x4">
                <gui_name language="en">ICCIAR</gui_name>
                <description language="en">Interrupt Acknowledge Register</description>
                <bitField access="Read Write" high_bit="12" low_bit="10" name="CPUID">
                    <gui_name language="en">CPUID</gui_name>
                    <description language="en">Identifies the processor that requested the interrupt.
Returens the number of the CPU interface that made the request.</description>
                </bitField>
                <bitField access="Read Write" high_bit="9" low_bit="0" name="ACKINTID">
                    <gui_name language="en">ACKINTID</gui_name>
                    <description language="en">The interrupt ID.
This read acts as an acknowledge for the interrupt.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCEOIR" offset="0xf8f00110" size="0x4">
                <gui_name language="en">ICCEOIR</gui_name>
                <description language="en">End Of Interrupt Register</description>
                <bitField access="Read Write" high_bit="12" low_bit="10" name="CPUID">
                    <gui_name language="en">CPUID</gui_name>
                    <description language="en">On completion of the processing of an SGI, this field contains the CPUID value from the corresponding ICCIAR access.</description>
                </bitField>
                <bitField access="Read Write" high_bit="9" low_bit="0" name="EOIINTID">
                    <gui_name language="en">EOIINTID</gui_name>
                    <description language="en">The ACKINTID value from the corresponding ICCIAR access.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCRPR" offset="0xf8f00114" size="0x4">
                <gui_name language="en">ICCRPR</gui_name>
                <description language="en">Running Priority Register</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The priority value of the highest priority intrerrupt that is active on the CPU itnerface.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCHPIR" offset="0xf8f00118" size="0x4">
                <gui_name language="en">ICCHPIR</gui_name>
                <description language="en">Highest Pending Interrupt Register</description>
                <bitField access="Read Write" high_bit="12" low_bit="10" name="CPUID">
                    <gui_name language="en">CPUID</gui_name>
                    <description language="en">If the PENDINTID field returns the ID of an SGI, this field contatins the CPUID value for that interrupt.
The identifies the processor that generated the itnerrupt.</description>
                </bitField>
                <bitField access="Read Write" high_bit="9" low_bit="0" name="PENDINTID">
                    <gui_name language="en">PENDINTID</gui_name>
                    <description language="en">The interrupt ID of the highest priority pending interrupt.</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_ICCIDR" offset="0xf8f001fc" size="0x4">
                <gui_name language="en">ICCIDR</gui_name>
                <description language="en">CPU Interface Implementer Identification Register</description>
                <bitField access="Read Only" high_bit="31" low_bit="20" name="Part_number">
                    <gui_name language="en">Part_number</gui_name>
                    <description language="en">Identifies the peripheral</description>
                </bitField>
                <bitField access="Read Only" high_bit="19" low_bit="16" name="Architecture_version">
                    <gui_name language="en">Architecture_version</gui_name>
                    <description language="en">Identifies the architecture version</description>
                </bitField>
                <bitField access="Read Only" high_bit="15" low_bit="12" name="Revision_number">
                    <gui_name language="en">Revision_number</gui_name>
                    <description language="en">Returns the revision number of the Interrupt Controller. The implementer defines the
format of this field.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICCIDR_Implementer_ENUM" high_bit="11" low_bit="0" name="Implementer">
                    <gui_name language="en">Implementer</gui_name>
                    <description language="en">Returns the JEP106 code of the company that implemented the Cortex-A9 processor
interface RTL. It uses the following construct:
[11:8] the JEP106 continuation code of the implementer
[7] 0
[6:0] the JEP106 code [6:0] of the implementer</description>
                </bitField>
            </register>
            <register name="MPCORE_GLOBAL_TIMER_COUNTER_REGISTER0" offset="0xf8f00200" size="0x4">
                <gui_name language="en">Global_Timer_Counter_Register0</gui_name>
                <description language="en">Global Timer Counter Register 0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">There are two timer counter registers. They are the lower 32-bit timer counter at offset
0x00 and the upper 32-bit timer counter at offset 0x04.
You must access these registers with 32-bit accesses. You cannot use STRD/LDRD.
To modify the register proceed as follows:
1. Clear the timer enable bit in the Global Timer Control Register
2. Write the lower 32-bit timer counter register
3. Write the upper 32-bit timer counter register
4. Set the timer enable bit.
To get the value from the Global Timer Counter register proceed as follows:
1. Read the upper 32-bit timer counter register
2. Read the lower 32-bit timer counter register
3. Read the upper 32-bit timer counter register again. If the value is different to the
32-bit upper value read previously, go back to step 2. Otherwise the 64-bit timer
counter value is correct.</description>
                </bitField>
            </register>
            <register name="MPCORE_GLOBAL_TIMER_COUNTER_REGISTER1" offset="0xf8f00204" size="0x4">
                <gui_name language="en">Global_Timer_Counter_Register1</gui_name>
                <description language="en">Global Timer Counter Register 1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">There are two timer counter registers. They are the lower 32-bit timer counter at offset
0x00 and the upper 32-bit timer counter at offset 0x04.
You must access these registers with 32-bit accesses. You cannot use STRD/LDRD.
To modify the register proceed as follows:
1. Clear the timer enable bit in the Global Timer Control Register
2. Write the lower 32-bit timer counter register
3. Write the upper 32-bit timer counter register
4. Set the timer enable bit.
To get the value from the Global Timer Counter register proceed as follows:
1. Read the upper 32-bit timer counter register
2. Read the lower 32-bit timer counter register
3. Read the upper 32-bit timer counter register again. If the value is different to the
32-bit upper value read previously, go back to step 2. Otherwise the 64-bit timer
counter value is correct.</description>
                </bitField>
            </register>
            <register name="MPCORE_GLOBAL_TIMER_CONTROL_REGISTER" offset="0xf8f00208" size="0x4">
                <gui_name language="en">Global_Timer_Control_Register</gui_name>
                <description language="en">Global Timer Control Register</description>
                <bitField access="Read Write" high_bit="15" low_bit="8" name="Prescaler">
                    <gui_name language="en">Prescaler</gui_name>
                    <description language="en">The prescaler modifies the clock period for the decrementing event for the Counter
Register. See Calculating timer intervals on page 4-2 for the equation</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Global_Timer_Control_Register_a_ENUM" high_bit="3" low_bit="3" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">This bit is banked per Cortex-A9 processor.
1'b0: single shot mode.
When the counter reaches the comparator value, sets the event flag. It is the responsibility
of software to update the comparator value to get further events.
1'b1: auto increment mode.
Each time the counter reaches the comparator value, the comparator register is
incremented with the auto-increment register, so that further events can be set periodically
without any software updates.</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="IRQ_Enable">
                    <gui_name language="en">IRQ_Enable</gui_name>
                    <description language="en">This bit is banked per Cortex-A9 processor.
If set, the interrupt ID 27 is set as pending in the Interrupt Distributor when the event flag
is set in the Timer Status Register.</description>
                </bitField>
                <bitField access="Read Write" high_bit="1" low_bit="1" name="Comp_Enablea">
                    <gui_name language="en">Comp_Enablea</gui_name>
                    <description language="en">This bit is banked per Cortex-A9 processor.
If set, it allows the comparison between the 64-bit Timer Counter and the related 64-bit
Comparator Register.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Global_Timer_Control_Register_Timer_Enable_ENUM" high_bit="0" low_bit="0" name="Timer_Enable">
                    <gui_name language="en">Timer_Enable</gui_name>
                    <description language="en">Timer enable
1'b0 = Timer is disabled and the counter does not increment.
All registers can still be read and written
1'b1 = Timer is enabled and the counter increments normally</description>
                </bitField>
            </register>
            <register name="MPCORE_GLOBAL_TIMER_INTERRUPT_STATUS_REGISTER" offset="0xf8f0020c" size="0x4">
                <gui_name language="en">Global_Timer_Interrupt_Status_Register</gui_name>
                <description language="en">Global Timer Interrupt Status Register</description>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="Event_flag">
                    <gui_name language="en">Event_flag</gui_name>
                    <description language="en">This is a banked register for all Cortex-A9 processors present.
The event flag is a sticky bit that is automatically set when the Counter Register reaches
the Comparator Register value. If the timer interrupt is enabled, Interrupt ID 27 is set as
pending in the Interrupt Distributor after the event flag is set. The event flag is cleared
when written to 1. Figure 4-7 shows the Global Timer Interrupt Status Register bit
assignment.</description>
                </bitField>
            </register>
            <register name="MPCORE_COMPARATOR_VALUE_REGISTER0" offset="0xf8f00210" size="0x4">
                <gui_name language="en">Comparator_Value_Register0</gui_name>
                <description language="en">Comparator Value Register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">There are two 32-bit registers, the lower 32-bit comparator value register at offset 0x10
and the upper 32-bit comparator value register at offset 0x14.
You must access these registers with 32-bit accesses. You cannot use STRD/LDRD. There
is a Comparator Value Register for each Cortex-A9 processor.
To ensure that updates to this register do not set the Interrupt Status Register proceed as
follows:
1. Clear the Comp Enable bit in the Timer Control Register.
2. Write the lower 32-bit Comparator Value Register.
3. Write the upper 32-bit Comparator Value Register.
4. Set the Comp Enable bit and, if necessary, the IRQ enable bit.</description>
                </bitField>
            </register>
            <register name="MPCORE_COMPARATOR_VALUE_REGISTER1" offset="0xf8f00214" size="0x4">
                <gui_name language="en">Comparator_Value_Register1</gui_name>
                <description language="en">Comparator Value Register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">There are two 32-bit registers, the lower 32-bit comparator value register at offset 0x10
and the upper 32-bit comparator value register at offset 0x14.
You must access these registers with 32-bit accesses. You cannot use STRD/LDRD. There
is a Comparator Value Register for each Cortex-A9 processor.
To ensure that updates to this register do not set the Interrupt Status Register proceed as
follows:
1. Clear the Comp Enable bit in the Timer Control Register.
2. Write the lower 32-bit Comparator Value Register.
3. Write the upper 32-bit Comparator Value Register.
4. Set the Comp Enable bit and, if necessary, the IRQ enable bit.</description>
                </bitField>
            </register>
            <register name="MPCORE_AUTO_INCREMENT_REGISTER" offset="0xf8f00218" size="0x4">
                <gui_name language="en">Auto_increment_Register</gui_name>
                <description language="en">Auto-increment Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">Auto-increment Register
This 32-bit register gives the increment value of the Comparator Register when the
Auto-increment bit is set in the Timer Control Register. Each Cortex-A9 processor
present has its own Auto-increment Register
If the comp enable and auto-increment bits are set when the global counter reaches the
Comparator Register value, the comparator is incremented by the auto-increment value,
so that a new event can be set periodically.
The global timer is not affected and goes on incrementing</description>
                </bitField>
            </register>
            <register name="MPCORE_PRIVATE_TIMER_LOAD_REGISTER" offset="0xf8f00600" size="0x4">
                <gui_name language="en">Private_Timer_Load_Register</gui_name>
                <description language="en">Private Timer Load Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">The Timer Load Register contains the value copied to the Timer Counter Register when
it decrements down to zero with auto reload mode enabled. Writing to the Timer Load
Register means that you also write to the Timer Counter Register.</description>
                </bitField>
            </register>
            <register name="MPCORE_PRIVATE_TIMER_COUNTER_REGISTER" offset="0xf8f00604" size="0x4">
                <gui_name language="en">Private_Timer_Counter_Register</gui_name>
                <description language="en">Private Timer Counter Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">The Timer Counter Register is a decrementing counter.
The Timer Counter Register decrements if the timer is enabled using the timer enable
bit in the Timer Control Register. If a Cortex-A9 processor timer is in debug state, the
counter only decrements when the Cortex-A9 processor returns to non debug state.
When the Timer Counter Register reaches zero and auto reload mode is enabled, it
reloads the value in the Timer Load Register and then decrements from that value. If
auto reload mode is not enabled, the Timer Counter Register decrements down to zero
and stops.
When the Timer Counter Register reaches zero, the timer interrupt status event flag is
set and the interrupt ID 29 is set as pending in the Interrupt Distributor, if interrupt
generation is enabled in the Timer Control Register.
Writing to the Timer Counter Register or Timer Load Register forces the Timer Counter
Register to decrement from the newly written value.</description>
                </bitField>
            </register>
            <register name="MPCORE_PRIVATE_TIMER_CONTROL_REGISTER" offset="0xf8f00608" size="0x4">
                <gui_name language="en">Private_Timer_Control_Register</gui_name>
                <description language="en">Private Timer Control Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="16" name="SBZP">
                    <gui_name language="en">SBZP</gui_name>
                    <description language="en">UNK/SBZP.</description>
                </bitField>
                <bitField access="Read Write" high_bit="15" low_bit="8" name="Prescaler">
                    <gui_name language="en">Prescaler</gui_name>
                    <description language="en">The prescaler modifies the clock period for the decrementing event for the Counter
Register. See Calculating timer intervals on page 4-2 for the equation.\'5c</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="3" name="UNK_SBZP">
                    <gui_name language="en">UNK_SBZP</gui_name>
                    <description language="en">UNK/SBZP.</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="IRQ_Enable">
                    <gui_name language="en">IRQ_Enable</gui_name>
                    <description language="en">If set, the interrupt ID 29 is set as pending in the Interrupt Distributor when the event flag
is set in the Timer Status Register.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Private_Timer_Control_Register_Auto_reload_ENUM" high_bit="1" low_bit="1" name="Auto_reload">
                    <gui_name language="en">Auto_reload</gui_name>
                    <description language="en">1'b0 = Single shot mode.
Counter decrements down to zero, sets the event flag and stops.
1'b1 = Auto-reload mode.
Each time the Counter Register reaches zero, it is reloaded with the value contained in the
Timer Load Register.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Private_Timer_Control_Register_Timer_Enable_ENUM" high_bit="0" low_bit="0" name="Timer_Enable">
                    <gui_name language="en">Timer_Enable</gui_name>
                    <description language="en">Timer enable
1'b0 = Timer is disabled and the counter does not decrement.
All registers can still be read and written
1'b1 = Timer is enabled and the counter decrements normally</description>
                </bitField>
            </register>
            <register name="MPCORE_PRIVATE_TIMER_INTERRUPT_STATUS_REGISTER" offset="0xf8f0060c" size="0x4">
                <gui_name language="en">Private_Timer_Interrupt_Status_Register</gui_name>
                <description language="en">Private Timer Interrupt Status Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="1" name="UNK_SBZP">
                    <gui_name language="en">UNK_SBZP</gui_name>
                    <description language="en">UNK/SBZP</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">This is a banked register for all Cortex-A9 processors present.
The event flag is a sticky bit that is automatically set when the Counter Register reaches
zero. If the timer interrupt is enabled, Interrupt ID 29 is set as pending in the Interrupt
Distributor after the event flag is set. The event flag is cleared when written to 1.</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_LOAD_REGISTER" offset="0xf8f00620" size="0x4">
                <gui_name language="en">Watchdog_Load_Register</gui_name>
                <description language="en">Watchdog Load Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">Watchdog Load Register
The Watchdog Load Register contains the value copied to the Watchdog Counter
Register when it decrements down to zero with auto reload mode enabled, in Timer
mode. Writing to the Watchdog Load Register means that you also write to the
Watchdog Counter Register</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_COUNTER_REGISTER" offset="0xf8f00624" size="0x4">
                <gui_name language="en">Watchdog_Counter_Register</gui_name>
                <description language="en">Watchdog Counter Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">Watchdog Counter Register
The Watchdog Counter Register is a down counter.
It decrements if the Watchdog is enabled using the Watchdog enable bit in the Watchdog
Control Register. If the Cortex-A9 processor associated with the Watchdog is in debug
state, the counter does not decrement until the Cortex-A9 processor returns to non
debug state.
When the Watchdog Counter Register reaches zero and auto reload mode is enabled,
and in timer mode, it reloads the value in the Watchdog Load Register and then
decrements from that value. If auto reload mode is not enabled or the watchdog is not
in timer mode, the Watchdog Counter Register decrements down to zero and stops.
When in watchdog mode the only way to update the Watchdog Counter Register is to
write to the Watchdog Load Register. When in timer mode the Watchdog Counter
Register is write accessible.
The behavior of the watchdog when the Watchdog Counter Register reaches zero
depends on its current mode:
Timer mode When the Watchdog Counter Register reaches zero, the watchdog
interrupt status event flag is set and the interrupt ID 30 is set as pending
in the Interrupt Distributor, if interrupt generation is enabled in the
Watchdog Control Register.
Watchdog mode
If a software failure prevents the Watchdog Counter Register from being
refreshed, the Watchdog Counter Register reaches zero, the Watchdog
reset status flag is set and the associated WDRESETREQ reset request
output pin is asserted. The external reset source is then responsible for
resetting all or part of the Cortex-A9 MPCore design.</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_CONTROL_REGISTER" offset="0xf8f00628" size="0x4">
                <gui_name language="en">Watchdog_Control_Register</gui_name>
                <description language="en">Watchdog Control Register</description>
                <bitField access="Read Write" high_bit="15" low_bit="8" name="Prescaler">
                    <gui_name language="en">Prescaler</gui_name>
                    <description language="en">The prescaler modifies the clock period for the decrementing event for the Counter
Register.</description>
                </bitField>
                <bitField access="Read Write" high_bit="7" low_bit="4" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">Reserved.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Watchdog_Control_Register_Watchdog_mode_ENUM" high_bit="3" low_bit="3" name="Watchdog_mode">
                    <gui_name language="en">Watchdog_mode</gui_name>
                    <description language="en">1'b0 = Timer mode, default
Writing a zero to this bit has no effect. You must use the Watchdog Disable Register to
put the watchdog into timer mode. See Watchdog Disable Register on page 4-9.
1'b1 = Watchdog mode.</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="IT_Enable">
                    <gui_name language="en">IT_Enable</gui_name>
                    <description language="en">If set, the interrupt ID 30 is set as pending in the Interrupt Distributor when the event flag
is set in the watchdog Status Register.
In watchdog mode this bit is ignored</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Watchdog_Control_Register_Auto_reload_ENUM" high_bit="1" low_bit="1" name="Auto_reload">
                    <gui_name language="en">Auto_reload</gui_name>
                    <description language="en">1'b0 = Single shot mode.
Counter decrements down to zero, sets the event flag and stops.
1'b1 = Auto-reload mode.
Each time the Counter Register reaches zero, it is reloaded with the value contained in the
Load Register and then continues decrementing.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="Watchdog_Control_Register_Watchdog_Enable_ENUM" high_bit="0" low_bit="0" name="Watchdog_Enable">
                    <gui_name language="en">Watchdog_Enable</gui_name>
                    <description language="en">Global watchdog enable
1'b0 = Watchdog is disabled and the counter does not decrement. All registers can still be
read and /or written
1'b1 = Watchdog is enabled and the counter decrements normally.</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_INTERRUPT_STATUS_REGISTER" offset="0xf8f0062c" size="0x4">
                <gui_name language="en">Watchdog_Interrupt_Status_Register</gui_name>
                <description language="en">Watchdog Interrupt Status Register</description>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="Event_flag">
                    <gui_name language="en">Event_flag</gui_name>
                    <description language="en">The event flag is a sticky bit that is automatically set when the Counter Register reaches
zero in timer mode. If the watchdog interrupt is enabled, Interrupt ID 30 is set as
pending in the Interrupt Distributor after the event flag is set. The event flag is cleared
when written with a value of 1. Trying to write a zero to the event flag or a one when it
is not set has no effect.</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_RESET_STATUS_REGISTER" offset="0xf8f00630" size="0x4">
                <gui_name language="en">Watchdog_Reset_Status_Register</gui_name>
                <description language="en">Watchdog Reset Status Register</description>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="Reset_flag">
                    <gui_name language="en">Reset_flag</gui_name>
                    <description language="en">The reset flag is a sticky bit that is automatically set when the Counter Register reaches
zero and a reset request is sent accordingly. (In watchdog mode)
The reset flag is cleared when written with a value of 1. Trying to write a zero to the
reset flag or a one when it is not set has no effect. This flag is not reset by normal
Cortex-A9 processor resets but has its own reset line, nWDRESET. nWDRESET must
not be asserted when the Cortex-A9 processor reset assertion is the result of a watchdog
reset request with WDRESETREQ. This distinction enables software to differentiate
between a normal boot sequence, reset flag is zero, and one caused by a previous
watchdog time-out, reset flag set to one.</description>
                </bitField>
            </register>
            <register name="MPCORE_WATCHDOG_DISABLE_REGISTER" offset="0xf8f00634" size="0x4">
                <gui_name language="en">Watchdog_Disable_Register</gui_name>
                <description language="en">Watchdog Disable Register</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">Watchdog Disable Register
Use the Watchdog Disable Register to switch from watchdog to timer mode. The
software must write 0x12345678 then 0x87654321 successively to the Watchdog Disable
Register so that the watchdog mode bit in the Watchdog Control Register is set to zero.
If one of the values written to the Watchdog Disable Register is incorrect or if any other
write occurs in between the two word writes, the watchdog remains in its current state.
To reactivate the Watchdog, the software must write 1 to the watchdog mode bit of the
Watchdog Control Register.</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_ICDIIDR" offset="0xf8f01008" size="0x4">
                <gui_name language="en">ICDIIDR</gui_name>
                <description language="en">Distributor Implementer Identification Register</description>
                <bitField access="Read Only" high_bit="31" low_bit="24" name="Implementation_Version">
                    <gui_name language="en">Implementation_Version</gui_name>
                    <description language="en">Gives implementation version number</description>
                </bitField>
                <bitField access="Read Only" high_bit="23" low_bit="12" name="Revision_Number">
                    <gui_name language="en">Revision_Number</gui_name>
                    <description language="en">Return the revision number of the controller</description>
                </bitField>
                <bitField access="Read Only" high_bit="11" low_bit="0" name="Implementer">
                    <gui_name language="en">Implementer</gui_name>
                    <description language="en">Implementer Number</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISER0" offset="0xf8f01100" size="0x4">
                <gui_name language="en">ICDISER0</gui_name>
                <description language="en">Interrupt Set-Enable Register 0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.
ICDISER0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISER1" offset="0xf8f01104" size="0x4">
                <gui_name language="en">ICDISER1</gui_name>
                <description language="en">Interrupt Set-Enable Register 1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISER2" offset="0xf8f01108" size="0x4">
                <gui_name language="en">ICDISER2</gui_name>
                <description language="en">Interrupt Set-Enable Register 2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICER0" offset="0xf8f01180" size="0x4">
                <gui_name language="en">ICDICER0</gui_name>
                <description language="en">Interrupt Clear-Enable Register 0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDICER0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICER1" offset="0xf8f01184" size="0x4">
                <gui_name language="en">ICDICER1</gui_name>
                <description language="en">Interrupt Clear-Enable Register 1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICER2" offset="0xf8f01188" size="0x4">
                <gui_name language="en">ICDICER2</gui_name>
                <description language="en">Interrupt Clear-Enable Register 2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISPR0" offset="0xf8f01200" size="0x4">
                <gui_name language="en">ICDISPR0</gui_name>
                <description language="en">Interrupt Set-Pending Register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDISPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISPR1" offset="0xf8f01204" size="0x4">
                <gui_name language="en">ICDISPR1</gui_name>
                <description language="en">Interrupt Set-Pending Register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDISPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDISPR2" offset="0xf8f01208" size="0x4">
                <gui_name language="en">ICDISPR2</gui_name>
                <description language="en">Interrupt Set-Pending Register_2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Set">
                    <gui_name language="en">Set</gui_name>
                    <description language="en">The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDISPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICPR0" offset="0xf8f01280" size="0x4">
                <gui_name language="en">ICDICPR0</gui_name>
                <description language="en">Interrupt Clear-Pending Register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDICPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICPR1" offset="0xf8f01284" size="0x4">
                <gui_name language="en">ICDICPR1</gui_name>
                <description language="en">Interrupt Clear-Pending Register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDICPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICPR2" offset="0xf8f01288" size="0x4">
                <gui_name language="en">ICDICPR2</gui_name>
                <description language="en">Interrupt Clear-Pending Register_2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Clear">
                    <gui_name language="en">Clear</gui_name>
                    <description language="en">The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDICPR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDABR0" offset="0xf8f01300" size="0x4">
                <gui_name language="en">ICDABR0</gui_name>
                <description language="en">Active Bit register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Active">
                    <gui_name language="en">Active</gui_name>
                    <description language="en">The ICDABRs provide an Active bit for each interrupt supported by the GIC.
The bit reads as one if the status of the interrupt is active or acitve and pending.
Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
ICDABR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDABR1" offset="0xf8f01304" size="0x4">
                <gui_name language="en">ICDABR1</gui_name>
                <description language="en">Active Bit register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Active">
                    <gui_name language="en">Active</gui_name>
                    <description language="en">The ICDABRs provide an Active bit for each interrupt supported by the GIC.
The bit reads as one if the status of the interrupt is active or acitve and pending.
Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
ICDABR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDABR2" offset="0xf8f01308" size="0x4">
                <gui_name language="en">ICDABR2</gui_name>
                <description language="en">Active Bit register_2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Active">
                    <gui_name language="en">Active</gui_name>
                    <description language="en">The ICDABRs provide an Active bit for each interrupt supported by the GIC.
The bit reads as one if the status of the interrupt is active or acitve and pending.
Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
ICDABR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR0" offset="0xf8f01400" size="0x4">
                <gui_name language="en">ICDIPR0</gui_name>
                <description language="en">Interrupt Priority Register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR1" offset="0xf8f01404" size="0x4">
                <gui_name language="en">ICDIPR1</gui_name>
                <description language="en">Interrupt Priority Register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR2" offset="0xf8f01408" size="0x4">
                <gui_name language="en">ICDIPR2</gui_name>
                <description language="en">Interrupt Priority Register_2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR3" offset="0xf8f0140c" size="0x4">
                <gui_name language="en">ICDIPR3</gui_name>
                <description language="en">Interrupt Priority Register_3</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR4" offset="0xf8f01410" size="0x4">
                <gui_name language="en">ICDIPR4</gui_name>
                <description language="en">Interrupt Priority Register_4</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR5" offset="0xf8f01414" size="0x4">
                <gui_name language="en">ICDIPR5</gui_name>
                <description language="en">Interrupt Priority Register_5</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR6" offset="0xf8f01418" size="0x4">
                <gui_name language="en">ICDIPR6</gui_name>
                <description language="en">Interrupt Priority Register_6</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR7" offset="0xf8f0141c" size="0x4">
                <gui_name language="en">ICDIPR7</gui_name>
                <description language="en">Interrupt Priority Register_7</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR8" offset="0xf8f01420" size="0x4">
                <gui_name language="en">ICDIPR8</gui_name>
                <description language="en">Interrupt Priority Register_8</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR9" offset="0xf8f01424" size="0x4">
                <gui_name language="en">ICDIPR9</gui_name>
                <description language="en">Interrupt Priority Register_9</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR10" offset="0xf8f01428" size="0x4">
                <gui_name language="en">ICDIPR10</gui_name>
                <description language="en">Interrupt Priority Register_10</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR11" offset="0xf8f0142c" size="0x4">
                <gui_name language="en">ICDIPR11</gui_name>
                <description language="en">Interrupt Priority Register_11</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR12" offset="0xf8f01430" size="0x4">
                <gui_name language="en">ICDIPR12</gui_name>
                <description language="en">Interrupt Priority Register_12</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR13" offset="0xf8f01434" size="0x4">
                <gui_name language="en">ICDIPR13</gui_name>
                <description language="en">Interrupt Priority Register_13</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR14" offset="0xf8f01438" size="0x4">
                <gui_name language="en">ICDIPR14</gui_name>
                <description language="en">Interrupt Priority Register_14</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR15" offset="0xf8f0143c" size="0x4">
                <gui_name language="en">ICDIPR15</gui_name>
                <description language="en">Interrupt Priority Register_15</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR16" offset="0xf8f01440" size="0x4">
                <gui_name language="en">ICDIPR16</gui_name>
                <description language="en">Interrupt Priority Register_16</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR17" offset="0xf8f01444" size="0x4">
                <gui_name language="en">ICDIPR17</gui_name>
                <description language="en">Interrupt Priority Register_17</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR18" offset="0xf8f01448" size="0x4">
                <gui_name language="en">ICDIPR18</gui_name>
                <description language="en">Interrupt Priority Register_18</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR19" offset="0xf8f0144c" size="0x4">
                <gui_name language="en">ICDIPR19</gui_name>
                <description language="en">Interrupt Priority Register_19</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR20" offset="0xf8f01450" size="0x4">
                <gui_name language="en">ICDIPR20</gui_name>
                <description language="en">Interrupt Priority Register_20</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR21" offset="0xf8f01454" size="0x4">
                <gui_name language="en">ICDIPR21</gui_name>
                <description language="en">Interrupt Priority Register_21</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR22" offset="0xf8f01458" size="0x4">
                <gui_name language="en">ICDIPR22</gui_name>
                <description language="en">Interrupt Priority Register_22</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPR23" offset="0xf8f0145c" size="0x4">
                <gui_name language="en">ICDIPR23</gui_name>
                <description language="en">Interrupt Priority Register_23</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Priority">
                    <gui_name language="en">Priority</gui_name>
                    <description language="en">The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPR0 to ICDIPR7 are banekd for each connectred processor</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR0" offset="0xf8f01800" size="0x4">
                <gui_name language="en">ICDIPTR0</gui_name>
                <description language="en">Interrupt Processor Targets Register_0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR1" offset="0xf8f01804" size="0x4">
                <gui_name language="en">ICDIPTR1</gui_name>
                <description language="en">Interrupt Processor Targets Register_1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR2" offset="0xf8f01808" size="0x4">
                <gui_name language="en">ICDIPTR2</gui_name>
                <description language="en">Interrupt Processor Targets Register_2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR3" offset="0xf8f0180c" size="0x4">
                <gui_name language="en">ICDIPTR3</gui_name>
                <description language="en">Interrupt Processor Targets Register_3</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR4" offset="0xf8f01810" size="0x4">
                <gui_name language="en">ICDIPTR4</gui_name>
                <description language="en">Interrupt Processor Targets Register_4</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR5" offset="0xf8f01814" size="0x4">
                <gui_name language="en">ICDIPTR5</gui_name>
                <description language="en">Interrupt Processor Targets Register_5</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR6" offset="0xf8f01818" size="0x4">
                <gui_name language="en">ICDIPTR6</gui_name>
                <description language="en">Interrupt Processor Targets Register_6</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR7" offset="0xf8f0181c" size="0x4">
                <gui_name language="en">ICDIPTR7</gui_name>
                <description language="en">Interrupt Processor Targets Register_7</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR8" offset="0xf8f01820" size="0x4">
                <gui_name language="en">ICDIPTR8</gui_name>
                <description language="en">Interrupt Processor Targets Register_8</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR9" offset="0xf8f01824" size="0x4">
                <gui_name language="en">ICDIPTR9</gui_name>
                <description language="en">Interrupt Processor Targets Register_9</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR10" offset="0xf8f01828" size="0x4">
                <gui_name language="en">ICDIPTR10</gui_name>
                <description language="en">Interrupt Processor Targets Register_10</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR11" offset="0xf8f0182c" size="0x4">
                <gui_name language="en">ICDIPTR11</gui_name>
                <description language="en">Interrupt Processor Targets Register_11</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR12" offset="0xf8f01830" size="0x4">
                <gui_name language="en">ICDIPTR12</gui_name>
                <description language="en">Interrupt Processor Targets Register_12</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR13" offset="0xf8f01834" size="0x4">
                <gui_name language="en">ICDIPTR13</gui_name>
                <description language="en">Interrupt Processor Targets Register_13</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR14" offset="0xf8f01838" size="0x4">
                <gui_name language="en">ICDIPTR14</gui_name>
                <description language="en">Interrupt Processor Targets Register_14</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR15" offset="0xf8f0183c" size="0x4">
                <gui_name language="en">ICDIPTR15</gui_name>
                <description language="en">Interrupt Processor Targets Register_15</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR16" offset="0xf8f01840" size="0x4">
                <gui_name language="en">ICDIPTR16</gui_name>
                <description language="en">Interrupt Processor Targets Register_16</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR17" offset="0xf8f01844" size="0x4">
                <gui_name language="en">ICDIPTR17</gui_name>
                <description language="en">Interrupt Processor Targets Register_17</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR18" offset="0xf8f01848" size="0x4">
                <gui_name language="en">ICDIPTR18</gui_name>
                <description language="en">Interrupt Processor Targets Register_18</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR19" offset="0xf8f0184c" size="0x4">
                <gui_name language="en">ICDIPTR19</gui_name>
                <description language="en">Interrupt Processor Targets Register_19</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR20" offset="0xf8f01850" size="0x4">
                <gui_name language="en">ICDIPTR20</gui_name>
                <description language="en">Interrupt Processor Targets Register_20</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR21" offset="0xf8f01854" size="0x4">
                <gui_name language="en">ICDIPTR21</gui_name>
                <description language="en">Interrupt Processor Targets Register_21</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR22" offset="0xf8f01858" size="0x4">
                <gui_name language="en">ICDIPTR22</gui_name>
                <description language="en">Interrupt Processor Targets Register_22</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDIPTR23" offset="0xf8f0185c" size="0x4">
                <gui_name language="en">ICDIPTR23</gui_name>
                <description language="en">Interrupt Processor Targets Register_23</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Target">
                    <gui_name language="en">Target</gui_name>
                    <description language="en">The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
Theis field stroes the lists of processors that the interrupt is sent to if it is asserted.
These registers are byte accessible.
A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
Meaning of CPU tagets field bit values:
0bxxxxxxx1: CPU interface 0
0bxxxxxx1x: CPU interface 1</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR0" offset="0xf8f01c00" size="0x4">
                <gui_name language="en">ICDICFR0</gui_name>
                <description language="en">Interrupt Configuration Register 0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">The ICDICFRs provide a 2-bit Int_config field for each interrupt supported by the GIC.
A register field that corresponds to Secure interrupt is RAZ/WI to Non-secure accesses.
ICDICFR0 is read-only.
Meaning of each 2-bit Int_config:
SGI: both bits are read-only; always 0b10
PPI: both bits are read-only; always 0b01 (active LOW level sensitive) for PPI[1], and [4]; always 0b11(rising-edge sensitive) for PPI[0], [2], and [3].
SPI: LSB is read-only, and is alwyas 1;
0b01=active HIGHT level sensitive; 0b11=rising-edge sensitive.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR1" offset="0xf8f01c04" size="0x4">
                <gui_name language="en">ICDICFR1</gui_name>
                <description language="en">Interrupt Configuration Register 1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">(ditto)
ICDICFR1 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR2" offset="0xf8f01c08" size="0x4">
                <gui_name language="en">ICDICFR2</gui_name>
                <description language="en">Interrupt Configuration Register 2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">(ditto)</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR3" offset="0xf8f01c0c" size="0x4">
                <gui_name language="en">ICDICFR3</gui_name>
                <description language="en">Interrupt Configuration Register 3</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">(ditto)</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR4" offset="0xf8f01c10" size="0x4">
                <gui_name language="en">ICDICFR4</gui_name>
                <description language="en">Interrupt Configuration Register 4</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">(ditto)</description>
                </bitField>
            </register>
            <register name="MPCORE_ICDICFR5" offset="0xf8f01c14" size="0x4">
                <gui_name language="en">ICDICFR5</gui_name>
                <description language="en">Interrupt Configuration Register 5</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="Config">
                    <gui_name language="en">Config</gui_name>
                    <description language="en">(ditto)</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_PPI_STATUS" offset="0xf8f01d00" size="0x4">
                <gui_name language="en">ppi_status</gui_name>
                <description language="en">PPI Status Register</description>
                <bitField access="Read Only" high_bit="15" low_bit="11" name="ppi_status">
                    <gui_name language="en">ppi_status</gui_name>
                    <description language="en">Returns the status of the PPI(4:0) inputs on the distributor:
* PPI[4] is nIRQ
* PPI[3] is the private watchdog
* PPI[2] is the private timer
* PPI[1] is nFIQ
* PPI[0] is the global timer.
PPI[1] and PPI[4] are active LOW
PPI[0], PPI[2] and PPI[3] are active HIGH.
Note
These bits return the actual status of the PPI(4:0) signals. The ICDISPRn and ICDICPRn registers
can also provide the PPI(4:0) status but because you can write to these registers then they might
not contain the actual status of the PPI(4:0) signals.</description>
                </bitField>
                <bitField access="Read Only" high_bit="10" low_bit="0" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_SPI_STATUS_0" offset="0xf8f01d04" size="0x4">
                <gui_name language="en">spi_status_0</gui_name>
                <description language="en">SPI Status Register 0</description>
                <bitField access="Read Only" high_bit="31" low_bit="0" name="spi_status">
                    <gui_name language="en">spi_status</gui_name>
                    <description language="en">Returns the status of the IRQS[31:0] inputs on the distributor.
These bits return the actual status of the IRQS signals.
Note:
The ICDISPRn and ICDICPRn registers
can also provide the IRQS status but because you can write to these registers then they might not
contain the actual status of the IRQS signals.</description>
                </bitField>
            </register>
            <register name="MPCORE_SPI_STATUS_1" offset="0xf8f01d08" size="0x4">
                <gui_name language="en">spi_status_1</gui_name>
                <description language="en">SPI Status Register 1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="spi_status">
                    <gui_name language="en">spi_status</gui_name>
                    <description language="en">Returns the status of the IRQS[63:32] inputs on the distributor.</description>
                </bitField>
            </register>
            <register name="MPCORE_SPI_STATUS_2" offset="0xf8f01d0c" size="0x4">
                <gui_name language="en">spi_status_2</gui_name>
                <description language="en">SPI Status Register 2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="spi_status">
                    <gui_name language="en">spi_status</gui_name>
                    <description language="en">Returns the status of the IRQS[95:64] inputs on the distributor.</description>
                </bitField>
            </register>
            <register name="MPCORE_ICPIDR4" offset="0xf8f01fd0" size="0x4">
                <gui_name language="en">ICPIDR4</gui_name>
                <description language="en">Peripheral ID4</description>
                <bitField access="Read Write" high_bit="3" low_bit="0" name="ContinuationCode">
                    <gui_name language="en">ContinuationCode</gui_name>
                    <description language="en">ARM-defined ContinuationCode field</description>
                </bitField>
            </register>
            <register name="MPCORE_ICPIDR5" offset="0xf8f01fd4" size="0x4">
                <gui_name language="en">ICPIDR5</gui_name>
                <description language="en">Peripheral ID5</description>
            </register>
            <register name="MPCORE_ICPIDR6" offset="0xf8f01fd8" size="0x4">
                <gui_name language="en">ICPIDR6</gui_name>
                <description language="en">Peripheral ID6</description>
            </register>
            <register name="MPCORE_ICPIDR7" offset="0xf8f01fdc" size="0x4">
                <gui_name language="en">ICPIDR7</gui_name>
                <description language="en">Peripheral ID7</description>
            </register>
            <register name="MPCORE_ICPIDR0" offset="0xf8f01fe0" size="0x4">
                <gui_name language="en">ICPIDR0</gui_name>
                <description language="en">Peripheral ID0</description>
                <bitField access="Read Write" high_bit="7" low_bit="0" name="DevID_low">
                    <gui_name language="en">DevID_low</gui_name>
                    <description language="en">ARM-defined DevID[7:0] field</description>
                </bitField>
            </register>
            <register name="MPCORE_ICPIDR1" offset="0xf8f01fe4" size="0x4">
                <gui_name language="en">ICPIDR1</gui_name>
                <description language="en">Peripheral ID1</description>
                <bitField access="Read Write" high_bit="7" low_bit="4" name="ARchID_low">
                    <gui_name language="en">ARchID_low</gui_name>
                    <description language="en">ARM-defined ArchID[3:0] field</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="0" name="DevID_high">
                    <gui_name language="en">DevID_high</gui_name>
                    <description language="en">ARM-defined DevID[11:8] field</description>
                </bitField>
            </register>
            <register name="MPCORE_ICPIDR2" offset="0xf8f01fe8" size="0x4">
                <gui_name language="en">ICPIDR2</gui_name>
                <description language="en">Peripheral ID2</description>
                <bitField access="Read Write" high_bit="7" low_bit="4" name="ArchRev">
                    <gui_name language="en">ArchRev</gui_name>
                    <description language="en">ARM-defined ArchRev field</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="3" name="UsesJEPcode">
                    <gui_name language="en">UsesJEPcode</gui_name>
                    <description language="en">ARM-defined ContinuationCode field</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="0" name="ArchID_high">
                    <gui_name language="en">ArchID_high</gui_name>
                    <description language="en">ARM-defined ArchID[6:4] field</description>
                </bitField>
            </register>
            <register name="MPCORE_ICPIDR3" offset="0xf8f01fec" size="0x4">
                <gui_name language="en">ICPIDR3</gui_name>
                <description language="en">Peripheral ID3</description>
                <bitField access="Read Write" high_bit="7" low_bit="4" name="Revision">
                    <gui_name language="en">Revision</gui_name>
                    <description language="en">ARM-defined Revision field</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCIDR0" offset="0xf8f01ff0" size="0x4">
                <gui_name language="en">ICCIDR0</gui_name>
                <description language="en">Component ID0</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">ARM-defined fixed values for the preamble for component discovery</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCIDR1" offset="0xf8f01ff4" size="0x4">
                <gui_name language="en">ICCIDR1</gui_name>
                <description language="en">Component ID1</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">ARM-defined fixed values for the preamble for component discovery</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCIDR2" offset="0xf8f01ff8" size="0x4">
                <gui_name language="en">ICCIDR2</gui_name>
                <description language="en">Component ID2</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">ARM-defined fixed values for the preamble for component discovery</description>
                </bitField>
            </register>
            <register name="MPCORE_ICCIDR3" offset="0xf8f01ffc" size="0x4">
                <gui_name language="en">ICCIDR3</gui_name>
                <description language="en">Component ID3</description>
                <bitField access="Read Write" high_bit="31" low_bit="0" name="a">
                    <gui_name language="en">a</gui_name>
                    <description language="en">ARM-defined fixed values for the preamble for component discovery</description>
                </bitField>
            </register>
        </peripheral>

        <peripheral address_type="Non-Secure" disable_condition="(CP15-&gt;System-&gt;SCR-&gt;NS == 0)" base_addr="M_MPCORE" name="MPCORE_N" offset="0xf8f00000">
            <gui_name language="en">MPCORE_N</gui_name>
            <description language="en">MPCORE_N</description>
            <register name="MPCORE_N_ICCICR" offset="0xf8f00100" size="0x4">
                <gui_name language="en">ICCICR</gui_name>
                <description language="en">CPU Interface Control Register</description>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="Enable">
                    <gui_name language="en">Enable</gui_name>
                    <description language="en">Global enable for the signalling of interrupts by the CPU itnerfaces to the connected processors.</description>
                </bitField>
            </register>
            <register name="MPCORE_N_ICDDCR" offset="0xf8f01000" size="0x4">
                <gui_name language="en">ICDDCR</gui_name>
                <description language="en">Distributor Control Register</description>
                <bitField access="Read Write" enumerationId="ICDDCR_Enable_Non_secure_ENUM" high_bit="0" low_bit="0" name="Enable_Non_secure">
                    <gui_name language="en">Enable_Non_secure</gui_name>
                    <description language="en">0 = disables all Non-secure interrupts control bits in the distributor from changing state
because of any external stimulus change that occurs on the corresponding SPI or PPI
signals
1 = enables the distributor to update register locations for Non-secure interrupts
FOR: ICDDCR_for_Non_secure_mode
31,1 --&gt; Reserved. Writes are ignored, read data is always zero.</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_N_ICDICTR" offset="0xf8f01004" size="0x4">
                <gui_name language="en">ICDICTR</gui_name>
                <description language="en">Interrupt Controller Type Register</description>
                <bitField access="Read Only" enumerationId="ICDICTR_SecurityExtn_ENUM" high_bit="10" low_bit="10" name="SecurityExtn">
                    <gui_name language="en">SecurityExtn</gui_name>
                    <description language="en">Returns the number of security domains that the controller contains:
1 = the controller contains two security domains.
This bit always returns the value one.</description>
                </bitField>
                <bitField access="Read Only" high_bit="9" low_bit="8" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">Reserved</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICDICTR_CPU_Number_ENUM" high_bit="7" low_bit="5" name="CPU_Number">
                    <gui_name language="en">CPU_Number</gui_name>
                    <description language="en">The encoding is:
b000 the Cortex-A9 MPCore configuration contains one Cortex-A9 processor.
b001 the Cortex-A9 MPCore configuration contains two Cortex-A9 processors.
b010 the Cortex-A9 MPCore configuration contains three Cortex-A9 processors.
b011 the Cortex-A9 MPCore configuration contains four Cortex-A9 processors.
b1xx: Unused values.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICDICTR_IT_Lines_Number_ENUM" high_bit="4" low_bit="0" name="IT_Lines_Number">
                    <gui_name language="en">IT_Lines_Number</gui_name>
                    <description language="en">The encoding is:
b00000 = the distributor provides 32 interruptsa, no external interrupt lines.
b00001 = the distributor provides 64 interrupts, 32 external interrupt lines.
b00010 = the distributor provides 96 interrupts, 64 external interrupt lines.
b00011 = the distributor provide 128 interrupts, 96 external interrupt lines.
b00100 = the distributor provides 160 interrupts, 128 external interrupt lines.
b00101 = the distributor provides 192 interrupts, 160 external interrupt lines.
b00110 = the distributor provides 224 interrupts, 192 external interrupt lines.
b00111 = the distributor provides 256 interrupts, 224 external interrupt lines.
All other values not used.</description>
                </bitField>
            </register>
            <register name="MPCORE_N_ICDSGIR" offset="0xf8f01f00" size="0x4">
                <gui_name language="en">ICDSGIR</gui_name>
                <description language="en">Software Generated Interrupt Register</description>
                <bitField access="Read Write" high_bit="25" low_bit="24" name="TargetListFilter">
                    <gui_name language="en">TargetListFilter</gui_name>
                    <description language="en">0b00: send the interrupt ot the CPU interfaces specified in the CPUTargetList field
0b01: send the interrupt to all CPU interfaces except the CPU itnerface that requested the interrupt
0b10: send the interrupt on ly to the CPU interface that requested the interrupt
0b11: reserved</description>
                </bitField>
                <bitField access="Read Write" enumerationId="ICDSGIR_CPUTargetList_ENUM" high_bit="23" low_bit="16" name="CPUTargetList">
                    <gui_name language="en">CPUTargetList</gui_name>
                    <description language="en">When TargetListFilter is 0b00, defines the CPU interfaces the Distributor must send the interrupt to.
Each bit refers to the corresponding CPU interface.</description>
                </bitField>
                <bitField access="Read Write" high_bit="14" low_bit="4" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="0" name="SGIINTID">
                    <gui_name language="en">SGIINTID</gui_name>
                    <description language="en">The Interrupt ID of the SGI to send to the specifed CPU itnerfaces.</description>
                </bitField>
            </register>
        </peripheral>

        <peripheral address_type="Secure" disable_condition="(CP15-&gt;System-&gt;SCR-&gt;NS == 1)" base_addr="M_MPCORE" name="MPCORE_S" offset="0xf8f00000">
            <gui_name language="en">MPCORE_S</gui_name>
            <description language="en">MPCORE_S</description>
            <register name="MPCORE_S_ICCABPR" offset="0xf8f0011c" size="0x4">
                <gui_name language="en">ICCABPR</gui_name>
                <description language="en">Aliased Non-secure Binary Point Register</description>
                <bitField access="Read Write" high_bit="2" low_bit="0" name="Binary_point">
                    <gui_name language="en">Binary_point</gui_name>
                    <description language="en">Provides an alias of the Non-secure ICCBPR.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICCICR" offset="0xf8f00100" size="0x4">
                <gui_name language="en">ICCICR</gui_name>
                <description language="en">CPU Interface Control Register</description>
                <bitField access="Read Write" enumerationId="ICCICR_SBPR_ENUM" high_bit="4" low_bit="4" name="SBPR">
                    <gui_name language="en">SBPR</gui_name>
                    <description language="en">Controls wheterh the CPU interface uses the Secure or Non-secure Binary Point Register for preemption.
0: use the Secure Binary Point Register for Secure interrupts, and use the Non-secure Binary Point Register for Non-secure interrupts.
1: use the Secure Binary Point Register for both Secure and Non-secure interrupts.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="ICCICR_FIQEn_ENUM" high_bit="3" low_bit="3" name="FIQEn">
                    <gui_name language="en">FIQEn</gui_name>
                    <description language="en">Controls whether the GIC signals Secure interrupts to a target processor using the FIQ or the IRQ signal.
0: using IRQ, 1: using FIQ.
The GIC always signals Non-secure interrrupts using IRQ.</description>
                </bitField>
                <bitField access="Read Write" high_bit="2" low_bit="2" name="AckCtl">
                    <gui_name language="en">AckCtl</gui_name>
                    <description language="en">Controls whether a Secure read of the ICCIAR, when the highest priority pending interrupt is Non-ssecure, causes the CPU interface to acknowledge the interrupt.</description>
                </bitField>
                <bitField access="Read Write" high_bit="1" low_bit="1" name="EnableNS">
                    <gui_name language="en">EnableNS</gui_name>
                    <description language="en">An alias of the Enable bit in the Non-secure ICCICR.
This alias bit means Secure software can enable the aisngalling of Non-secure nterrupts.</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="EnableS">
                    <gui_name language="en">EnableS</gui_name>
                    <description language="en">Global enable for the signalling of Secure interrupts by the CPU itnerfaces to the connected processors.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICDDCR" offset="0xf8f01000" size="0x4">
                <gui_name language="en">ICDDCR</gui_name>
                <description language="en">Distributor Control Register</description>
                <bitField access="Read Write" enumerationId="ICDDCR_Enable_Non_secure_ENUM" high_bit="1" low_bit="1" name="Enable_Non_secure">
                    <gui_name language="en">Enable_Non_secure</gui_name>
                    <description language="en">0 = disables all Non-secure interrupts control bits in the distributor from changing state
because of any external stimulus change that occurs on the corresponding SPI or PPI
signals
1 = enables the distributor to update register locations for Non-secure interrupts
FOR: ICDDCR_for_Non_secure_mode
31,1 --&gt; Reserved. Writes are ignored, read data is always zero.</description>
                </bitField>
                <bitField access="Read Write" high_bit="0" low_bit="0" name="Enable_secure">
                    <gui_name language="en">Enable_secure</gui_name>
                    <description language="en">0 = disables all Secure interrupt control bits in the distributor from changing state
because of any external stimulus change that occurs on the corresponding SPI or PPI
signals.
1 = enables the distributor to update register locations for Secure interrupts.
FOR: ICDDCR_for_Non_secure_mode
0 --&gt; Enable_Non_secure --&gt; 0 = disables all Non-secure interrupts control bits in the
distributor from changing state because of any external
stimulus change that occurs on the corresponding SPI or
PPI signals
1 = enables the distributor to update register locations for
Non-secure interrupts</description>
                </bitField>
            </register>
            <register access="Read Only" name="MPCORE_S_ICDICTR" offset="0xf8f01004" size="0x4">
                <gui_name language="en">ICDICTR</gui_name>
                <description language="en">Interrupt Controller Type Register</description>
                <bitField access="Read Only" enumerationId="ICDICTR_LSPI_ENUM" high_bit="15" low_bit="11" name="LSPI">
                    <gui_name language="en">LSPI</gui_name>
                    <description language="en">Returns the number of Lockable Shared Peripheral Interrupts (LSPIs) that the controller
contains. The encoding is:
b11111 = 31 LSPIs, which are the interrupts of IDs 32-62.
When CFGSDISABLE is HIGH then the interrupt controller prevents writes to any
register locations that control the operating state of an LSPI.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICDICTR_SecurityExtn_ENUM" high_bit="10" low_bit="10" name="SecurityExtn">
                    <gui_name language="en">SecurityExtn</gui_name>
                    <description language="en">Returns the number of security domains that the controller contains:
1 = the controller contains two security domains.
This bit always returns the value one.</description>
                </bitField>
                <bitField access="Read Only" high_bit="9" low_bit="8" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">Reserved</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICDICTR_CPU_Number_ENUM" high_bit="7" low_bit="5" name="CPU_Number">
                    <gui_name language="en">CPU_Number</gui_name>
                    <description language="en">The encoding is:
b000 the Cortex-A9 MPCore configuration contains one Cortex-A9 processor.
b001 the Cortex-A9 MPCore configuration contains two Cortex-A9 processors.
b010 the Cortex-A9 MPCore configuration contains three Cortex-A9 processors.
b011 the Cortex-A9 MPCore configuration contains four Cortex-A9 processors.
b1xx: Unused values.</description>
                </bitField>
                <bitField access="Read Only" enumerationId="ICDICTR_IT_Lines_Number_ENUM" high_bit="4" low_bit="0" name="IT_Lines_Number">
                    <gui_name language="en">IT_Lines_Number</gui_name>
                    <description language="en">The encoding is:
b00000 = the distributor provides 32 interruptsa, no external interrupt lines.
b00001 = the distributor provides 64 interrupts, 32 external interrupt lines.
b00010 = the distributor provides 96 interrupts, 64 external interrupt lines.
b00011 = the distributor provide 128 interrupts, 96 external interrupt lines.
b00100 = the distributor provides 160 interrupts, 128 external interrupt lines.
b00101 = the distributor provides 192 interrupts, 160 external interrupt lines.
b00110 = the distributor provides 224 interrupts, 192 external interrupt lines.
b00111 = the distributor provides 256 interrupts, 224 external interrupt lines.
All other values not used.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICDISR0" offset="0xf8f01080" size="0x4">
                <gui_name language="en">ICDISR0</gui_name>
                <description language="en">Interrupt Security Register_0</description>
                <bitField access="Read Write" enumerationId="ICDISR0_Security_Status_ENUM" high_bit="31" low_bit="0" name="Security_Status">
                    <gui_name language="en">Security_Status</gui_name>
                    <description language="en">The ICDISRn provide a Security status bit for each interupt supported by the GIC.
Each bit controls the security status of the corresponding interrupt.
Acessible by Secure accesses only.
The register addresses are RAZ/WI to Non-secure accesses.
ICDISR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICDISR1" offset="0xf8f01084" size="0x4">
                <gui_name language="en">ICDISR1</gui_name>
                <description language="en">Interrupt Security Register_1</description>
                <bitField access="Read Write" enumerationId="ICDISR1_Security_Status_ENUM" high_bit="31" low_bit="0" name="Security_Status">
                    <gui_name language="en">Security_Status</gui_name>
                    <description language="en">The ICDISRn provide a Security status bit for each interupt supported by the GIC.
Each bit controls the security status of the corresponding interrupt.
Acessible by Secure accesses only.
The register addresses are RAZ/WI to Non-secure accesses.
ICDISR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICDISR2" offset="0xf8f01088" size="0x4">
                <gui_name language="en">ICDISR2</gui_name>
                <description language="en">Interrupt Security Register_2</description>
                <bitField access="Read Write" enumerationId="ICDISR2_Security_Status_ENUM" high_bit="31" low_bit="0" name="Security_Status">
                    <gui_name language="en">Security_Status</gui_name>
                    <description language="en">The ICDISRn provide a Security status bit for each interupt supported by the GIC.
Each bit controls the security status of the corresponding interrupt.
Acessible by Secure accesses only.
The register addresses are RAZ/WI to Non-secure accesses.
ICDISR0 is banked for each connected processor.</description>
                </bitField>
            </register>
            <register name="MPCORE_S_ICDSGIR" offset="0xf8f01f00" size="0x4">
                <gui_name language="en">ICDSGIR</gui_name>
                <description language="en">Software Generated Interrupt Register</description>
                <bitField access="Read Write" high_bit="25" low_bit="24" name="TargetListFilter">
                    <gui_name language="en">TargetListFilter</gui_name>
                    <description language="en">0b00: send the interrupt ot the CPU interfaces specified in the CPUTargetList field
0b01: send the interrupt to all CPU interfaces except the CPU itnerface that requested the interrupt
0b10: send the interrupt on ly to the CPU interface that requested the interrupt
0b11: reserved</description>
                </bitField>
                <bitField access="Read Write" enumerationId="ICDSGIR_CPUTargetList_ENUM" high_bit="23" low_bit="16" name="CPUTargetList">
                    <gui_name language="en">CPUTargetList</gui_name>
                    <description language="en">When TargetListFilter is 0b00, defines the CPU interfaces the Distributor must send the interrupt to.
Each bit refers to the corresponding CPU interface.</description>
                </bitField>
                <bitField access="Read Write" enumerationId="ICDSGIR_SATT_ENUM" high_bit="15" low_bit="15" name="SATT">
                    <gui_name language="en">SATT</gui_name>
                    <description language="en">Determines the condition for sending the SGI specified in the SGIINTID field to a specified CPU interfaces:
0: only if the SGI is configured as Secure on that interface.
1: only if the SGI is configured as Non-secure on that interface.</description>
                </bitField>
                <bitField access="Read Write" high_bit="14" low_bit="4" name="SBZ">
                    <gui_name language="en">SBZ</gui_name>
                    <description language="en">SBZ</description>
                </bitField>
                <bitField access="Read Write" high_bit="3" low_bit="0" name="SGIINTID">
                    <gui_name language="en">SGIINTID</gui_name>
                    <description language="en">The Interrupt ID of the SGI to send to the specifed CPU itnerfaces.</description>
                </bitField>
            </register>
        </peripheral>
      
        <enumeration name="AFI_RDCHAN_CTRL_FabricOutCmdEn_ENUM">
            <enumItem name="The_maximum_number_of_outstanding_read_commands_is_always_taken_from_APB_register_field_rdIssueCap0" number="0x0"/>
            <enumItem name="The_maximum_outstanding_number_of" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDCHAN_CTRL_FabricQosEn_ENUM">
            <enumItem name="The_qos_bits_are_derived_from_APB_register_AFI_RDQOSstaticQos" number="0x0"/>
            <enumItem name="The_qos_bits_are_dynamically_driven_from_the_fabric_input_axds_arqos_3_0" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDCHAN_CTRL_n32BitEn_ENUM">
            <enumItem name="_64_bit_enabled" number="0x0"/>
            <enumItem name="_32_bit_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDCHAN_ISSUINGCAP_rdIssueCap1_ENUM">
            <enumItem name="_1_command" number="0x0"/>
            <enumItem name="_2_commands__3b111" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDCHAN_ISSUINGCAP_rdIssueCap0_ENUM">
            <enumItem name="_1_command" number="0x0"/>
            <enumItem name="_2_commands__3b111" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDQOS_staticQos_ENUM">
            <enumItem name="Lowest_Priority__4b1111" number="0x0"/>
        </enumeration>
        <enumeration name="AFI_RDDATAFIFO_LEVEL_FifoLevel_ENUM">
            <enumItem name="_0_Entries" number="0x0"/>
            <enumItem name="_1_Entry__8h8F" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_RDDEBUG_OutRdCmds_ENUM">
            <enumItem name="_0" number="0x0"/>
            <enumItem name="_1" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_CTRL_WrDataThreshold_ENUM">
            <enumItem name="Send_Write_Command_When_1_data_beat_is_pushed_into_the_Write_Data_FIFO" number="0x0"/>
            <enumItem name="Send_Write_Command_When_2_data_beats_are_pushed_into_the_Write_Data_FIFO__4b1111" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_CTRL_WrCmdReleaseMode_ENUM">
            <enumItem name="Release_Wr_Command_on_Wlast_enqueue_into_Write_Data_FIFO" number="0x0"/>
            <enumItem name="Release_Wr_Command_on_a_particular_threshold_being_reached_on_the_enqueue_into_Write_Data_FIFO_The_WrDataThreshold_field_is_used_to_program_the_actual_threshold" number="0x1"/>
            <enumItem name="Release_Wr_Command_immediately_it_is_received" number="0x2"/>
            <enumItem name="Reserved" number="0x3"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_CTRL_FabricOutCmdEn_ENUM">
            <enumItem name="The_maximum_number_of_outstanding_write_commands_is_always_taken_from_APB_register_field_wrIssueCap01" number="0x0"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_CTRL_FabricQosEn_ENUM">
            <enumItem name="The_qos_bits_are_derived_from_APB_register_AFI_WRQOSstaticQos1" number="0x0"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_CTRL_n32BitEn_ENUM">
            <enumItem name="_64_bit_enabled" number="0x0"/>
            <enumItem name="_32_bit_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_ISSUINGCAP_wrIssueCap1_ENUM">
            <enumItem name="_1_command" number="0x0"/>
            <enumItem name="_2_commands__3b111" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRCHAN_ISSUINGCAP_wrIssueCap0_ENUM">
            <enumItem name="_1_command" number="0x0"/>
            <enumItem name="_2_commands__3b111" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRQOS_staticQos_ENUM">
            <enumItem name="Lowest_Priority__4b1111" number="0x0"/>
        </enumeration>
        <enumeration name="AFI_WRDATAFIFO_LEVEL_FifoLevel_ENUM">
            <enumItem name="_0_Entries" number="0x0"/>
            <enumItem name="_1_Entry__8h8F" number="0x1"/>
        </enumeration>
        <enumeration name="AFI_WRDEBUG_OutWrCmds_ENUM">
            <enumItem name="_0" number="0x0"/>
            <enumItem name="_1" number="0x1"/>
        </enumeration>
        <enumeration name="ADDR0_MISC_AWADDR_TRIG_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR0_MISC_AWADDR_FILT_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR0_MISC_ARADDR_TRIG_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR0_MISC_ARADDR_FILT_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR1_MISC_AWADDR_TRIG_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR1_MISC_AWADDR_FILT_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR1_MISC_ARADDR_TRIG_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR1_MISC_ARADDR_FILT_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR2_MISC_AWADDR_TRIG_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR2_MISC_AWADDR_FILT_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR2_MISC_ARADDR_TRIG_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR2_MISC_ARADDR_FILT_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR3_MISC_AWADDR_TRIG_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR3_MISC_AWADDR_FILT_EXCINC_ENUM">
            <enumItem name="awaddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awaddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR3_MISC_ARADDR_TRIG_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ADDR3_MISC_ARADDR_FILT_EXCINC_ENUM">
            <enumItem name="araddr_range_detector_sets_up_an_inclusion_range" number="0x2"/>
            <enumItem name="araddr_range_detector_sets_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID0_MISC_WRID_TRIG_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID0_MISC_WRID_FILT_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID0_MISC_RDID_TRIG_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID0_MISC_RDID_FILT_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID1_MISC_WRID_TRIG_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID1_MISC_WRID_FILT_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID1_MISC_RDID_TRIG_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID1_MISC_RDID_FILT_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID2_MISC_WRID_TRIG_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID2_MISC_WRID_FILT_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID2_MISC_RDID_TRIG_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID2_MISC_RDID_FILT_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID3_MISC_WRID_TRIG_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID3_MISC_WRID_FILT_EXCINC_ENUM">
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="awid_wid_bid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID3_MISC_RDID_TRIG_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="ID3_MISC_RDID_FILT_EXCINC_ENUM">
            <enumItem name="arid_rid_range_detectors_set_up_an_inclusion_range" number="0x2"/>
            <enumItem name="arid_rid_range_detectors_set_up_an_exclusion_range" number="0x3"/>
        </enumeration>
        <enumeration name="AXI_SEL_SEL_ENUM">
            <enumItem name="AXI_bus_to_DDR_slave_port_0" number="0x4"/>
            <enumItem name="AXI_bus_to_DDR_slave_port_1" number="0x5"/>
            <enumItem name="AXI_bus_to_DDR_slave_port_2" number="0x6"/>
            <enumItem name="AXI_bus_to_DDR_slave_port_3" number="0x7"/>
        </enumeration>
        <enumeration name="SRR_CEN_ENUM">
            <enumItem name="The_CAN_controller_is_in_the_Configuration_mode" number="0x0"/>
            <enumItem name="The_CAN_controller_is_in_Loop_Back_Sleep_or_Normal_mode_depending_on_the_LBACK_and_SLEEP_bits_in_the_MSR" number="0x1"/>
        </enumeration>
        <enumeration name="SRR_SRST_ENUM">
            <enumItem name="CAN_controller_is_reset" number="0x1"/>
        </enumeration>
        <enumeration name="MSR_SNOOP_ENUM">
            <enumItem name="CAN_controller_is_in_Normal_Loop_Back_Configuration_or_Sleep_mode" number="0x0"/>
            <enumItem name="CAN_controller_is_in_Snoop_mode" number="0x1"/>
        </enumeration>
        <enumeration name="MSR_LBACK_ENUM">
            <enumItem name="CAN_controller_is_in_Normal_Snoop_Configuration_or_Sleep_mode" number="0x0"/>
            <enumItem name="CAN_controller_is_in_Loop_Back_mode" number="0x1"/>
        </enumeration>
        <enumeration name="MSR_SLEEP_ENUM">
            <enumItem name="CAN_controller_is_in_Normal_Snoop_Configuration_or_Loop_Back_mode" number="0x0"/>
            <enumItem name="CAN_controller_is_in_Sleep_mode" number="0x1"/>
        </enumeration>
        <enumeration name="ESR_ACKER_ENUM">
            <enumItem name="Indicates_an_acknowledgement_error_has_not" number="0x0"/>
            <enumItem name="Indicates_an_acknowledgement_error_has" number="0x1"/>
        </enumeration>
        <enumeration name="ESR_BERR_ENUM">
            <enumItem name="Indicates_a_bit_error_has_not_occurred_on_the_bus" number="0x0"/>
            <enumItem name="Indicates_a_bit_error_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="ESR_STER_ENUM">
            <enumItem name="Indicates_a_stuff_error_has_not_occurred_on_the" number="0x0"/>
            <enumItem name="Indicates_a_stuff_error_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="ESR_FMER_ENUM">
            <enumItem name="Indicates_a_form_error_has_not_occurred_on_the" number="0x0"/>
            <enumItem name="Indicates_a_form_error_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="ESR_CRCER_ENUM">
            <enumItem name="Indicates_a_CRC_error_has_not_occurred_on_the" number="0x0"/>
            <enumItem name="Indicates_a_CRC_error_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="SR_SNOOP_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_not_in_Snoop_mode" number="0x0"/>
            <enumItem name="Indicates_the_CAN_controller_is_in_Snoop_Mode" number="0x1"/>
        </enumeration>
        <enumeration name="SR_ACFBSY_ENUM">
            <enumItem name="Acceptance_Filter_Mask_Registers_and_the" number="0x0"/>
            <enumItem name="Acceptance_Filter_Mask_Registers_and" number="0x1"/>
        </enumeration>
        <enumeration name="SR_TXFLL_ENUM">
            <enumItem name="Indicates_the_TX_FIFO_is_not_full" number="0x0"/>
            <enumItem name="Indicates_the_TX_FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="SR_TXBFLL_ENUM">
            <enumItem name="Indicates_the_High_Priority_Transmit_Buffer_is_not_full" number="0x0"/>
            <enumItem name="Indicates_the_High_Priority_Transmit_Buffer_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="SR_ESTAT_ENUM">
            <enumItem name="Indicates_Configuration_Mode_CONFIG" number="0x0"/>
            <enumItem name="Indicates_Error_Active_State" number="0x1"/>
            <enumItem name="Indicates_Bus_Off_State" number="0x2"/>
            <enumItem name="Indicates_Error_Passive_State" number="0x3"/>
        </enumeration>
        <enumeration name="SR_ERRWRN_ENUM">
            <enumItem name="Neither_of_the_error_counters_has_a_value_greater" number="0x0"/>
            <enumItem name="One_or_more_error_counters_have_a_value_greater" number="0x1"/>
        </enumeration>
        <enumeration name="SR_BBSY_ENUM">
            <enumItem name="Indicates_that_the_CAN_controller_is_either_in" number="0x0"/>
            <enumItem name="Indicates_that_the_CAN_controller_is_either" number="0x1"/>
        </enumeration>
        <enumeration name="SR_BIDLE_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_either_in" number="0x0"/>
            <enumItem name="Indicates_no_bus_communication_is_taking_place" number="0x1"/>
        </enumeration>
        <enumeration name="SR_NORMAL_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_not_in_Normal" number="0x0"/>
            <enumItem name="Indicates_the_CAN_controller_is_in_Normal_Mode" number="0x1"/>
        </enumeration>
        <enumeration name="SR_SLEEP_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_not_in_Sleep_mode" number="0x0"/>
            <enumItem name="Indicates_the_CAN_controller_is_in_Sleep_mode" number="0x1"/>
        </enumeration>
        <enumeration name="SR_LBACK_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_not_in_Loop_Back" number="0x0"/>
            <enumItem name="Indicates_the_CAN_controller_is_in_Loop_Back" number="0x1"/>
        </enumeration>
        <enumeration name="SR_CONFIG_ENUM">
            <enumItem name="Indicates_the_CAN_controller_is_not_in" number="0x0"/>
            <enumItem name="Indicates_the_CAN_controller_is_in_Configuration" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ETXFEMP_ENUM">
            <enumItem name="Disable_interrupt_generation_if_TXFEMP_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_TXFEMP_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ETXFWMEMP_ENUM">
            <enumItem name="Disable_interrupt_generation_if_TXFWMEMP_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_TXFWMEMP_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ERXFWMFLL_ENUM">
            <enumItem name="Disable_interrupt_generation_if_RXFWMFLL_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_RXFWMFLL_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_EWKUP_ENUM">
            <enumItem name="Disable_interrupt_generation_if_WKUP_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_WKUP_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ESLP_ENUM">
            <enumItem name="Disable_interrupt_generation_if_SLP_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_SLP_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_EBSOFF_ENUM">
            <enumItem name="Disable_interrupt_generation_if_BSOFF_bit_in_ISR_is_set" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_BSOFF_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_EERROR_ENUM">
            <enumItem name="Disable_interrupt_generation_if_ERROR_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_ERROR_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ERXNEMP_ENUM">
            <enumItem name="Disable_interrupt_generation_if_RXNEMP_bit_in_ISR" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_RXNEMP_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ERXOFLW_ENUM">
            <enumItem name="Disable_interrupt_generation_if_RXOFLW_bit_in_ISR" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_RXOFLW_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ERXUFLW_ENUM">
            <enumItem name="Disable_interrupt_generation_if_RXUFLW_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_RXUFLW_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ERXOK_ENUM">
            <enumItem name="Disable_interrupt_generation_if_RXOK_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_RXOK_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ETXBFLL_ENUM">
            <enumItem name="Disable_interrupt_generation_if_TXBFLL_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_TXBFLL_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ETXFLL_ENUM">
            <enumItem name="Disable_interrupt_generation_if_TXFLL_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_TXFLL_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="IER_ETXOK_ENUM">
            <enumItem name="Disable_interrupt_generation_if_TXOK_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_TXOK_bit_in_ISR_is_set" number="0x1"/>
        </enumeration>
        <enumeration name="IER_EARBLST_ENUM">
            <enumItem name="Disable_interrupt_generation_if_ARBLST_bit_in_ISR_is" number="0x0"/>
            <enumItem name="Enable_interrupt_generation_if_ARBLST_bit_in_ISR_is" number="0x1"/>
        </enumeration>
        <enumeration name="TXFIFO_ID_SRRRTR_ENUM">
            <enumItem name="Indicates_that_the_message_frame_is_a_Data" number="0x0"/>
            <enumItem name="Indicates_that_the_message_frame_is_a_Remote" number="0x1"/>
        </enumeration>
        <enumeration name="TXFIFO_ID_IDE_ENUM">
            <enumItem name="Indicates_the_use_of_a_Standard_Message" number="0x0"/>
            <enumItem name="Indicates_the_use_of_an_Extended_Message" number="0x1"/>
        </enumeration>
        <enumeration name="TXFIFO_ID_RTR_ENUM">
            <enumItem name="Indicates_the_message_object_is_a_Data_Frame" number="0x0"/>
            <enumItem name="Indicates_the_message_object_is_a_Remote_Frame" number="0x1"/>
        </enumeration>
        <enumeration name="TXHPB_ID_SRRRTR_ENUM">
            <enumItem name="Indicates_that_the_message_frame_is_a_Data" number="0x0"/>
            <enumItem name="Indicates_that_the_message_frame_is_a_Remote" number="0x1"/>
        </enumeration>
        <enumeration name="TXHPB_ID_IDE_ENUM">
            <enumItem name="Indicates_the_use_of_a_Standard_Message" number="0x0"/>
            <enumItem name="Indicates_the_use_of_an_Extended_Message" number="0x1"/>
        </enumeration>
        <enumeration name="TXHPB_ID_RTR_ENUM">
            <enumItem name="Indicates_the_message_object_is_a_Data_Frame" number="0x0"/>
            <enumItem name="Indicates_the_message_object_is_a_Remote_Frame" number="0x1"/>
        </enumeration>
        <enumeration name="RXFIFO_ID_SRRRTR_ENUM">
            <enumItem name="Indicates_that_the_message_frame_is_a_Data" number="0x0"/>
            <enumItem name="Indicates_that_the_message_frame_is_a_Remote" number="0x1"/>
        </enumeration>
        <enumeration name="RXFIFO_ID_IDE_ENUM">
            <enumItem name="Indicates_the_use_of_a_Standard_Message" number="0x0"/>
            <enumItem name="Indicates_the_use_of_an_Extended_Message" number="0x1"/>
        </enumeration>
        <enumeration name="RXFIFO_ID_RTR_ENUM">
            <enumItem name="Indicates_the_message_object_is_a_Data_Frame" number="0x0"/>
            <enumItem name="Indicates_the_message_object_is_a_Remote_Frame" number="0x1"/>
        </enumeration>
        <enumeration name="AFR_UAF4_ENUM">
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_4_and_0" number="0x0"/>
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_4_and" number="0x1"/>
        </enumeration>
        <enumeration name="AFR_UAF3_ENUM">
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_3_and_0" number="0x0"/>
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_3_and" number="0x1"/>
        </enumeration>
        <enumeration name="AFR_UAF2_ENUM">
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_2_and_0" number="0x0"/>
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_2_and" number="0x1"/>
        </enumeration>
        <enumeration name="AFR_UAF1_ENUM">
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_1_and_0" number="0x0"/>
            <enumItem name="Indicates_Acceptance_Filter_Mask_Register_1_and" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR1_AMIDH_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR1_AMSRR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR1_AMIDE_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR1_AMIDL_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR1_AMRTR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR2_AMIDH_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR2_AMSRR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR2_AMIDE_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR2_AMIDL_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR2_AMRTR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR3_AMIDH_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR3_AMSRR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR3_AMIDE_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR3_AMIDL_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR3_AMRTR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR4_AMIDH_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR4_AMSRR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR4_AMIDE_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR4_AMIDL_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="AFMR4_AMRTR_ENUM">
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance_0" number="0x0"/>
            <enumItem name="Indicates_the_corresponding_bit_in_Acceptance" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINTACK_INTACK_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="CTITRIGOUT_is_acknowledged_and_is_cleared_when_MAPTRIGOUT_is_LOW" number="0x1"/>
        </enumeration>
        <enumeration name="CTIAPPCLEAR_APPCLEAR_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="application_trigger_disabled_in_the_CTIAPPSET_register" number="0x1"/>
        </enumeration>
        <enumeration name="CTIAPPPULSE_APPULSE_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="channel_event_pulse_generated_for_one_CTICLK_period" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN0_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN1_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN2_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN3_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN4_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN5_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN6_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIINEN7_TRIGINEN_ENUM">
            <enumItem name="disables_the_CTITRIGIN_signal_from_generating_an_event_on_the_respective_channel_of_the" number="0x0"/>
            <enumItem name="enables_the_CTITRIGIN_signal_to_generate_an_event_on_the_respective_channel_of_the_CTM" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN0_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN1_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN2_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN3_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN4_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN5_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN6_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTIOUTEN7_TRIGOUTEN_ENUM">
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_not_routed_to_the_CTITRIGOUT_output" number="0x0"/>
            <enumItem name="the_channel_input_CTICHIN_from_the_CTM_is_routed_to_the_CTITRIGOUT_output" number="0x1"/>
        </enumeration>
        <enumeration name="CTITRIGINSTATUS_TRIGINSTATUS_ENUM">
            <enumItem name="CTITRIGIN_is_inactive" number="0x0"/>
            <enumItem name="CTITRIGIN_is_active" number="0x1"/>
        </enumeration>
        <enumeration name="CTITRIGOUTSTATUS_TRIGOUTSTATUS_ENUM">
            <enumItem name="CTITRIGOUT_is_inactive_reset" number="0x0"/>
            <enumItem name="CTITRIGOUT_is_active" number="0x1"/>
        </enumeration>
        <enumeration name="CTICHINSTATUS_CTCHINSTATUS_ENUM">
            <enumItem name="CTICHIN_is_inactive" number="0x0"/>
            <enumItem name="CTICHIN_is_active" number="0x1"/>
        </enumeration>
        <enumeration name="CTICHOUTSTATUS_CTCHOUTSTATUS_ENUM">
            <enumItem name="CTICHOUT_is_inactive_reset" number="0x0"/>
            <enumItem name="CTICHOUT_is_active" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_dis_auto_refresh_ENUM">
            <enumItem name="do_not_disable_auto_refresh_generated_by_the_controller_This_input_is_changeable_on_the_fly" number="0x0"/>
            <enumItem name="disable_auto_refresh_generated_by_the_controller_This_input_is_changeable_on_the_fly" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_dis_act_bypass_ENUM">
            <enumItem name="Do_not_disable_bypass_path_for_high_priority_read_activates" number="0x0"/>
            <enumItem name="disable_bypass_path_for_high_priority_read_activates" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_dis_rd_bypass_ENUM">
            <enumItem name="Do_not_disable_bypass_path_for_high_priority_read_page_hits" number="0x0"/>
            <enumItem name="disable_bypass_path_for_high_priority_read_page_hits" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_burst8_refresh_ENUM">
            <enumItem name="single_refresh" number="0x0"/>
            <enumItem name="burst_of_2" number="0x1"/>
            <enumItem name="burst_of_8_refresh" number="0x7"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_data_bus_width_ENUM">
            <enumItem name="_32_bit_DDR_bus" number="0x0"/>
            <enumItem name="_16_bit_DDR_bus" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_powerdown_en_ENUM">
            <enumItem name="DDRC_powerdown_disabled" number="0x0"/>
            <enumItem name="the_controller_goes_into_power_down_after_a_programmable_number_of_cycles_Maximum_idle_clocks_before_power_down_reg_ddrc_powerdown_to_x32" number="0x1"/>
        </enumeration>
        <enumeration name="ddrc_ctrl_reg_ddrc_soft_rstb_ENUM">
            <enumItem name="Resets_the_controller" number="0x0"/>
            <enumItem name="Takes_the_controller_out_of_reset" number="0x1"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_addrmap_4bank_ram_ENUM">
            <enumItem name="Set_the_address_map_for_4_Bank_RAMs" number="0x1"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_addrmap_open_bank_ENUM">
            <enumItem name="Set_the_address_map_to_Open_Bank_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_addrmap_cs_bit1_ENUM">
            <enumItem name="Internal_Base" number="0x2"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_diff_rank_rd_2cycle_gap_ENUM">
            <enumItem name="schedule_a_1_cycle_gap_in_data_responses_when_performing_consecutive_reads_to_different_ranks" number="0x0"/>
            <enumItem name="schedule_2_cycle_gap_for_the_same" number="0x1"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_wr_odt_block_ENUM">
            <enumItem name="block_read_write_scheduling_for_1_cycle_when" number="0x0"/>
            <enumItem name="block_read_write_scheduling_for_2_cycles_when_Write_requires_changing_ODT_settings" number="0x1"/>
            <enumItem name="block_read_write_scheduling_for_3_cycles_when_Write_requires_changing_ODT_settings" number="0x2"/>
            <enumItem name="Reserved" number="0x3"/>
        </enumeration>
        <enumeration name="Two_rank_cfg_reg_ddrc_active_ranks_ENUM">
            <enumItem name="One_Rank" number="0x1"/>
            <enumItem name="Two_Ranks" number="0x3"/>
            <enumItem name="bit_represents_one_rank" number="0xeac"/>
        </enumeration>
        <enumeration name="DRAM_param_reg2_reg_ddrc_rd2pre_ENUM">
            <enumItem name="LPDDR2____BL_2__tRTP" number="0x1"/>
            <enumItem name="DDR2____AL__BL_2__maxtRTP_2" number="0x2"/>
        </enumeration>
        <enumeration name="DRAM_param_reg2_reg_ddrc_write_latency_ENUM">
            <enumItem name="__" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg3_reg_ddrc_dis_pad_pd_ENUM">
            <enumItem name="Enable_the_pad_power_down_feature" number="0x0"/>
            <enumItem name="disable_the_pad_power_down_feature" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg3_reg_ddrc_mobile_ENUM">
            <enumItem name="mobile_LPDDR_DRAM_device_in_use" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg3_reg_ddrc_sdram_ENUM">
            <enumItem name="non_sdram_device" number="0x0"/>
            <enumItem name="sdram_device" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg4_reg_ddrc_mr_type_ENUM">
            <enumItem name="write" number="0x0"/>
            <enumItem name="read" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg4_ddrc_reg_mr_wr_busy_ENUM">
            <enumItem name="Indicates_that_the_core_can_initiate_a_mode_register_write___read_operation" number="0x0"/>
            <enumItem name="Indicates_that_mode_register_write___read_operation_is_in_progress" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg4_reg_ddrc_mr_addr_ENUM">
            <enumItem name="MR0" number="0x0"/>
            <enumItem name="MR1" number="0x1"/>
            <enumItem name="MR2" number="0x2"/>
            <enumItem name="MR3" number="0x3"/>
        </enumeration>
        <enumeration name="DRAM_param_reg4_reg_ddrc_prefer_write_ENUM">
            <enumItem name="Bank_selector_prefers_writes_over_reads" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_param_reg4_reg_ddrc_en_2t_timing_mode_ENUM">
            <enumItem name="DDRC_will_use_1T_timing" number="0x0"/>
            <enumItem name="DDRC_will_use_2T_timing" number="0x1"/>
        </enumeration>
        <enumeration name="DRAM_burst8_rdwr_reg_ddrc_burst_rdwr_ENUM">
            <enumItem name="Burst_length_of_4" number="0x2"/>
            <enumItem name="Burst_length_of_8" number="0x4"/>
            <enumItem name="Burst_length_of_16_only_supported_for_LPDDR_AND_LPDDR2" number="0x8"/>
        </enumeration>
        <enumeration name="DRAM_addr_map_bank_reg_ddrc_addrmap_col_b6_ENUM">
            <enumItem name="Internal_base" number="0x9"/>
        </enumeration>
        <enumeration name="DRAM_addr_map_bank_reg_ddrc_addrmap_col_b5_ENUM">
            <enumItem name="Internal_base" number="0x9"/>
        </enumeration>
        <enumeration name="DRAM_addr_map_col_reg_ddrc_addrmap_col_b8_ENUM">
            <enumItem name="Internal_Base" number="0x3"/>
        </enumeration>
        <enumeration name="DRAM_addr_map_col_reg_ddrc_addrmap_col_b3_ENUM">
            <enumItem name="Internal_Base" number="0x6"/>
        </enumeration>
        <enumeration name="phy_cmd_timeout_rddata_cpt_reg_phy_clk_stall_level_ENUM">
            <enumItem name="stall_clock_for_DLL_aging_control" number="0x1"/>
        </enumeration>
        <enumeration name="phy_cmd_timeout_rddata_cpt_reg_phy_rdc_fifo_rst_err_cnt_clr_ENUM">
            <enumItem name="no_clear_1" number="0x0"/>
        </enumeration>
        <enumeration name="mode_sts_reg_ddrc_reg_dbg_stall_ENUM">
            <enumItem name="indicates_that_commands_are_being_accepted" number="0x0"/>
            <enumItem name="indicates_that_no_commands_are_accepted_by_the_controller" number="0x1"/>
        </enumeration>
        <enumeration name="mode_sts_reg_ddrc_reg_operating_mode_ENUM">
            <enumItem name="DDRC_Init" number="0x0"/>
            <enumItem name="Normal_operation" number="0x1"/>
            <enumItem name="Power_down_mode" number="0x2"/>
            <enumItem name="Self_refresh_mode" number="0x3"/>
            <enumItem name="and_above___deep_power_down_mode_LPDDR2_only" number="0x4"/>
        </enumeration>
        <enumeration name="ctrl_reg2_reg_arb_go2critical_en_ENUM">
            <enumItem name="Set_reg_ddrc_go2critical_wr_and_reg_ddrc_go2critical_rd_signals_going_to_DDRC_based_on_urgent_input_coming_from_AXI_master_0" number="0x1"/>
        </enumeration>
        <enumeration name="deep_pwrdwn_reg_deeppowerdown_en_ENUM">
            <enumItem name="Controller_puts_the_DRAM_into_Deep_Powerdown_mode_when_the_transaction_store_is_empty_0" number="0x1"/>
        </enumeration>
        <enumeration name="reg_2c_reg_ddrc_dfi_rd_data_eye_train_ENUM">
            <enumItem name="Read_Data_Eye_training_mode_has_been_enabled_as_part_of_init_sequence_Only_present_in_designs_that_support_DDR3_or_LPDDR2_devices" number="0x1"/>
        </enumeration>
        <enumeration name="reg_2c_reg_ddrc_dfi_rd_dqs_gate_level_ENUM">
            <enumItem name="Read_DQS_Gate_Leveling_mode_has_been_enabled_as_part_of_init_sequence_Valid_only_for_DDR3_DFI_designs_0__Read_DQS_gate_leveling_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg_2c_reg_ddrc_dfi_wr_level_en_ENUM">
            <enumItem name="Write_leveling_mode_has_been_enabled_as_part_of_init_sequence_Valid_only_for_DDR3_DFI_designs_0" number="0x1"/>
        </enumeration>
        <enumeration name="ECC_scrub_reg_ddrc_dis_scrub_ENUM">
            <enumItem name="Enable_ECC_scrubs_Valid_only_when_reg_ddrc_ecc_mode___3b100" number="0x0"/>
            <enumItem name="Disable_ECC_scrubs" number="0x1"/>
        </enumeration>
        <enumeration name="ECC_scrub_reg_ddrc_ecc_mode_ENUM">
            <enumItem name="No_ECC" number="0x0"/>
            <enumItem name="Reserved" number="0x1"/>
            <enumItem name="Parity" number="0x2"/>
            <enumItem name="Reserved_3" number="0x3"/>
            <enumItem name="SEC_DED_over_1_beat" number="0x4"/>
            <enumItem name="SEC_DED_over_multiple_beats" number="0x5"/>
            <enumItem name="Device_Correction" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="PHY_Config0_reg_phy_board_lpbk_rx_ENUM">
            <enumItem name="This_Slice_behaves_as_Receiver_for_board_loopback_0" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config0_reg_phy_data_slice_in_use_ENUM">
            <enumItem name="read_data_responses_are_ignored" number="0x0"/>
            <enumItem name="data_slice_is_valid" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config1_reg_phy_board_lpbk_rx_ENUM">
            <enumItem name="This_Slice_behaves_as_Receiver_for_board_loopback_0" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config1_reg_phy_data_slice_in_use_ENUM">
            <enumItem name="read_data_responses_are_ignored" number="0x0"/>
            <enumItem name="data_slice_is_valid" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config2_reg_phy_board_lpbk_rx_ENUM">
            <enumItem name="This_Slice_behaves_as_Receiver_for_board_loopback_0" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config2_reg_phy_data_slice_in_use_ENUM">
            <enumItem name="read_data_responses_are_ignored" number="0x0"/>
            <enumItem name="data_slice_is_valid" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config3_reg_phy_board_lpbk_rx_ENUM">
            <enumItem name="This_Slice_behaves_as_Receiver_for_board_loopback_0" number="0x1"/>
        </enumeration>
        <enumeration name="PHY_Config3_reg_phy_data_slice_in_use_ENUM">
            <enumItem name="read_data_responses_are_ignored" number="0x0"/>
            <enumItem name="data_slice_is_valid" number="0x1"/>
        </enumeration>
        <enumeration name="phy_rd_dqs_cfg0_reg_phy_rd_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_read_DQS_slave_DLL_with_the_value_of_the_debug_rd_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_rd_dqs_cfg1_reg_phy_rd_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_read_DQS_slave_DLL_with_the_value_of_the_debug_rd_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_rd_dqs_cfg2_reg_phy_rd_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_read_DQS_slave_DLL_with_the_value_of_the_debug_rd_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_rd_dqs_cfg3_reg_phy_rd_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_read_DQS_slave_DLL_with_the_value_of_the_debug_rd_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_wr_dqs_cfg0_reg_phy_wr_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_DQS_slave_DLL_with_the_value_of_the_reg_phy_wr_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_wr_dqs_cfg1_reg_phy_wr_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_DQS_slave_DLL_with_the_value_of_the_reg_phy_wr_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_wr_dqs_cfg2_reg_phy_wr_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_DQS_slave_DLL_with_the_value_of_the_reg_phy_wr_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_wr_dqs_cfg3_reg_phy_wr_dqs_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_DQS_slave_DLL_with_the_value_of_the_reg_phy_wr_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_we_cfg0_reg_phy_fifo_we_in_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_fifo_we_X_slave_DLL_with_the_value_of_the_debug_fifo_we_in_delayX_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_we_cfg1_reg_phy_fifo_we_in_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_fifo_we_X_slave_DLL_with_the_value_of_the_debug_fifo_we_in_delayX_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_we_cfg2_reg_phy_fifo_we_in_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_fifo_we_X_slave_DLL_with_the_value_of_the_debug_fifo_we_in_delayX_bus" number="0x1"/>
        </enumeration>
        <enumeration name="phy_we_cfg3_reg_phy_fifo_we_in_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_fifo_we_X_slave_DLL_with_the_value_of_the_debug_fifo_we_in_delayX_bus" number="0x1"/>
        </enumeration>
        <enumeration name="wr_data_slv0_reg_phy_wr_data_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_data_slave_DLL_with_the_value_of_the_reg_phy_wr_data_slave_force_bus" number="0x1"/>
        </enumeration>
        <enumeration name="wr_data_slv1_reg_phy_wr_data_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_data_slave_DLL_with_the_value_of_the_reg_phy_wr_data_slave_force_bus" number="0x1"/>
        </enumeration>
        <enumeration name="wr_data_slv2_reg_phy_wr_data_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_data_slave_DLL_with_the_value_of_the_reg_phy_wr_data_slave_force_bus" number="0x1"/>
        </enumeration>
        <enumeration name="wr_data_slv3_reg_phy_wr_data_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_write_data_slave_DLL_with_the_value_of_the_reg_phy_wr_data_slave_force_bus" number="0x1"/>
        </enumeration>
        <enumeration name="reg_64_reg_phy_lpddr_ENUM">
            <enumItem name="mobile_LPDDR_DRAM_device_in_use_0_non_LPDDR_DRAM_device_in_use" number="0x1"/>
        </enumeration>
        <enumeration name="reg_64_reg_phy_ctrl_slave_force_ENUM">
            <enumItem name="overwrite_the_delay_tap_value_for_address_command_timing_slave_DLL_with_the_value_of_the_reg_phy_rd_dqs_slave_delay_bus" number="0x1"/>
        </enumeration>
        <enumeration name="reg_64_reg_phy_invert_clkout_ENUM">
            <enumItem name="core_clock_is_passed_on_to_DRAM" number="0x0"/>
            <enumItem name="inverted_core_clock_is_passed_on_to_DRAM" number="0x1"/>
        </enumeration>
        <enumeration name="reg_64_reg_phy_bist_mode_ENUM">
            <enumItem name="constant_pattern_0_repeated_on_each_DQ_bit" number="0x0"/>
            <enumItem name="low_freq_pattern_00001111_repeated_on_each_DQ_bit" number="0x1"/>
            <enumItem name="PRBS_pattern_27_1_PRBS_pattern_repeated_on_each_DQ_bit_Each_DQ_bit_always_has_same_data_value_except_when_early_shifting_in_PRBS_mode_is_requested" number="0x2"/>
        </enumeration>
        <enumeration name="reg_64_reg_phy_at_spd_atpg_ENUM">
            <enumItem name="run_scan_test_at_slow_clock_speed_but_with_high_coverage" number="0x0"/>
            <enumItem name="run_scan_test_at_full_clock_speed_but_with_less_coverage" number="0x1"/>
        </enumeration>
        <enumeration name="reg_65_reg_phy_use_rd_data_eye_level_ENUM">
            <enumItem name="Use_register_programmed_ratio_values" number="0x0"/>
            <enumItem name="Use_ratio_for_delay_line_calculated_by_data_eye_leveling" number="0x1"/>
        </enumeration>
        <enumeration name="reg_65_reg_phy_use_rd_dqs_gate_level_ENUM">
            <enumItem name="Use_register_programmed_ratio_values" number="0x0"/>
            <enumItem name="Use_ratio_for_delay_line_calculated_by_DQS_gate_leveling" number="0x1"/>
        </enumeration>
        <enumeration name="reg_65_reg_phy_use_wr_level_ENUM">
            <enumItem name="Use_register_programmed_ratio_values" number="0x0"/>
            <enumItem name="Use_ratio_for_delay_line_calculated_by_write_leveling" number="0x1"/>
        </enumeration>
        <enumeration name="lpddr_ctrl0_reg_ddrc_derate_enable_ENUM">
            <enumItem name="Timing_parameter_derating_is_disabled_1" number="0x0"/>
        </enumeration>
        <enumeration name="CTRL_PCFG_POR_CNT_4K_ENUM">
            <enumItem name="use_64K_timer" number="0x0"/>
            <enumItem name="use_4K_timer" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_PCAP_PR_ENUM">
            <enumItem name="ICAP_as_Internal_FPGA_Partial_Reconfiguration_Path" number="0x0"/>
            <enumItem name="PCAP_as_Internal" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_MULTIBOOT_EN_ENUM">
            <enumItem name="Boot_from_default_boot_image_base_address" number="0x0"/>
            <enumItem name="Boot_from_multi_boot_offset_address" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_USER_MODE_ENUM">
            <enumItem name="CPU_is_running_in_ROM_Mode" number="0x0"/>
            <enumItem name="CPU_is_running_in_User_Mode" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_PCFG_AES_FUSE_ENUM">
            <enumItem name="BBRAM" number="0x0"/>
            <enumItem name="eFuse" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_PCFG_AES_EN_ENUM">
            <enumItem name="Disable_AES_engine" number="0x0"/>
        </enumeration>
        <enumeration name="CTRL_SEU_EN_ENUM">
            <enumItem name="Ignore_SEU_signal_from_FPGA" number="0x0"/>
            <enumItem name="Reset_PS_when_SEU_is_on" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_SEC_EN_ENUM">
            <enumItem name="PS_is_non_secured" number="0x0"/>
            <enumItem name="PS_is_secured" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_SPNIDEN_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_SPIDEN_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_NIDEN_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_DBGEN_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="CTRL_DAP_EN_ENUM">
            <enumItem name="Enable_ARM_DAP" number="0x7"/>
        </enumeration>
        <enumeration name="LOCK_AES_FUSE_LOCK_ENUM">
            <enumItem name="Open" number="0x0"/>
            <enumItem name="Lock" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_AES_EN_LOCK_ENUM">
            <enumItem name="Open" number="0x0"/>
            <enumItem name="Lock" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_SEU_LOCK_ENUM">
            <enumItem name="Open" number="0x0"/>
            <enumItem name="Lock" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_SEC_LOCK_ENUM">
            <enumItem name="Open" number="0x0"/>
            <enumItem name="Locked" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_DBG_LOCK_ENUM">
            <enumItem name="Open" number="0x0"/>
            <enumItem name="Locked" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_RFIFO_TH_ENUM">
            <enumItem name="One_fourth" number="0x0"/>
            <enumItem name="Half_full_for_read" number="0x1"/>
            <enumItem name="Three_fourth_full_for_read" number="0x2"/>
            <enumItem name="Full_for_readUser_could_use_this_signal_to_trigger_interrupt_when_read_FIFO_overflow" number="0x3"/>
        </enumeration>
        <enumeration name="CFG_WFIFO_TH_ENUM">
            <enumItem name="One_fourth_empty_for_write" number="0x0"/>
            <enumItem name="Half_empty_for_write" number="0x1"/>
            <enumItem name="Three_fourth_empty_for_write" number="0x2"/>
            <enumItem name="empty_for_write" number="0x3"/>
        </enumeration>
        <enumeration name="CFG_RCLK_EDGE_ENUM">
            <enumItem name="falling_edge" number="0x0"/>
            <enumItem name="rising_edge" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_WCLK_EDGE_ENUM">
            <enumItem name="falling_edge" number="0x0"/>
            <enumItem name="rising_edge" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_RD_ISSUE_ENUM">
            <enumItem name="_4" number="0x0"/>
            <enumItem name="_8" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_WR_ISSUE_ENUM">
            <enumItem name="_2" number="0x0"/>
            <enumItem name="_4" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_RDLEN_ENUM">
            <enumItem name="burst_of_8" number="0x0"/>
            <enumItem name="burst_of_16" number="0x1"/>
        </enumeration>
        <enumeration name="CFG_WRLEN_ENUM">
            <enumItem name="burst_of_8" number="0x0"/>
            <enumItem name="burst_of_16" number="0x1"/>
        </enumeration>
        <enumeration name="STATUS_DMA_DONE_CNT_ENUM">
            <enumItem name="all_finished_transfers_have_been_acknowledged" number="0x0"/>
            <enumItem name="one_finished_transfer_outstanding" number="0x1"/>
            <enumItem name="two_finished_transfers_outstanding" number="0x2"/>
            <enumItem name="three_or_more_finished_transfers_outstanding" number="0x3"/>
        </enumeration>
        <enumeration name="XADCIF_CFG_TCKRATE_ENUM">
            <enumItem name="_1_2_of_pcap_2x_clock_frequency" number="0x0"/>
            <enumItem name="_1_4" number="0x1"/>
            <enumItem name="_1_8_of_pcap_2x_clock_frequency" number="0x2"/>
            <enumItem name="_1_16_of_pcap_2x_clock_frequency" number="0x3"/>
        </enumeration>
        <enumeration name="DSR_DNS_ENUM">
            <enumItem name="DMA_manager_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_manager_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="DSR_Wakeup_event_ENUM">
            <enumItem name="event_0" number="0x0"/>
            <enumItem name="event_1" number="0x1"/>
            <enumItem name="event_2" number="0x2"/>
            <enumItem name="event_31" number="0x1f"/>
        </enumeration>
        <enumeration name="DSR_DMA_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="FSRD_fs_mgr_ENUM">
            <enumItem name="the_DMA_manager_thread_is_not_in_the_Faulting_state" number="0x0"/>
            <enumItem name="the_DMA_manager_thread_is_in_the_Faulting_state" number="0x1"/>
        </enumeration>
        <enumeration name="FSRC_fault_status_ENUM">
            <enumItem name="bit_provides_the_fault_status_of_the_corresponding_channel_Read_as_" number="0xeac"/>
        </enumeration>
        <enumeration name="FTRD_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTRD_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTRD_mgr_evnt_err_ENUM">
            <enumItem name="the_DMA_manager_has_appropriate_security_to_execute_DMAWFE_or_DMASEV" number="0x0"/>
            <enumItem name="a_DMA_manager_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTRD_dmago_err_ENUM">
            <enumItem name="the_DMA_manager_has_appropriate_security_to_execute_DMAGO" number="0x0"/>
            <enumItem name="a_DMA_manager_thread_in_the_Non_secure_state_attempted_to_execute_DMAGO_to_create_a_DMA_channel" number="0x1"/>
        </enumeration>
        <enumeration name="FTRD_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTRD_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR0_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR1_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR2_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR3_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR4_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR5_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR6_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_lockup_err_ENUM">
            <enumItem name="DMA_channel_has_adequate_resources" number="0x0"/>
            <enumItem name="DMA_channel_has_locked_up_because_of_insufficient_resources" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_dbg_instr_ENUM">
            <enumItem name="instruction_that_generated_an_abort_was_read_from_system_memory" number="0x0"/>
            <enumItem name="instruction_that_generated_an_abort_was_read_from_the_debug_interface" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_data_read_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_data_write_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_instr_fetch_err_ENUM">
            <enumItem name="OKAY_response" number="0x0"/>
            <enumItem name="EXOKAY_SLVERR_or_DECERR_response" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_st_data_unavailable_ENUM">
            <enumItem name="MFIFO_contains_all_the_data_to_enable_the_DMAST_to_complete" number="0x0"/>
            <enumItem name="previous_DMALDs_have_not_put_enough_data_in_the_MFIFO_to_enable_the_DMAST_to_complete" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_ch_rdwr_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_perform_a_secure_read_or_secure_write" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_ch_periph_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_ch_evnt_err_ENUM">
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_is_not_violating_the_security_permissions" number="0x0"/>
            <enumItem name="a_DMA_channel_thread_in_the_Non_secure_state_attempted_to_execute_either_" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_operand_invalid_ENUM">
            <enumItem name="valid_operand" number="0x0"/>
            <enumItem name="invalid_operand" number="0x1"/>
        </enumeration>
        <enumeration name="FTR7_undef_instr_ENUM">
            <enumItem name="defined_instruction" number="0x0"/>
            <enumItem name="undefined_instruction" number="0x1"/>
        </enumeration>
        <enumeration name="CSR0_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR0_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR0_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR0_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR0_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR1_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR1_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR1_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR1_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR1_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR2_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR2_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR2_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR2_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR2_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR3_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR3_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR3_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR3_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR3_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR4_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR4_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR4_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR4_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR4_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR5_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR5_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR5_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR5_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR5_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR6_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR6_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR6_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR6_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR6_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CSR7_CNS_ENUM">
            <enumItem name="DMA_channel_operates_in_the_Secure_state" number="0x0"/>
            <enumItem name="DMA_channel_operates_in_the_Non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="CSR7_dmawfp_periph_ENUM">
            <enumItem name="DMAWFP_executed_with_the_periph_operand_not_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_periph_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR7_dmawfp_b_ns_ENUM">
            <enumItem name="DMAWFP_executed_with_the_single_operand_set" number="0x0"/>
            <enumItem name="DMAWFP_executed_with_the_burst_operand_set" number="0x1"/>
        </enumeration>
        <enumeration name="CSR7_wakeup_num_ENUM">
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_0" number="0x0"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_1" number="0x1"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_2" number="0x2"/>
            <enumItem name="DMA_channel_is_waiting_for_event_or_peripheral_31" number="0x1f"/>
        </enumeration>
        <enumeration name="CSR7_channel_status_ENUM">
            <enumItem name="Stopped" number="0x0"/>
            <enumItem name="Executing" number="0x1"/>
            <enumItem name="Cache_miss" number="0x2"/>
            <enumItem name="Updating_PC" number="0x3"/>
            <enumItem name="Waiting_for_event" number="0x4"/>
            <enumItem name="At_barrier" number="0x5"/>
            <enumItem name="reserved" number="0x6"/>
            <enumItem name="Waiting_for_peripheral" number="0x7"/>
            <enumItem name="Killing" number="0x8"/>
            <enumItem name="Completing" number="0x9"/>
            <enumItem name="Faulting_completing" number="0xe"/>
            <enumItem name="Faulting" number="0xf"/>
        </enumeration>
        <enumeration name="CCR0_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR0_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR0_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR0_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR0_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR0_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR0_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR1_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR1_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR1_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR1_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR1_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR1_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR1_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR2_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR2_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR2_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR2_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR2_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR2_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR2_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR3_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR3_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR3_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR3_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR3_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR3_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR3_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR4_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR4_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR4_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR4_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR4_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR4_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR4_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR5_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR5_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR5_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR5_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR5_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR5_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR5_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR6_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR6_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR6_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR6_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR6_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR6_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR6_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR7_endian_swap_size_ENUM">
            <enumItem name="No_swap_8_bit_data" number="0x0"/>
            <enumItem name="Swap_bytes_within_16_bit_data" number="0x1"/>
            <enumItem name="Swap_bytes_within_32_bit_data" number="0x2"/>
            <enumItem name="Swap_bytes_within_64_bit_data" number="0x3"/>
            <enumItem name="Swap_bytes_within_128_bit_data" number="0x4"/>
            <enumItem name="Reserved" number="0x5"/>
            <enumItem name="Reserved_6" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="CCR7_dst_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR7_dst_burst_size_ENUM">
            <enumItem name="writes_1_byte_per_beat" number="0x0"/>
            <enumItem name="writes_2_bytes_per_beat" number="0x1"/>
            <enumItem name="writes_4_bytes_per_beat" number="0x2"/>
            <enumItem name="writes_8_bytes_per_beat" number="0x3"/>
            <enumItem name="writes_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR7_dst_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_AWBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_AWBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CCR7_src_burst_len_ENUM">
            <enumItem name="_1_data_transfer" number="0x0"/>
            <enumItem name="_2_data_transfers" number="0x1"/>
            <enumItem name="_3_data_transfers" number="0x2"/>
            <enumItem name="_16_data_transfers" number="0xf"/>
        </enumeration>
        <enumeration name="CCR7_src_burst_size_ENUM">
            <enumItem name="reads_1_byte_per_beat" number="0x0"/>
            <enumItem name="reads_2_bytes_per_beat" number="0x1"/>
            <enumItem name="reads_4_bytes_per_beat" number="0x2"/>
            <enumItem name="reads_8_bytes_per_beat" number="0x3"/>
            <enumItem name="reads_16_bytes_per_beat" number="0x4"/>
        </enumeration>
        <enumeration name="CCR7_src_inc_ENUM">
            <enumItem name="Fixed_address_burst_The_DMAC_signals_ARBURST_0_LOW" number="0x0"/>
            <enumItem name="Incrementing_address_burst_The_DMAC_signals_ARBURST_0_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="DBGSTATUS_dbgstatus_ENUM">
            <enumItem name="Idle" number="0x0"/>
            <enumItem name="Busy" number="0x1"/>
        </enumeration>
        <enumeration name="DBGCMD_dbgcmd_ENUM">
            <enumItem name="execute_the_instruction_that_the_DBGINST__1_0_Registers_contain" number="0x0"/>
            <enumItem name="reserved" number="0x1"/>
            <enumItem name="reserved_2" number="0x2"/>
            <enumItem name="reserved_3" number="0x3"/>
        </enumeration>
        <enumeration name="DBGINST0_channel_num_ENUM">
            <enumItem name="DMA_channel_0" number="0x0"/>
            <enumItem name="DMA_channel_1" number="0x1"/>
            <enumItem name="DMA_channel_2" number="0x2"/>
            <enumItem name="DMA_channel_7" number="0x7"/>
        </enumeration>
        <enumeration name="DBGINST0_debug_thread_ENUM">
            <enumItem name="DMA_manager_thread" number="0x0"/>
            <enumItem name="DMA_channel" number="0x1"/>
        </enumeration>
        <enumeration name="CR0_num_events_ENUM">
            <enumItem name="_1_interrupt_output_irq_0" number="0x0"/>
            <enumItem name="_2_interrupt_outputs_irq_1_0" number="0x1"/>
            <enumItem name="_3_interrupt_outputs_irq_2_0" number="0x2"/>
            <enumItem name="_32_interrupt_outputs_irq_31_0" number="0x1f"/>
        </enumeration>
        <enumeration name="CR0_num_periph_req_ENUM">
            <enumItem name="_1_peripheral_request_interface" number="0x0"/>
            <enumItem name="_2_peripheral_request_interfaces" number="0x1"/>
            <enumItem name="_3_peripheral_request_interfaces" number="0x2"/>
            <enumItem name="_32_peripheral_request_interfaces" number="0x1f"/>
        </enumeration>
        <enumeration name="CR0_num_chnls_ENUM">
            <enumItem name="_1_DMA_channel" number="0x0"/>
            <enumItem name="_2_DMA_channels" number="0x1"/>
            <enumItem name="_3_DMA_channels" number="0x2"/>
            <enumItem name="_8_DMA_channels" number="0x7"/>
        </enumeration>
        <enumeration name="CR0_mgr_ns_at_rst_ENUM">
            <enumItem name="boot_manager_ns_was_LOW" number="0x0"/>
            <enumItem name="boot_manager_ns_was_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CR0_boot_en_ENUM">
            <enumItem name="boot_from_pc_was_LOW" number="0x0"/>
            <enumItem name="boot_from_pc_was_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CR0_periph_req_ENUM">
            <enumItem name="the_DMAC_does_not_provide_a_peripheral_request_interface" number="0x0"/>
            <enumItem name="the_DMAC_provides_the_number_of_peripheral_request_interfaces_that_the_num_periph_req_field" number="0x1"/>
        </enumeration>
        <enumeration name="CR1_num_icache_lines_ENUM">
            <enumItem name="_1_i_cache_line" number="0x0"/>
            <enumItem name="_2_i_cache_lines" number="0x1"/>
            <enumItem name="_3_i_cache_lines" number="0x2"/>
            <enumItem name="_16_i_cache_lines" number="0xf"/>
        </enumeration>
        <enumeration name="CR1_icache_len_ENUM">
            <enumItem name="_4_bytes" number="0x2"/>
            <enumItem name="_8_bytes" number="0x3"/>
            <enumItem name="_16_bytes" number="0x4"/>
            <enumItem name="_32_bytes" number="0x5"/>
        </enumeration>
        <enumeration name="CRD_data_buffer_dep_ENUM">
            <enumItem name="_1_line" number="0x0"/>
            <enumItem name="_2_lines" number="0x1"/>
            <enumItem name="_1024_lines" number="0x1ff"/>
        </enumeration>
        <enumeration name="CRD_rd_q_dep_ENUM">
            <enumItem name="_1_line" number="0x0"/>
            <enumItem name="_2_lines" number="0x1"/>
            <enumItem name="_16_lines" number="0xf"/>
        </enumeration>
        <enumeration name="CRD_rd_cap_ENUM">
            <enumItem name="_1" number="0x0"/>
            <enumItem name="_2" number="0x1"/>
            <enumItem name="_8" number="0x7"/>
        </enumeration>
        <enumeration name="CRD_wr_q_dep_ENUM">
            <enumItem name="_1_line" number="0x0"/>
            <enumItem name="_2_lines" number="0x1"/>
            <enumItem name="_16_lines" number="0xf"/>
        </enumeration>
        <enumeration name="CRD_wr_cap_ENUM">
            <enumItem name="_1" number="0x0"/>
            <enumItem name="_2" number="0x1"/>
            <enumItem name="_8" number="0x7"/>
        </enumeration>
        <enumeration name="CRD_data_width_ENUM">
            <enumItem name="reserved" number="0x0"/>
            <enumItem name="reserved_1" number="0x1"/>
            <enumItem name="_32_bit" number="0x2"/>
            <enumItem name="_64_bit" number="0x3"/>
            <enumItem name="_128_bit" number="0x4"/>
        </enumeration>
        <enumeration name="WD_wd_irq_only_ENUM">
            <enumItem name="the_DMAC_aborts_all_of_the_contributing_DMA_channels_and_sets_irq_abort_HIGH" number="0x0"/>
            <enumItem name="the_DMAC_sets_irq_abort_HIGH" number="0x1"/>
        </enumeration>
        <enumeration name="CTL_TraceCaptEn_ENUM">
            <enumItem name="disable_trace_capture" number="0x0"/>
            <enumItem name="enable_trace_capture" number="0x1"/>
        </enumeration>
        <enumeration name="FTMSTATUS_FIFOFULL_ENUM">
            <enumItem name="FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="FTMSTATUS_FIFOEMPTY_ENUM">
            <enumItem name="FIFO_is_empty" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_STATUS_LOCKSTATUS_ENUM">
            <enumItem name="Access_Locked_0" number="0x1"/>
        </enumeration>
        <enumeration name="LOCK_STATUS_LOCKIMP_ENUM">
            <enumItem name="Lock_exists_if_PADDRDBG31_is_low_else_0" number="0x1"/>
        </enumeration>
        <enumeration name="net_cfg_dbus_width_ENUM">
            <enumItem name="_32_bit_AMBA_AHB_data_bus_width" number="0x0"/>
            <enumItem name="_64_bit_AMBA_AHB_data_bus_width" number="0x1"/>
            <enumItem name="_128_bit_AMBA_AHB_data_bus_width" number="0x2"/>
            <enumItem name="_128_bit_AMBA_AHB_data_bus_width_3" number="0x3"/>
        </enumeration>
        <enumeration name="net_cfg_mdc_clk_div_ENUM">
            <enumItem name="divide_pclk_by_8_pclk_up_to_20_MHz" number="0x0"/>
            <enumItem name="divide_pclk_by_16_pclk_up_to_40_MHz" number="0x1"/>
            <enumItem name="divide_pclk_by_32_pclk_up_to_80_MHz" number="0x2"/>
            <enumItem name="divide_pclk_by_48_pclk_up_to_120MHz" number="0x3"/>
            <enumItem name="divide_pclk_by_64_pclk_up_to_160_MHz" number="0x4"/>
            <enumItem name="divide_pclk_by_96_pclk_up_to_240_MHz" number="0x5"/>
            <enumItem name="divide_pclk_by_128_pclk_up_to_320_MHz" number="0x6"/>
            <enumItem name="divide_pclk_by_224_pclk_up_to_540_MHz" number="0x7"/>
        </enumeration>
        <enumeration name="net_cfg_pcs_sel_ENUM">
            <enumItem name="GMII_MII_interface_enabled_TBI_disabled" number="0x0"/>
            <enumItem name="TBI_enabled_GMII_MII_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="net_cfg_gige_en_ENUM">
            <enumItem name="_10_100_operation_using_MII_or_TBI_interface" number="0x0"/>
            <enumItem name="Gigabit_operation_using_GMII_or_TBI_interface" number="0x1"/>
        </enumeration>
        <enumeration name="dma_cfg_tx_pktbuf_memsz_sel_ENUM">
            <enumItem name="Do_not_use_top_address_bit_2_Kb" number="0x0"/>
            <enumItem name="Use_full_configured_addressable_space_4_Kb" number="0x1"/>
        </enumeration>
        <enumeration name="dma_cfg_rx_pktbuf_memsz_sel_ENUM">
            <enumItem name="Do_not_use_top_three_address_bits_1_Kb" number="0x0"/>
            <enumItem name="Do_not_use_top_two_address_bits_2_Kb" number="0x1"/>
            <enumItem name="Do_not_use_top_address_bit_4_Kb" number="0x2"/>
            <enumItem name="Use_full_configured_addressable_space_8_Kb" number="0x3"/>
        </enumeration>
        <enumeration name="dma_cfg_ahb_fixed_burst_len_ENUM">
            <enumItem name="Always_use_SINGLE_AHB_bursts" number="0x1"/>
        </enumeration>
        <enumeration name="ip_hdr_csum_errors_ip_hdr_csum_errors_ENUM">
            <enumItem name="IP_header_checksum_errors___an_8_bit_register" number="0x0"/>
        </enumeration>
        <enumeration name="timer_incr_alt_ct_ns_delta_ENUM">
            <enumItem name="clock_cycle" number="0xeac"/>
        </enumeration>
        <enumeration name="design_cfg1_gem_dma_bus_width_ENUM">
            <enumItem name="__32_bit" number="0x1"/>
            <enumItem name="__64_bit" number="0x2"/>
            <enumItem name="__128_bit" number="0x4"/>
        </enumeration>
        <enumeration name="design_cfg5_gem_rx_pbuf_size_def_ENUM">
            <enumItem name="kB_Rx_packet_buffer_size___dedicated_memory_resource_in_Pele" number="0x4"/>
        </enumeration>
        <enumeration name="MASK_DATA_0_LSW_MASK_0_LSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_0_LSW_DATA_0_LSW_ENUM">
            <enumItem name="Each_bit_controls_the_corresponding_pin_within_the_16_bit_half_bank_Note__Bit_6_bit_7_default_value" number="0x0"/>
        </enumeration>
        <enumeration name="MASK_DATA_0_MSW_MASK_0_MSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_0_MSW_DATA_0_MSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_1_LSW_MASK_1_LSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_1_LSW_DATA_1_LSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_1_MSW_MASK_1_MSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_1_MSW_DATA_1_MSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_2_LSW_MASK_2_LSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_2_LSW_DATA_2_LSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_2_MSW_MASK_2_MSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_2_MSW_DATA_2_MSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_3_LSW_MASK_3_LSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_3_LSW_DATA_3_LSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_3_MSW_MASK_3_MSW_ENUM">
            <enumItem name="pin_value_is_updated" number="0x0"/>
            <enumItem name="pin_is_masked" number="0x1"/>
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="MASK_DATA_3_MSW_DATA_3_MSW_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_16_bit_half_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_0_DATA_0_ENUM">
            <enumItem name="Each_bit_controls_the_corresponding_pin_within_the_32_bit_bank_Note__Bit_6_bit_7_default_value" number="0x0"/>
        </enumeration>
        <enumeration name="DATA_1_DATA_1_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_2_DATA_2_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_3_DATA_3_ENUM">
            <enumItem name="bit_controls_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_0_RO_DATA_0_RO_ENUM">
            <enumItem name="Each_bit_provides_a_pin_value_within_the_32_bit_bank_Note__Bit_6_bit_7_default_value" number="0x0"/>
        </enumeration>
        <enumeration name="DATA_1_RO_DATA_1_RO_ENUM">
            <enumItem name="bit_provides_a_pin_value_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_2_RO_DATA_2_RO_ENUM">
            <enumItem name="bit_provides_a_pin_value_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DATA_3_RO_DATA_3_RO_ENUM">
            <enumItem name="bit_provides_a_pin_value_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="BYPM_0_BYPASS_MODE_0_ENUM">
            <enumItem name="software_controlled_mode" number="0x0"/>
            <enumItem name="bypass_mode" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DIRM_0_DIRECTION_0_ENUM">
            <enumItem name="input" number="0x0"/>
            <enumItem name="output" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="OEN_0_OP_ENABLE_0_ENUM">
            <enumItem name="disabled" number="0x0"/>
            <enumItem name="enabled" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_MASK_0_INT_MASK_0_ENUM">
            <enumItem name="interrupt_source_enabled" number="0x0"/>
            <enumItem name="interrupt_source_masked" number="0x1"/>
            <enumItem name="bit_reports_the_status_for_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_EN_0_INT_ENABLE_0_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="clear_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_DIS_0_INT_DISABLE_0_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="set_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_TYPE_0_INT_TYPE_0_ENUM">
            <enumItem name="level_sensitive" number="0x0"/>
            <enumItem name="edge_sensitive" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_POLARITY_0_INT_POL_0_ENUM">
            <enumItem name="active_low_or_falling_edge" number="0x0"/>
            <enumItem name="active_high_or_rising_edge" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_ANY_0_INT_ON_ANY_0_ENUM">
            <enumItem name="trigger_on_single_edge_using_configured_interrupt_polarity" number="0x0"/>
            <enumItem name="trigger_on_both_edges" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="BYPM_1_BYPASS_MODE_1_ENUM">
            <enumItem name="software_controlled_mode" number="0x0"/>
            <enumItem name="bypass_mode" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DIRM_1_DIRECTION_1_ENUM">
            <enumItem name="input" number="0x0"/>
            <enumItem name="output" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="OEN_1_OP_ENABLE_1_ENUM">
            <enumItem name="disabled" number="0x0"/>
            <enumItem name="enabled" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_MASK_1_INT_MASK_1_ENUM">
            <enumItem name="interrupt_source_enabled" number="0x0"/>
            <enumItem name="interrupt_source_masked" number="0x1"/>
            <enumItem name="bit_reports_the_status_for_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_EN_1_INT_ENABLE_1_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="clear_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_DIS_1_INT_DISABLE_1_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="set_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_TYPE_1_INT_TYPE_1_ENUM">
            <enumItem name="level_sensitive" number="0x0"/>
            <enumItem name="edge_sensitive" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_POLARITY_1_INT_POL_1_ENUM">
            <enumItem name="active_low_or_falling_edge" number="0x0"/>
            <enumItem name="active_high_or_rising_edge" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_ANY_1_INT_ON_ANY_1_ENUM">
            <enumItem name="trigger_on_single_edge_using_configured_interrupt_polarity" number="0x0"/>
            <enumItem name="trigger_on_both_edges" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="BYPM_2_BYPASS_MODE_2_ENUM">
            <enumItem name="software_controlled_mode" number="0x0"/>
            <enumItem name="bypass_mode" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DIRM_2_DIRECTION_2_ENUM">
            <enumItem name="input" number="0x0"/>
            <enumItem name="output" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="OEN_2_OP_ENABLE_2_ENUM">
            <enumItem name="disabled" number="0x0"/>
            <enumItem name="enabled" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_MASK_2_INT_MASK_2_ENUM">
            <enumItem name="interrupt_source_enabled" number="0x0"/>
            <enumItem name="interrupt_source_masked" number="0x1"/>
            <enumItem name="bit_reports_the_status_for_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_EN_2_INT_ENABLE_2_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="clear_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_DIS_2_INT_DISABLE_2_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="set_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_TYPE_2_INT_TYPE_2_ENUM">
            <enumItem name="level_sensitive" number="0x0"/>
            <enumItem name="edge_sensitive" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_POLARITY_2_INT_POL_2_ENUM">
            <enumItem name="active_low_or_falling_edge" number="0x0"/>
            <enumItem name="active_high_or_rising_edge" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_ANY_2_INT_ON_ANY_2_ENUM">
            <enumItem name="trigger_on_single_edge_using_configured_interrupt_polarity" number="0x0"/>
            <enumItem name="trigger_on_both_edges" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="BYPM_3_BYPASS_MODE_3_ENUM">
            <enumItem name="software_controlled_mode" number="0x0"/>
            <enumItem name="bypass_mode" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="DIRM_3_DIRECTION_3_ENUM">
            <enumItem name="input" number="0x0"/>
            <enumItem name="output" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="OEN_3_OP_ENABLE_3_ENUM">
            <enumItem name="disabled" number="0x0"/>
            <enumItem name="enabled" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_MASK_3_INT_MASK_3_ENUM">
            <enumItem name="interrupt_source_enabled" number="0x0"/>
            <enumItem name="interrupt_source_masked" number="0x1"/>
            <enumItem name="bit_reports_the_status_for_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_EN_3_INT_ENABLE_3_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="clear_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_DIS_3_INT_DISABLE_3_ENUM">
            <enumItem name="no_change" number="0x0"/>
            <enumItem name="set_interrupt_mask" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_TYPE_3_INT_TYPE_3_ENUM">
            <enumItem name="level_sensitive" number="0x0"/>
            <enumItem name="edge_sensitive" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_POLARITY_3_INT_POL_3_ENUM">
            <enumItem name="active_low_or_falling_edge" number="0x0"/>
            <enumItem name="active_high_or_rising_edge" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="INT_ANY_3_INT_ON_ANY_3_ENUM">
            <enumItem name="trigger_on_single_edge_using_configured_interrupt_polarity" number="0x0"/>
            <enumItem name="trigger_on_both_edges" number="0x1"/>
            <enumItem name="bit_configures_the_corresponding_pin_within_the_32_bit_bank" number="0xeac"/>
        </enumeration>
        <enumeration name="Control_reg0_divisor_a_ENUM">
            <enumItem name="_3__Divides_the_input_pclk_frequency_by_divisor_a__1" number="0x0"/>
        </enumeration>
        <enumeration name="Control_reg0_divisor_b_ENUM">
            <enumItem name="_31___Divides_the_output_frequency_from_divisor_a_by_divisor_b__1" number="0x0"/>
        </enumeration>
        <enumeration name="Control_reg0_CLR_FIFO_ENUM">
            <enumItem name="initializes_the_FIFO_to_all_zeros_and_clears_the_transfer_size_register_Automatically_gets_cleared_on_the_next_APB_clock_after" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_SLVMON_ENUM">
            <enumItem name="normal_operation" number="0x0"/>
            <enumItem name="monitor_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_HOLD_ENUM">
            <enumItem name="allow_the_transfer_to_terminate_as_soon_as_all_the_data_has_been_transmitted_or_received" number="0x0"/>
            <enumItem name="when_no_more_data_is_available_for_transmit_or_no_more_data_can_be_received_hold_the_sclk_line_low_until_serviced_by_the_host" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_ACKEN_ENUM">
            <enumItem name="acknowledge_disabled_NACK_transmitted" number="0x0"/>
            <enumItem name="acknowledge_enabled_ACK_transmitted" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_NEA_ENUM">
            <enumItem name="reserved" number="0x0"/>
            <enumItem name="normal_7_bit_address" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_MS_ENUM">
            <enumItem name="slave" number="0x0"/>
            <enumItem name="master" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_RW_ENUM">
            <enumItem name="master_transmitter" number="0x0"/>
            <enumItem name="master_receiver" number="0x1"/>
        </enumeration>
        <enumeration name="Status_reg0_BA_ENUM">
            <enumItem name="ongoing_transfer_on_the_I2C_bus" number="0x1"/>
        </enumeration>
        <enumeration name="Status_reg0_RXOVF_ENUM">
            <enumItem name="when_the_receiver_receives_a_byte_of_data_before_the_previous_byte_has_been_read_by_the_host" number="0x1"/>
        </enumeration>
        <enumeration name="Status_reg0_TXDV_ENUM">
            <enumItem name="still_a_byte_of_data_to_be_transmitted_by_the_interface" number="0x1"/>
        </enumeration>
        <enumeration name="Status_reg0_RXDV_ENUM">
            <enumItem name="valid_new_data_to_be_read_from_the_interface" number="0x1"/>
        </enumeration>
        <enumeration name="Status_reg0_RXRW_ENUM">
            <enumItem name="mode_of_the_transmission_received_from_a_master" number="0x1"/>
        </enumeration>
        <enumeration name="I2C_address_reg0_ADD_ENUM">
            <enumItem name="_1024__Normal_addressing_mode_uses_add_6_0_Extended_addressing_mode_uses_add_9_0" number="0x0"/>
        </enumeration>
        <enumeration name="I2C_data_reg0_DATA_ENUM">
            <enumItem name="_255__When_written_to_the_data_register_sets_data_to_transmit_When_read_from_the_data_register" number="0x0"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_ARB_LOST_ENUM">
            <enumItem name="master_loses_bus_ownership_during_a_transfer_due_to_ongoing_arbitration" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_RX_UNF_ENUM">
            <enumItem name="host_attempts_to_read_from_the_I2C_data_register_more_times_than_the_value_of_the_transfer_size_register_plus_one" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_TX_OVF_ENUM">
            <enumItem name="host_attempts_to_write_to_the_I2C_data_register_more_times_than_the_FIFO_depth" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_RX_OVF_ENUM">
            <enumItem name="_" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_SLV_RDY_ENUM">
            <enumItem name="_" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_TO_ENUM">
            <enumItem name="_" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_NACK_ENUM">
            <enumItem name="slave_responds_with_a_NACK_or_master_terminates_the_transfer_before_all_data_is_supplied" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_DATA_ENUM">
            <enumItem name="_" number="0x1"/>
        </enumeration>
        <enumeration name="Interrupt_status_reg0_COMP_ENUM">
            <enumItem name="_" number="0x1"/>
        </enumeration>
        <enumeration name="Slave_mon_pause_reg0_Pause_ENUM">
            <enumItem name="_7__pause_interval" number="0x0"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_ARB_LOST_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RX_UNF_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TX_OVF_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RX_OVF_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_SLV_RDY_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TO_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_NACK_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_DATA_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_COMP_ENUM">
            <enumItem name="unmask_this_interrupt" number="0x0"/>
            <enumItem name="Mask_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_ARB_LOST_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_RX_UNF_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_TX_OVF_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_RX_OVF_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_SLV_RDY_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_TO_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_NACK_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_DATA_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_enable_reg0_COMP_ENUM">
            <enumItem name="enable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_ARB_LOST_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_RX_UNF_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_TX_OVF_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_RX_OVF_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_SLV_RDY_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_TO_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_NACK_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_DATA_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_disable_reg0_COMP_ENUM">
            <enumItem name="disable_this_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="StimPort00_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort01_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort02_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort03_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort04_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort05_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort06_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort07_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort08_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort09_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort10_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort11_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort12_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort13_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort14_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort15_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort16_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort17_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort18_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort19_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort20_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort21_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort22_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort23_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort24_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort25_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort26_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort27_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort28_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort29_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort30_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="StimPort31_a_ENUM">
            <enumItem name="of_the_32_stimulus_ports_is_represented_by_a_virtual_address_creating_32_stimulus_registers_A_write_to_one_of_these_locations_causes_data_to_be_written_into_the_FIFO_if_the_corresponding_bit_in_the_Trace_Enable_Register_is_set_and_ITM_is_enabled_Reading_from_any_of_the_stimulus_ports_returns_the_FIFO_status_notFull1___Full0_only_if_the_ITM_is_enabled_This_enables_more_efficient_core_register_allocation_because_the_stimulus" number="0xeac"/>
        </enumeration>
        <enumeration name="reg0_cache_type_data_banking_ENUM">
            <enumItem name="Data_banking_not_implemented" number="0x0"/>
            <enumItem name="Data_banking_implemented" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_control_l2_enable_ENUM">
            <enumItem name="L2_Cache_is_disabled_This_is_the_default_value" number="0x0"/>
            <enumItem name="L2_Cache_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_early_bresp_en_ENUM">
            <enumItem name="Early_BRESP_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Early_BRESP_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_instr_prefetch_en_ENUM">
            <enumItem name="Instruction_prefetching_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Instruction_prefetching_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_data_prefetch_en_ENUM">
            <enumItem name="Data_prefetching_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Data_prefetching_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_nonsec_inte_access_ctrl_ENUM">
            <enumItem name="Interrupt_Clear_0x220_and_Interrupt_Mask_0x214_can_be_modified_or_read_with" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_nonsec_lockdown_en_ENUM">
            <enumItem name="Lockdown_registers_cannot_be_modified_using_non_secure_accesses_This_is_the" number="0x0"/>
            <enumItem name="Non_secure_accesses_can_write_to_the_lockdown_registers" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_cache_replace_policy_ENUM">
            <enumItem name="pseudo_random_replacement_using_lfsr" number="0x0"/>
            <enumItem name="round_robin_replacement_This_is_the_default" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_force_write_alloc_ENUM">
            <enumItem name="Use_AWCACHE_attributes_for_WA_This_is_the_default" number="0x0"/>
            <enumItem name="Force_no_allocate_set_WA_bit_always_0" number="0x1"/>
            <enumItem name="Override_AWCACHE_attributes_set_WA_bit_always_1_all_cacheable_write" number="0x2"/>
            <enumItem name="Internally_mapped_to_00_See_Cache_operation_on_page_2_11_for_more" number="0x3"/>
        </enumeration>
        <enumeration name="reg1_aux_control_shared_attr_override_en_ENUM">
            <enumItem name="Treats_shared_accesses_as_specified_in_Shareable_attribute_on_page_2_15_This" number="0x0"/>
            <enumItem name="Shared_attribute_internally_ignored" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_parity_en_ENUM">
            <enumItem name="Disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_event_mon_bus_en_ENUM">
            <enumItem name="Disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_way_size_ENUM">
            <enumItem name="Reserved_internally_mapped_to_16KB" number="0x0"/>
            <enumItem name="_16KB" number="0x1"/>
            <enumItem name="_32KB" number="0x2"/>
            <enumItem name="_64KB" number="0x3"/>
            <enumItem name="_128KB" number="0x4"/>
            <enumItem name="_256KB" number="0x5"/>
            <enumItem name="_512KB" number="0x6"/>
            <enumItem name="Reserved_internally_mapped_to_512_KB" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_aux_control_associativity_ENUM">
            <enumItem name="_8_way" number="0x0"/>
            <enumItem name="_16_way" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_shared_attr_inva_en_ENUM">
            <enumItem name="Shared_invalidate_behavior_enabled_if_Shared_Attribute_Override_Enable_bit" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_ex_cache_config_ENUM">
            <enumItem name="Disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_store_buff_dev_lim_en_ENUM">
            <enumItem name="Store_buffer_device_limitation_disabled_Device_writes_can_take_all_slots_in_store" number="0x0"/>
            <enumItem name="Store_buffer_device_limitation_enabled_Device_writes_cannot_take_all_slots_in" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_high_pr_so_dev_rd_en_ENUM">
            <enumItem name="Strongly_Ordered_and_Device_reads_have_lower_priority_than_cacheable" number="0x0"/>
            <enumItem name="Strongly_Ordered_and_Device_reads_get_the_highest_priority_when_arbitrated_in" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_aux_control_full_line_zero_enable_ENUM">
            <enumItem name="Full_line_of_write_zero_behavior_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Full_line_of_write_zero_behavior_Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg1_tag_ram_control_ram_wr_access_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_tag_ram_control_ram_rd_access_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_tag_ram_control_ram_setup_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_data_ram_control_ram_wr_access_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_data_ram_control_ram_rd_access_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg1_data_ram_control_ran_setup_lat_ENUM">
            <enumItem name="_1_cycle_of_latency_there_is_no_additional_latency" number="0x0"/>
            <enumItem name="_2_cycles_of_latency" number="0x1"/>
            <enumItem name="_3_cycles_of_latency" number="0x2"/>
            <enumItem name="_4_cycles_of_latency" number="0x3"/>
            <enumItem name="_5_cycles_of_latency" number="0x4"/>
            <enumItem name="_6_cycles_of_latency" number="0x5"/>
            <enumItem name="_7_cycles_of_latency" number="0x6"/>
            <enumItem name="_8_cycles_of_latency" number="0x7"/>
        </enumeration>
        <enumeration name="reg2_ev_counter_ctrl_ev_ctr_en_ENUM">
            <enumItem name="Event_Counting_Enable" number="0x1"/>
        </enumeration>
        <enumeration name="reg2_ev_counter1_cfg_ctr_ev_src_ENUM">
            <enumItem name="CO" number="0x1"/>
            <enumItem name="DRHIT" number="0x2"/>
            <enumItem name="DRREQ" number="0x3"/>
            <enumItem name="DWHIT" number="0x4"/>
            <enumItem name="DWREQ" number="0x5"/>
            <enumItem name="DWTREQ" number="0x6"/>
            <enumItem name="IRHIT" number="0x7"/>
            <enumItem name="IRREQ" number="0x8"/>
            <enumItem name="WA" number="0x9"/>
            <enumItem name="IPFALLOC" number="0xa"/>
            <enumItem name="EPFHIT" number="0xb"/>
            <enumItem name="EPFALLOC" number="0xc"/>
            <enumItem name="SRRCVD" number="0xd"/>
            <enumItem name="SRCONF" number="0xe"/>
            <enumItem name="EPFRCVD" number="0xf"/>
        </enumeration>
        <enumeration name="reg2_ev_counter1_cfg_ev_ctr_intr_gen_ENUM">
            <enumItem name="Enabled__Increment_condition" number="0x1"/>
            <enumItem name="Enabled__Overflow_condition" number="0x2"/>
            <enumItem name="Interrupt_generation_is_disabled" number="0x3"/>
        </enumeration>
        <enumeration name="reg2_ev_counter0_cfg_ctr_ev_src_ENUM">
            <enumItem name="CO" number="0x1"/>
            <enumItem name="DRHIT" number="0x2"/>
            <enumItem name="DRREQ" number="0x3"/>
            <enumItem name="DWHIT" number="0x4"/>
            <enumItem name="DWREQ" number="0x5"/>
            <enumItem name="DWTREQ" number="0x6"/>
            <enumItem name="IRHIT" number="0x7"/>
            <enumItem name="IRREQ" number="0x8"/>
            <enumItem name="WA" number="0x9"/>
            <enumItem name="IPFALLOC" number="0xa"/>
            <enumItem name="EPFHIT" number="0xb"/>
            <enumItem name="EPFALLOC" number="0xc"/>
            <enumItem name="SRRCVD" number="0xd"/>
            <enumItem name="SRCONF" number="0xe"/>
            <enumItem name="EPFRCVD" number="0xf"/>
        </enumeration>
        <enumeration name="reg2_ev_counter0_cfg_ev_ctr_intr_gen_ENUM">
            <enumItem name="Enabled__Increment_condition" number="0x1"/>
            <enumItem name="Enabled__Overflow_condition" number="0x2"/>
            <enumItem name="Interrupt_generation_is_disabled" number="0x3"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown0_DATALOCK000_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x0"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown0_INSTRLOCK000_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x0"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown1_DATALOCK001_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x1"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown1_INSTRLOCK001_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x1"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown2_DATALOCK010_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x2"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown2_INSTRLOCK010_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x2"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown3_DATALOCK011_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x3"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown3_INSTRLOCK011_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x3"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown4_DATALOCK100_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x4"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown4_INSTRLOCK100_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x4"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown5_DATALOCK101_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x5"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown5_INSTRLOCK101_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x5"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown6_DATALOCK110_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x6"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown6_INSTRLOCK110_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x6"/>
        </enumeration>
        <enumeration name="reg9_d_lockdown7_DATALOCK111_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x7"/>
        </enumeration>
        <enumeration name="reg9_i_lockdown7_INSTRLOCK111_ENUM">
            <enumItem name="Use_when_AR_WUSERSx_7_5" number="0x7"/>
        </enumeration>
        <enumeration name="reg9_lock_line_en_lock_down_by_line_enable_ENUM">
            <enumItem name="Lockdown_by_line_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Lockdown_by_line_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg9_unlock_way_unlock_all_lines_by_way_operation_ENUM">
            <enumItem name="Unlock_all_lines_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Unlock_all_lines_operation_in_progress_for_the_corresponding_way" number="0x1"/>
        </enumeration>
        <enumeration name="reg12_addr_filtering_start_addr_filtering_enable_ENUM">
            <enumItem name="Address_filtering_disabled" number="0x0"/>
            <enumItem name="Address_filtering_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_debug_ctrl_DWB_ENUM">
            <enumItem name="Force_write_through_behavior" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_debug_ctrl_DCL_ENUM">
            <enumItem name="Disable_cache_linefills" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_double_linefill_en_ENUM">
            <enumItem name="The_L2CC_always_issues_4x64_bit_read_bursts_to_L3_on_reads" number="0x0"/>
            <enumItem name="The_L2CC_issues_8x64_bit_read_bursts_to_L3_on_reads_that" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_inst_pref_en_ENUM">
            <enumItem name="Instruction_prefetching_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Instruction_prefetching_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_data_pref_en_ENUM">
            <enumItem name="Data_prefetching_disabled_This_is_the_default" number="0x0"/>
            <enumItem name="Data_prefetching_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_double_linefill_on_wrapread_en_ENUM">
            <enumItem name="Double_linefill_on_WRAP_read_enabled_This_is_the_default" number="0x0"/>
            <enumItem name="Double_linefill_on_WRAP_read_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_pref_drop_en_ENUM">
            <enumItem name="The_L2CC_does_not_discard_prefetch_reads_issued_to_L3_This" number="0x0"/>
            <enumItem name="The_L2CC_discards_prefetch_reads_issued_to_L3_when_there_is" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_incr_double_linefill_en_ENUM">
            <enumItem name="The_L2CC_does_not_issue_INCR_8x64_bit_read_bursts_to_L3_on" number="0x0"/>
            <enumItem name="The_L2CC_can_issue_INCR_8x64_bit_read_bursts_to_L3_on" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_prefetch_ctrl_not_same_id_on_excl_seq_en_ENUM">
            <enumItem name="Read_and_write_portions_of_a_non_cacheable_exclusive" number="0x0"/>
            <enumItem name="Read_and_write_portions_of_a_non_cacheable_exclusive_1" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_power_ctrl_dynamic_clk_gating_en_ENUM">
            <enumItem name="Masked_This_is_the_default" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="reg15_power_ctrl_standby_mode_en_ENUM">
            <enumItem name="Masked_This_is_the_default" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_CONTROL_REGISTER_SCU_RAMs_Parity_enable_ENUM">
            <enumItem name="Parity_off_This_is_the_default_setting" number="0x0"/>
            <enumItem name="Parity_on" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_CONTROL_REGISTER_Address_filtering_enable_ENUM">
            <enumItem name="Addressing_filtering_off" number="0x0"/>
            <enumItem name="Addressing_filtering_on" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_CONTROL_REGISTER_SCU_enable_ENUM">
            <enumItem name="SCU_disable_This_is_the_default_setting" number="0x0"/>
            <enumItem name="SCU_enable" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_CONFIGURATION_REGISTER_Tag_RAM_sizes_ENUM">
            <enumItem name="_16KB_cache_64_indexes_per_tag_RAM" number="0x0"/>
            <enumItem name="_32KB_cache_128_indexes_per_tag_RAM" number="0x1"/>
            <enumItem name="_64KB_cache_256_indexes_per_tag_RAM" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="SCU_CONFIGURATION_REGISTER_CPUs_SMP_ENUM">
            <enumItem name="this_Cortex_A9_processor_is_in_AMP_mode_not_taking_part_in_coherency_or_not_present" number="0x0"/>
            <enumItem name="this_Cortex_A9_processor_is_in_SMP_mode_taking_part_in_coherency" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_CONFIGURATION_REGISTER_CPU_number_ENUM">
            <enumItem name="one_Cortex_A9_processor_CPU0" number="0x0"/>
            <enumItem name="two_Cortex_A9_processors_CPU0_and_CPU1" number="0x1"/>
            <enumItem name="three_Cortex_A9_processors_CPU0_CPU1_and_CPU2" number="0x2"/>
            <enumItem name="four_Cortex_A9_processors_CPU0_CPU1_CPU2_and_CPU3" number="0x3"/>
        </enumeration>
        <enumeration name="SCU_CPU_Power_Status_Register_CPU3_status_ENUM">
            <enumItem name="Normal_mode" number="0x0"/>
            <enumItem name="Reserved" number="0x1"/>
            <enumItem name="the_Cortex_A9_processor_is_about_to_enter_or_is_in_dormant_mode_No_coherency" number="0x2"/>
            <enumItem name="the_Cortex_A9_processor_is_about_to_enter_or_is_in_powered_off_mode_or_is_nonpresent" number="0x3"/>
        </enumeration>
        <enumeration name="SCU_Access_Control_Register_SAC_CPU3_ENUM">
            <enumItem name="CPU3_cannot_access_the_components" number="0x0"/>
            <enumItem name="CPU3_can_access_the_components_This_is_the_default" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Access_Control_Register_SAC_CPU2_ENUM">
            <enumItem name="CPU2_cannot_access_the_components" number="0x0"/>
            <enumItem name="CPU2_can_access_the_components_This_is_the_default" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Access_Control_Register_SAC_CPU1_ENUM">
            <enumItem name="CPU1_cannot_access_the_components" number="0x0"/>
            <enumItem name="CPU1_can_access_the_components_This_is_the_default" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Access_Control_Register_SAC_CPU0_ENUM">
            <enumItem name="CPU0_cannot_access_the_components" number="0x0"/>
            <enumItem name="CPU0_can_access_the_components_This_is_the_default" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Non_secure_Access_Control_Register_CPU0_global_timer_ENUM">
            <enumItem name="Secure_accesses_only_This_is_the_default_value" number="0x0"/>
            <enumItem name="Secure_accesses_and_Non_Secure_accesses" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU0_ENUM">
            <enumItem name="Secure_accesses_only_Non_secure_reads_return_0_This_is_the_default_value" number="0x0"/>
            <enumItem name="Secure_accesses_and_Non_secure_accesses" number="0x1"/>
        </enumeration>
        <enumeration name="SCU_Non_secure_Access_Control_Register_Component_access_for_CPU0_ENUM">
            <enumItem name="CPU_cannot_write_the_componentsa" number="0x0"/>
            <enumItem name="CPU_can_access_the_componentsa" number="0x1"/>
        </enumeration>
        <enumeration name="ICCICR_SBPR_ENUM">
            <enumItem name="use_the_Secure_Binary_Point_Register_for_Secure_interrupts_and_use_the_Non_secure_Binary_Point_Register_for_Non_secure_interrupts" number="0x0"/>
            <enumItem name="use_the_Secure_Binary_Point_Register_for_both_Secure_and_Non_secure_interrupts" number="0x1"/>
        </enumeration>
        <enumeration name="ICCICR_FIQEn_ENUM">
            <enumItem name="using_IRQ_1" number="0x0"/>
        </enumeration>
        <enumeration name="ICCIDR_Implementer_ENUM">
            <enumItem name="_7" number="0x0"/>
        </enumeration>
        <enumeration name="Global_Timer_Control_Register_a_ENUM">
            <enumItem name="single_shot_mode" number="0x0"/>
            <enumItem name="auto_increment_mode" number="0x1"/>
            <enumItem name="time_the_counter_reaches_the_comparator_value_the_comparator_register_is" number="0xeac"/>
        </enumeration>
        <enumeration name="Global_Timer_Control_Register_Timer_Enable_ENUM">
            <enumItem name="Timer_is_disabled_and_the_counter_does_not_increment" number="0x0"/>
            <enumItem name="Timer_is_enabled_and_the_counter_increments_normally" number="0x1"/>
        </enumeration>
        <enumeration name="Private_Timer_Control_Register_Auto_reload_ENUM">
            <enumItem name="Single_shot_mode" number="0x0"/>
            <enumItem name="Auto_reload_mode" number="0x1"/>
            <enumItem name="time_the_Counter_Register_reaches_zero_it_is_reloaded_with_the_value_contained_in_the" number="0xeac"/>
        </enumeration>
        <enumeration name="Private_Timer_Control_Register_Timer_Enable_ENUM">
            <enumItem name="Timer_is_disabled_and_the_counter_does_not_decrement" number="0x0"/>
            <enumItem name="Timer_is_enabled_and_the_counter_decrements_normally" number="0x1"/>
        </enumeration>
        <enumeration name="Watchdog_Control_Register_Watchdog_mode_ENUM">
            <enumItem name="Timer_mode_default" number="0x0"/>
            <enumItem name="Watchdog_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Watchdog_Control_Register_Auto_reload_ENUM">
            <enumItem name="Single_shot_mode" number="0x0"/>
            <enumItem name="Auto_reload_mode" number="0x1"/>
            <enumItem name="time_the_Counter_Register_reaches_zero_it_is_reloaded_with_the_value_contained_in_the" number="0xeac"/>
        </enumeration>
        <enumeration name="Watchdog_Control_Register_Watchdog_Enable_ENUM">
            <enumItem name="Watchdog_is_disabled_and_the_counter_does_not_decrement_All_registers_can_still_be" number="0x0"/>
            <enumItem name="Watchdog_is_enabled_and_the_counter_decrements_normally" number="0x1"/>
        </enumeration>
        <enumeration name="ICDDCR_Enable_Non_secure_ENUM">
            <enumItem name="disables_all_Non_secure_interrupts_control_bits_in_the_distributor_from_changing_state" number="0x0"/>
            <enumItem name="enables_the_distributor_to_update_register_locations_for_Non_secure_interrupts" number="0x1"/>
        </enumeration>
        <enumeration name="ICDICTR_LSPI_ENUM">
            <enumItem name="_31_LSPIs_which_are_the_interrupts_of_IDs_32_62" number="0x1f"/>
        </enumeration>
        <enumeration name="ICDICTR_SecurityExtn_ENUM">
            <enumItem name="the_controller_contains_two_security_domains" number="0x1"/>
        </enumeration>
        <enumeration name="ICDICTR_CPU_Number_ENUM">
            <enumItem name="the_Cortex_A9_MPCore_configuration_contains_one_Cortex_A9_processor" number="0x0"/>
            <enumItem name="the_Cortex_A9_MPCore_configuration_contains_two_Cortex_A9_processors" number="0x1"/>
            <enumItem name="the_Cortex_A9_MPCore_configuration_contains_three_Cortex_A9_processors" number="0x2"/>
            <enumItem name="the_Cortex_A9_MPCore_configuration_contains_four_Cortex_A9_processors" number="0x3"/>
        </enumeration>
        <enumeration name="ICDICTR_IT_Lines_Number_ENUM">
            <enumItem name="the_distributor_provides_32_interruptsa_no_external_interrupt_lines" number="0x0"/>
            <enumItem name="the_distributor_provides_64_interrupts_32_external_interrupt_lines" number="0x1"/>
            <enumItem name="the_distributor_provides_96_interrupts_64_external_interrupt_lines" number="0x2"/>
            <enumItem name="the_distributor_provide_128_interrupts_96_external_interrupt_lines" number="0x3"/>
            <enumItem name="the_distributor_provides_160_interrupts_128_external_interrupt_lines" number="0x4"/>
            <enumItem name="the_distributor_provides_192_interrupts_160_external_interrupt_lines" number="0x5"/>
            <enumItem name="the_distributor_provides_224_interrupts_192_external_interrupt_lines" number="0x6"/>
            <enumItem name="the_distributor_provides_256_interrupts_224_external_interrupt_lines" number="0x7"/>
        </enumeration>
        <enumeration name="ICDISR0_Security_Status_ENUM">
            <enumItem name="bit_controls_the_security_status_of_the_corresponding_interrupt" number="0xeac"/>
        </enumeration>
        <enumeration name="ICDISR1_Security_Status_ENUM">
            <enumItem name="bit_controls_the_security_status_of_the_corresponding_interrupt" number="0xeac"/>
        </enumeration>
        <enumeration name="ICDISR2_Security_Status_ENUM">
            <enumItem name="bit_controls_the_security_status_of_the_corresponding_interrupt" number="0xeac"/>
        </enumeration>
        <enumeration name="ICDSGIR_CPUTargetList_ENUM">
            <enumItem name="bit_refers_to_the_corresponding_CPU_interface" number="0xeac"/>
        </enumeration>
        <enumeration name="ICDSGIR_SATT_ENUM">
            <enumItem name="only_if_the_SGI_is_configured_as_Secure_on_that_interface" number="0x0"/>
            <enumItem name="only_if_the_SGI_is_configured_as_Non_secure_on_that_interface" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_PARITY_CTRL_OddParityEn_ENUM">
            <enumItem name="Even_Parity_generated" number="0x0"/>
            <enumItem name="Odd" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_PARITY_CTRL_MultipleParityErrIrqEn_ENUM">
            <enumItem name="IRQ_is_not_generated_when_parity_error_detected_and_ParityCheckDis_0" number="0x0"/>
            <enumItem name="IRQ_is_generated_when_parity_error_detected_and_ParityCheckDis_0" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_PARITY_CTRL_SingleParityErrIrqEn_ENUM">
            <enumItem name="IRQ_is_not_generated_when_parity_error_detected_and_ParityCheckDis_0" number="0x0"/>
            <enumItem name="IRQ_is_generated_when_parity_error_detected_and_ParityCheckDis_0" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_PARITY_CTRL_RdRespParityErrEn_ENUM">
            <enumItem name="Error_will_not_be_sent_on_AXI_read_channel_when_parity_error_detected" number="0x0"/>
            <enumItem name="Error_will_be_sent_on_AXI_read_channel_when_parity_error_detected_and_ParityCheckDis_0" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_PARITY_CTRL_ParityCheckDis_ENUM">
            <enumItem name="RAM_Parity_checking_is_enabled" number="0x0"/>
            <enumItem name="RAM_Parity_checking_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_IRQ_STS_MultipleParityErr_ENUM">
            <enumItem name="Multiple_OCM_parity_Errors_have_not_occurred" number="0x0"/>
            <enumItem name="Multiple_OCM_parity_Errors_have_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="OCM_IRQ_STS_SingleParityErr_ENUM">
            <enumItem name="Single_OCM_parity_Error_has_not_occurred" number="0x0"/>
            <enumItem name="Single_OCM_parity_Error_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="memc_status_state_ENUM">
            <enumItem name="SMC_is_in_the_ready_state" number="0x0"/>
            <enumItem name="SMC_is_in_the_low_power_state" number="0x1"/>
        </enumeration>
        <enumeration name="memif_cfg_exclusive_monitors_ENUM">
            <enumItem name="_0_monitors" number="0x0"/>
            <enumItem name="_1_monitor" number="0x1"/>
            <enumItem name="_2_monitors" number="0x2"/>
            <enumItem name="_4_monitors" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_width1_ENUM">
            <enumItem name="_8_bits" number="0x0"/>
            <enumItem name="_16_bits" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_chips1_ENUM">
            <enumItem name="_1_chip" number="0x0"/>
            <enumItem name="_2_chips" number="0x1"/>
            <enumItem name="_3_chips" number="0x2"/>
            <enumItem name="_4_chips" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_type1_ENUM">
            <enumItem name="SRAM_non_multiplexed" number="0x1"/>
            <enumItem name="NAND" number="0x2"/>
            <enumItem name="SRAM_multiplexed" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_width0_ENUM">
            <enumItem name="_8_bits" number="0x0"/>
            <enumItem name="_16_bits" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_chips0_ENUM">
            <enumItem name="_1_chip" number="0x0"/>
            <enumItem name="_2_chips" number="0x1"/>
            <enumItem name="_3_chips" number="0x2"/>
            <enumItem name="_4_chips" number="0x3"/>
        </enumeration>
        <enumeration name="memif_cfg_memory_type0_ENUM">
            <enumItem name="_reserved" number="0x0"/>
            <enumItem name="SRAM_non_multiplexed" number="0x1"/>
            <enumItem name="NAND" number="0x2"/>
            <enumItem name="SRAM_multiplexed" number="0x3"/>
        </enumeration>
        <enumeration name="memc_cfg_set_ecc_int_enable1_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="ECC_interrupt_enable_memory_interface_1" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_set_ecc_int_enable0_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="ECC_interrupt_enable_memory_interface_0" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_set_low_power_req_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Request_the_SMC_to_enter_low_power_state_when_it_next_becomes_idle" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_set_int_enable1_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Interrupt_enable_memory_interface_1" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_set_int_enable0_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Interrupt_enable_memory_interface_0" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_ecc_int_disable1_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Disable_ECC_Interrupt_on_IF1" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_ecc_int_disable0_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Disable_ECC_Interrupt_on_IF0" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_int_clr_1_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Clear_SMC_Interrupt_1_as_an_alternative_to_an_AXI_read" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_int_clr_0_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Clear_SMC_Interrupt_0_as_an_alternative_to_an_AXI_read" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_low_power_exit_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Request_the_SMC_to_exit_low_power_state" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_int_disable1_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Interrupt_disable_memory_interface_1" number="0x1"/>
        </enumeration>
        <enumeration name="memc_cfg_clr_int_disable0_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Interrupt_disable_memory_interface_0" number="0x1"/>
        </enumeration>
        <enumeration name="direct_cmd_cmd_type_ENUM">
            <enumItem name="UpdateRegs_and_AXI" number="0x0"/>
            <enumItem name="ModeReg" number="0x1"/>
            <enumItem name="UpdateRegs" number="0x2"/>
            <enumItem name="ModeReg_and_UpdateRegs" number="0x3"/>
        </enumeration>
        <enumeration name="direct_cmd_set_cre_ENUM">
            <enumItem name="cre_is_LOW" number="0x0"/>
            <enumItem name="cre_is_HIGH_when_ModeReg_write_occurs" number="0x1"/>
        </enumeration>
        <enumeration name="set_opmode_set_burst_align_ENUM">
            <enumItem name="bursts_can_cross_any_address_boundary" number="0x0"/>
            <enumItem name="burst_split_on_memory_burst_boundary_that_is_32_beats_for_continuous" number="0x1"/>
            <enumItem name="burst_split_on_64_beat_boundary" number="0x2"/>
            <enumItem name="burst_split_on_128_beat_boundary" number="0x3"/>
            <enumItem name="burst_split_on_256_beat_boundary" number="0x4"/>
        </enumeration>
        <enumeration name="set_opmode_set_bls_ENUM">
            <enumItem name="bls_timing_equals_chip_select_timing_This_is_the_default_setting" number="0x0"/>
            <enumItem name="bls_timing_equals_we_n_timing_This_setting_is_used_for_eight_memories_that_have_no_bls_n_inputs_In_this_case_the_bls_n_output_of_the_SMC_is_connected_to_the_we_n_memory_input" number="0x1"/>
        </enumeration>
        <enumeration name="set_opmode_set_wr_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="set_opmode_set_rd_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="set_opmode_set_mw_ENUM">
            <enumItem name="_8_bitsb" number="0x0"/>
            <enumItem name="_16_bitsb" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="refresh_period_0_period_ENUM">
            <enumItem name="disables_the_insertion_of_idle_cycles_between_consecutive_bursts" number="0x0"/>
            <enumItem name="an_idle_cycle_occurs_after_each_burst" number="0x1"/>
            <enumItem name="an_idle_cycle_occurs_after_2_consecutive_bursts" number="0x2"/>
            <enumItem name="an_idle_cycle_occurs_after_3_consecutive_bursts" number="0x3"/>
            <enumItem name="an_idle_cycle_occurs_after_4_consecutive_bursts" number="0x4"/>
            <enumItem name="an_idle_cycle_occurs_after_15_consecutive_bursts" number="0xf"/>
        </enumeration>
        <enumeration name="refresh_period_1_period_ENUM">
            <enumItem name="disables_the_insertion_of_idle_cycles_between_consecutive_bursts" number="0x0"/>
            <enumItem name="an_idle_cycle_occurs_after_each_burst" number="0x1"/>
            <enumItem name="an_idle_cycle_occurs_after_2_consecutive_bursts" number="0x2"/>
            <enumItem name="an_idle_cycle_occurs_after_3_consecutive_bursts" number="0x3"/>
            <enumItem name="an_idle_cycle_occurs_after_4_consecutive_bursts" number="0x4"/>
            <enumItem name="an_idle_cycle_occurs_after_15_consecutive_bursts" number="0xf"/>
        </enumeration>
        <enumeration name="sram_cycles0_0_we_time_ENUM">
            <enumItem name="SMC_asserts_we_n_two_mclk_cycles_after_asserting_cs_n" number="0x0"/>
            <enumItem name="SMC_asserts_we_n_and_cs_n_together" number="0x1"/>
        </enumeration>
        <enumeration name="opmode0_0_burst_align_ENUM">
            <enumItem name="bursts_can_cross_any_address_boundary" number="0x0"/>
            <enumItem name="burst_split_on_memory_burst_boundary_that_is_32_beats_for_continuous" number="0x1"/>
            <enumItem name="burst_split_on_64_beat_boundary" number="0x2"/>
            <enumItem name="burst_split_on_128_beat_boundary" number="0x3"/>
            <enumItem name="burst_split_on_256_beat_boundary" number="0x4"/>
        </enumeration>
        <enumeration name="opmode0_0_bls_ENUM">
            <enumItem name="bls_timing_equals_chip_select_timing_This_is_the_default_setting" number="0x0"/>
            <enumItem name="bls_timing_equals_we_n_timing_This_setting_is_used_for_8_bit_memories_that_have_no_bls_inputs_In_this_case_the_bls_n_output_of_the_SMC_is_connected_to_the_we_n_memory_input" number="0x1"/>
        </enumeration>
        <enumeration name="opmode0_0_wr_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode0_0_rd_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode0_0_mw_ENUM">
            <enumItem name="_8_bits" number="0x0"/>
            <enumItem name="_16_bits" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="sram_cycles0_1_we_time_ENUM">
            <enumItem name="SMC_asserts_we_n_two_mclk_cycles_after_asserting_cs_n" number="0x0"/>
            <enumItem name="SMC_asserts_we_n_and_cs_n_together" number="0x1"/>
        </enumeration>
        <enumeration name="opmode0_1_burst_align_ENUM">
            <enumItem name="bursts_can_cross_any_address_boundary" number="0x0"/>
            <enumItem name="burst_split_on_memory_burst_boundary_that_is_32_beats_for_continuous" number="0x1"/>
            <enumItem name="burst_split_on_64_beat_boundary" number="0x2"/>
            <enumItem name="burst_split_on_128_beat_boundary" number="0x3"/>
            <enumItem name="burst_split_on_256_beat_boundary" number="0x4"/>
        </enumeration>
        <enumeration name="opmode0_1_bls_ENUM">
            <enumItem name="bls_timing_equals_chip_select_timing_This_is_the_default_setting" number="0x0"/>
            <enumItem name="bls_timing_equals_we_n_timing_This_setting_is_used_for_8_bit_memories_that_have_no_bls_inputs_In_this_case_the_bls_n_output_of_the_SMC_is_connected_to_the_we_n_memory_input" number="0x1"/>
        </enumeration>
        <enumeration name="opmode0_1_wr_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode0_1_rd_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode0_1_mw_ENUM">
            <enumItem name="_8_bits" number="0x0"/>
            <enumItem name="_16_bits" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="opmode1_0_burst_align_ENUM">
            <enumItem name="bursts_can_cross_any_address_boundary" number="0x0"/>
            <enumItem name="burst_split_on_memory_burst_boundary_that_is_32_beats_for_continuous" number="0x1"/>
            <enumItem name="burst_split_on_64_beat_boundary" number="0x2"/>
            <enumItem name="burst_split_on_128_beat_boundary" number="0x3"/>
            <enumItem name="burst_split_on_256_beat_boundary" number="0x4"/>
        </enumeration>
        <enumeration name="opmode1_0_bls_ENUM">
            <enumItem name="bls_timing_equals_chip_select_timing_This_is_the_default_setting" number="0x0"/>
            <enumItem name="bls_timing_equals_we_n_timing_This_setting_is_used_for_8_bit_memories_that_have_no_bls_inputs_In_this_case_the_bls_n_output_of_the_SMC_is_connected_to_the_we_n_memory_input" number="0x1"/>
        </enumeration>
        <enumeration name="opmode1_0_wr_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode1_0_rd_bl_ENUM">
            <enumItem name="_1_beat" number="0x0"/>
            <enumItem name="_4_beats" number="0x1"/>
            <enumItem name="_8_beats" number="0x2"/>
            <enumItem name="_16_beats" number="0x3"/>
            <enumItem name="_32_beats" number="0x4"/>
            <enumItem name="continuous" number="0x5"/>
        </enumeration>
        <enumeration name="opmode1_0_mw_ENUM">
            <enumItem name="_8_bits" number="0x0"/>
            <enumItem name="_16_bits" number="0x1"/>
            <enumItem name="_32_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_status_0_ecc_read_ENUM">
            <enumItem name="not_read" number="0x0"/>
            <enumItem name="read" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_0_ecc_can_correct_ENUM">
            <enumItem name="not_correctable" number="0x0"/>
            <enumItem name="correctable" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_0_ecc_read_not_write_ENUM">
            <enumItem name="write" number="0x0"/>
            <enumItem name="read" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_0_ecc_last_status_ENUM">
            <enumItem name="Completed_successfully" number="0x0"/>
            <enumItem name="Unaligned_Address_or_out_of_range" number="0x1"/>
            <enumItem name="Data_stop_after_incomplete_block" number="0x2"/>
            <enumItem name="Data_stopped_but_values_not_read_written_because_of_ecc_jump_value" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_status_0_ecc_status_ENUM">
            <enumItem name="idle" number="0x0"/>
            <enumItem name="busy" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_ecc_extra_block_size_ENUM">
            <enumItem name="_4_bytes" number="0x0"/>
            <enumItem name="_8_bytes" number="0x1"/>
            <enumItem name="_16_bytes" number="0x2"/>
            <enumItem name="_32_bytes" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_ecc_ignore_add_eight_ENUM">
            <enumItem name="A8_is_output" number="0x0"/>
            <enumItem name="A8_is_not_output" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_ecc_jump_ENUM">
            <enumItem name="no_jumping_reads_and_writes_only_occur_at_end_of_page" number="0x0"/>
            <enumItem name="jump_using_column_change_commands" number="0x1"/>
            <enumItem name="jump_using_full_command" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_ecc_read_end_ENUM">
            <enumItem name="the_ECC_value_for_a_block_must_be_read_immediately_after_the_block_Data_access_must_stop_on_a_512_byte_boundary" number="0x0"/>
            <enumItem name="ECC_values_for_all_blocks_are_read_at_the_end_of_the_page" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_ecc_mode_ENUM">
            <enumItem name="bypassed" number="0x0"/>
            <enumItem name="ECC_values_are_calculated_and_made_available_on_the_APB_interface_But_they_are_not_read_to_or_written_from_memory" number="0x1"/>
            <enumItem name="ECC_values_and_calculated_and_read_written_to_memory_For_a_read_the_ECC_value_is_checked_and_the_result_of_the_check_is_made_available_on_the_APB_interface" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_0_page_size_ENUM">
            <enumItem name="No_512_byte_blocks_Reserved_if_an_ecc_extra_block_is_not_configured_and_enabled" number="0x0"/>
            <enumItem name="One_512_byte_block" number="0x1"/>
            <enumItem name="Two_512_byte_blocks" number="0x2"/>
            <enumItem name="Four_512_byte_blocks" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_status_1_ecc_read_ENUM">
            <enumItem name="not_read" number="0x0"/>
            <enumItem name="read" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_1_ecc_can_correct_ENUM">
            <enumItem name="not_correctable" number="0x0"/>
            <enumItem name="correctable" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_1_ecc_read_not_write_ENUM">
            <enumItem name="write" number="0x0"/>
            <enumItem name="read" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_status_1_ecc_last_status_ENUM">
            <enumItem name="Completed_successfully" number="0x0"/>
            <enumItem name="Unaligned_Address_or_out_of_range" number="0x1"/>
            <enumItem name="Data_stop_after_incomplete_block" number="0x2"/>
            <enumItem name="Data_stopped_but_values_not_read_written_because_of_ecc_jump_value" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_status_1_ecc_status_ENUM">
            <enumItem name="idle" number="0x0"/>
            <enumItem name="busy" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_ecc_extra_block_size_ENUM">
            <enumItem name="_4_bytes" number="0x0"/>
            <enumItem name="_8_bytes" number="0x1"/>
            <enumItem name="_16_bytes" number="0x2"/>
            <enumItem name="_32_bytes" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_ecc_ignore_add_eight_ENUM">
            <enumItem name="A8_is_output" number="0x0"/>
            <enumItem name="A8_is_not_output" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_ecc_jump_ENUM">
            <enumItem name="no_jumping_reads_and_writes_only_occur_at_end_of_page" number="0x0"/>
            <enumItem name="jump_using_column_change_commands" number="0x1"/>
            <enumItem name="jump_using_full_command" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_ecc_read_end_ENUM">
            <enumItem name="the_ECC_value_for_a_block_must_be_read_immediately_after_the_block_Data_access_must_stop_on_a_512_byte_boundary" number="0x0"/>
            <enumItem name="ECC_values_for_all_blocks_are_read_at_the_end_of_the_page" number="0x1"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_ecc_mode_ENUM">
            <enumItem name="bypassed" number="0x0"/>
            <enumItem name="ECC_values_are_calculated_and_made_available_on_the_APB_interface_But_they_are_not_read_to_or_written_from_memory" number="0x1"/>
            <enumItem name="ECC_values_and_calculated_and_read_written_to_memory_For_a_read_the_ECC_value_is_checked_and_the_result_of_the_check_is_made_available_on_the_APB_interface" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="ecc_memcfg_1_page_size_ENUM">
            <enumItem name="No_512_byte_blocks_Reserved_if_an_ecc_extra_block_is_not_configured_and_enabled" number="0x0"/>
            <enumItem name="One_512_byte_block" number="0x1"/>
            <enumItem name="Two_512_byte_blocks" number="0x2"/>
            <enumItem name="Four_512_byte_blocks" number="0x3"/>
        </enumeration>
        <enumeration name="ETMTECR1_TraceSSEn_ENUM">
            <enumItem name="Tracing_is_unaffected_by_the_trace_start_stop_logic" number="0x0"/>
            <enumItem name="Tracing_is_controlled_by_the_trace_on_and_off_addresses_configured_for_the_trace_start_stop_logic" number="0x1"/>
        </enumeration>
        <enumeration name="ETMTECR1_ExcIncFlag_ENUM">
            <enumItem name="Include_The_specified_address_range_comparators_indicate_the_regions_where_tracing_can_occur" number="0x0"/>
            <enumItem name="Exclude_The_specified_address_range_comparators_indicate_regions_to_be_excluded_from_the" number="0x1"/>
        </enumeration>
        <enumeration name="ETMAUXCR_ForceSyncInsert_ENUM">
            <enumItem name="Synchronization_packets_delayed_when_trace_activity_is_high_This_is_the_reset_value" number="0x0"/>
            <enumItem name="Synchronization_packets_inserted_regardless_of_trace_activity" number="0x1"/>
        </enumeration>
        <enumeration name="ETMAUXCR_DisableWPUpdate_ENUM">
            <enumItem name="PTM_always_issues_update_packets_if_there_are_more_than_4096_bytes_between_waypoints_This_is_the_reset_value" number="0x0"/>
            <enumItem name="PTM_does_not_issue_waypoint_update_packets_unless_required_to_do_so_as_the_result_of_an_exception_or_debug_entry" number="0x1"/>
        </enumeration>
        <enumeration name="ETMAUXCR_DisableTSOnBarr_ENUM">
            <enumItem name="PTM_issues_timestamps_on_barrier_instructions_This_is_the_reset_value" number="0x0"/>
            <enumItem name="PTM_does_not_issue_timestamps_on_barriers" number="0x1"/>
        </enumeration>
        <enumeration name="ETMAUXCR_DisableForcedOF_ENUM">
            <enumItem name="Forced_overflow_enabled_This_is_the_reset_value" number="0x0"/>
            <enumItem name="Forced_overflow_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_leg_flsh_ENUM">
            <enumItem name="legacy_SPI_mode" number="0x0"/>
            <enumItem name="Flash_memory_interface_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_endian_ENUM">
            <enumItem name="for_little_endian_format_when_writing_to_the_transmit_data_register_0x1C_or_reading_from_the_receive_data_register_0x20" number="0x0"/>
            <enumItem name="for_big_endian_format_when_writing_to_the_transmit_data_register_0x1C_or_reading_from_the_receive_data_register_0x20" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_Man_start_com_ENUM">
            <enumItem name="dont_care" number="0x0"/>
            <enumItem name="start_transmission_of_data" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_Man_start_en_ENUM">
            <enumItem name="auto_mode" number="0x0"/>
            <enumItem name="enables_maual_start" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_Manual_CS_ENUM">
            <enumItem name="auto_mode" number="0x0"/>
            <enumItem name="manual_CS_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_REF_CLK_ENUM">
            <enumItem name="use_SPI_REFERENCE_CLOCK" number="0x0"/>
            <enumItem name="use_ext_clk" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_FIFO_WIDTH_ENUM">
            <enumItem name="_8bits" number="0x0"/>
            <enumItem name="_16bits" number="0x1"/>
            <enumItem name="_24bits" number="0x2"/>
            <enumItem name="_32bits" number="0x3"/>
        </enumeration>
        <enumeration name="Config_reg_BAUD_RATE_DIV_ENUM">
            <enumItem name="divide_by_2" number="0x0"/>
            <enumItem name="divide_by_4" number="0x1"/>
            <enumItem name="divide_by_8" number="0x2"/>
            <enumItem name="divide_by_16" number="0x3"/>
            <enumItem name="divide_by_32" number="0x4"/>
            <enumItem name="divide_by_64" number="0x5"/>
            <enumItem name="divide_by_128" number="0x6"/>
            <enumItem name="divide_by_256" number="0x7"/>
        </enumeration>
        <enumeration name="Config_reg_CLK_PH_ENUM">
            <enumItem name="the_SPI_clock_is_active_outside_the_word" number="0x0"/>
            <enumItem name="the_SPI_clock_is_inactive_outside_the_word" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_CLK_POL_ENUM">
            <enumItem name="the_SPI_clock_is_quiescent_low" number="0x0"/>
            <enumItem name="the_SPI_clock_is_quiescent_high" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg_MODE_SEL_ENUM">
            <enumItem name="the_SPI_is_in_slave_mode" number="0x0"/>
            <enumItem name="the_SPI_is_in_master_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_TX_FIFO_underflow_ENUM">
            <enumItem name="no_underflow_has_been_detected" number="0x0"/>
            <enumItem name="underflow_is_detected" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_RX_FIFO_full_ENUM">
            <enumItem name="FIFO_is_not_full" number="0x0"/>
            <enumItem name="FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_RX_FIFO_not_empty_ENUM">
            <enumItem name="FIFO_has_less_than_RX_THRESHOLD_entries" number="0x0"/>
            <enumItem name="FIFO_has_more_than_or_equal_to_THRESHOLD_entries" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_TX_FIFO_full_ENUM">
            <enumItem name="FIFO_is_not_full" number="0x0"/>
            <enumItem name="FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_TX_FIFO_not_full_ENUM">
            <enumItem name="FIFO_has_more_than_or_equal_toTHRESHOLD_entries" number="0x0"/>
            <enumItem name="FIFO_has_less_than_THRESHOLD_entries" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_REG_RX_OVERFLOW_ENUM">
            <enumItem name="no_overflow_occurred" number="0x0"/>
            <enumItem name="overflow_occured" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_TX_FIFO_underflow_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_RX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_RX_FIFO_not_empty_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_TX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_TX_FIFO_not_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_REG_RX_OVERFLOW_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_TX_FIFO_underflow_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_RX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_RX_FIFO_not_empty_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_TX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_TX_FIFO_not_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_REG_RX_OVERFLOW_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_TX_FIFO_underflow_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_RX_FIFO_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_RX_FIFO_not_empty_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_TX_FIFO_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_TX_FIFO_not_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_REG_RX_OVERFLOW_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="En_REG_SPI_EN_ENUM">
            <enumItem name="disable_the_SPI" number="0x0"/>
            <enumItem name="enable_the_SPI" number="0x1"/>
        </enumeration>
        <enumeration name="LPBK_DLY_ADJ_LPBK_SEL_ENUM">
            <enumItem name="loopback_at_pad" number="0x0"/>
            <enumItem name="loopback_through_external_connections" number="0x1"/>
        </enumeration>
        <enumeration name="LQSPI_CFG_INST_CODE_ENUM">
            <enumItem name="Read" number="0x3"/>
            <enumItem name="Fast_read" number="0xb"/>
            <enumItem name="Fast_read_dual_output" number="0x3b"/>
            <enumItem name="Fast_read_quad_output" number="0x6b"/>
            <enumItem name="Fast_read_dual_I_O" number="0xbb"/>
            <enumItem name="Fast_read_quad_I_O" number="0xeb"/>
        </enumeration>
        <enumeration name="Block_Size_Block_Count_Blocks_Count_for_Current_Transfer_ENUM">
            <enumItem name="Stop_Count" number="0x0"/>
            <enumItem name="_1_block" number="0x1"/>
            <enumItem name="_2_blocks" number="0x2"/>
            <enumItem name="_65535_blocks" number="0xffff"/>
        </enumeration>
        <enumeration name="Block_Size_Block_Count_Host_SDMA_Buffer_Size_ENUM">
            <enumItem name="pclk_divided_by_8" number="0x0"/>
            <enumItem name="pclk_divided_by_64" number="0x1"/>
            <enumItem name="pclk_divided_by_256" number="0x2"/>
            <enumItem name="pclk_divided_by_4096" number="0x3"/>
        </enumeration>
        <enumeration name="Block_Size_Block_Count_Transfer_Block_Size_ENUM">
            <enumItem name="No_Data_Transfer" number="0x0"/>
            <enumItem name="_1_Byte" number="0x1"/>
            <enumItem name="_2_Bytes" number="0x2"/>
            <enumItem name="_3_Bytes" number="0x3"/>
            <enumItem name="_4_Bytes" number="0x4"/>
            <enumItem name="_511_Bytes" number="0x1ff"/>
            <enumItem name="_512_Bytes" number="0x200"/>
            <enumItem name="_2048_Bytes" number="0x800"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Command_Type_ENUM">
            <enumItem name="Normal" number="0x0"/>
            <enumItem name="Suspend" number="0x1"/>
            <enumItem name="Resume" number="0x2"/>
            <enumItem name="Abort" number="0x3"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Data_Present_Select_ENUM">
            <enumItem name="No_Data_Present" number="0x0"/>
            <enumItem name="Data_Present" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Command_Index_Check_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Command_CRC_Check_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Response_Type_Select_ENUM">
            <enumItem name="No_Response" number="0x0"/>
            <enumItem name="Response_length_136" number="0x1"/>
            <enumItem name="Response_length_48" number="0x2"/>
            <enumItem name="Response_length_48_check" number="0x3"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Multi_Single_Block_Select_ENUM">
            <enumItem name="Single_Block" number="0x0"/>
            <enumItem name="Multiple_Block" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Data_Transfer_Direction_Select_ENUM">
            <enumItem name="Write_Host_to_Card" number="0x0"/>
            <enumItem name="Read_Card_to_Host" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Auto_CMD12_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_Block_Count_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Transfer_Mode_Command_DMA_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Write_Protect_Switch_Pin_Level_ENUM">
            <enumItem name="Write_protected_SDWP___1" number="0x0"/>
            <enumItem name="Write_enabled_SDWP___0" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Card_Detect_Pin_Level_ENUM">
            <enumItem name="No_Card_present_SDCD___1" number="0x0"/>
            <enumItem name="Card_present_SDCD___0" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Card_State_Stable_ENUM">
            <enumItem name="Reset_of_Debouncing" number="0x0"/>
            <enumItem name="No_Card_or_Inserted" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Card_Inserted_ENUM">
            <enumItem name="Reset_or_Debouncing_or_No_Card" number="0x0"/>
            <enumItem name="Card_Inserted" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Buffer_Read_Enable_ENUM">
            <enumItem name="Read_Disable" number="0x0"/>
            <enumItem name="Read_Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Buffer_Write_Enable_ENUM">
            <enumItem name="Write_Disable" number="0x0"/>
            <enumItem name="Write_Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Read_Transfer_Active_ENUM">
            <enumItem name="No_valid_data" number="0x0"/>
            <enumItem name="Transferring_data" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Write_Transfer_Active_ENUM">
            <enumItem name="No_valid_data" number="0x0"/>
            <enumItem name="transferring_data" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_DAT_Line_Active_ENUM">
            <enumItem name="DAT_line_inactive" number="0x0"/>
            <enumItem name="DAT_line_active" number="0x1"/>
        </enumeration>
        <enumeration name="Present_State_Command_Inhibit_DAT_ENUM">
            <enumItem name="Can_issue_command_which_uses_the_DAT_line" number="0x0"/>
            <enumItem name="cannot_issue_command_which_uses_the_DAT_line" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Removal_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Insertion_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_Card_Interrupt_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Read_Wait_Control_ENUM">
            <enumItem name="Disable_Read_Wait_Control" number="0x0"/>
            <enumItem name="Enable_Read_Wait_Control" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Continue_Request_ENUM">
            <enumItem name="Ignored" number="0x0"/>
            <enumItem name="Restart" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Stop_At_Block_Gap_Request_ENUM">
            <enumItem name="Transfer" number="0x0"/>
            <enumItem name="Stop" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Voltage_Select_ENUM">
            <enumItem name="_000b" number="0x4"/>
            <enumItem name="_18_VTyp" number="0x5"/>
            <enumItem name="_30_VTyp" number="0x6"/>
            <enumItem name="_33_Flattop" number="0x7"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Power_ENUM">
            <enumItem name="Power_off" number="0x0"/>
            <enumItem name="Power_on" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_detect_signal_detetction_ENUM">
            <enumItem name="SDCD_is_selected_for_normal_use" number="0x0"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_Detect_Test_Level_ENUM">
            <enumItem name="No_Card" number="0x0"/>
            <enumItem name="Card_Inserted" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_DMA_Select_ENUM">
            <enumItem name="SDMA_is_selected" number="0x0"/>
            <enumItem name="_32_bit_Address_ADMA1_is_selected" number="0x1"/>
            <enumItem name="_32_bit_Address_ADMA2_is_selected" number="0x2"/>
            <enumItem name="_64_bit_Address_ADMA2_is_selected" number="0x3"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_High_Speed_Enable_ENUM">
            <enumItem name="Normal_Speed_Mode" number="0x0"/>
            <enumItem name="High_Speed_Mode" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_Data_Transfer_Width_SD1_or_SD4_ENUM">
            <enumItem name="_1_bit_mode" number="0x0"/>
            <enumItem name="_4_bit_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Host_control_Power_control_Block_Gap_Control_Wakeup_control_LED_Control_ENUM">
            <enumItem name="LED_off" number="0x0"/>
            <enumItem name="LED_on" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Software_Reset_for_DAT_Line_ENUM">
            <enumItem name="Work" number="0x0"/>
            <enumItem name="Reset" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Software_Reset_for_CMD_Line_ENUM">
            <enumItem name="Work" number="0x0"/>
            <enumItem name="Reset" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Software_Reset_for_All_ENUM">
            <enumItem name="Work" number="0x0"/>
            <enumItem name="Reset" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Data_Timeout_Counter_Value__ENUM">
            <enumItem name="TMCLK__213" number="0x0"/>
            <enumItem name="TMCLK__214" number="0x1"/>
            <enumItem name="TMCLK__227" number="0xe"/>
            <enumItem name="Reserved" number="0xf"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_SDCLK_Frequency_Select_ENUM">
            <enumItem name="base_clock10MHz_63MHz" number="0x0"/>
            <enumItem name="base_clock_divided_by_2" number="0x1"/>
            <enumItem name="base_clock_divided_by_4" number="0x2"/>
            <enumItem name="base_clock_divided_by_8" number="0x4"/>
            <enumItem name="base_clock_divided_by_16" number="0x8"/>
            <enumItem name="base_clock_divided_by_32" number="0x10"/>
            <enumItem name="base_clock_divided_by_64" number="0x20"/>
            <enumItem name="base_clock_divided_by_128" number="0x40"/>
            <enumItem name="base_clock_divided_by_256" number="0x80"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_SD_Clock_Enable_ENUM">
            <enumItem name="Disable" number="0x0"/>
            <enumItem name="Enable" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Internal_Clock_Stable_ENUM">
            <enumItem name="Not_Ready" number="0x0"/>
            <enumItem name="Ready" number="0x1"/>
        </enumeration>
        <enumeration name="Clock_Control_Timeout_control_Software_reset_Internal_Clock_Enable_ENUM">
            <enumItem name="Stop" number="0x0"/>
            <enumItem name="Oscillate" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Ceata_Error_Status_ENUM">
            <enumItem name="no_error" number="0x0"/>
            <enumItem name="error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Target_Response_error_ENUM">
            <enumItem name="no_error" number="0x0"/>
            <enumItem name="error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_ADMA_Error_ENUM">
            <enumItem name="No_error" number="0x0"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Auto_CMD12_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Current_Limit_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Power_Fail" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Data_End_Bit_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Data_CRC_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Data_Timeout_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Timeout" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Command_Index_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Command_End_Bit_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="End_Bit_Error_Generated" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Command_CRC_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="CRC_Error_Generated" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Command_Timeout_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Timeout" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Error_Interrupt_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Boot_terminate_Interrupt_ENUM">
            <enumItem name="Boot_operation_is_not_teminated" number="0x0"/>
            <enumItem name="Boot_operation_is_teminated" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Boot_ack_rcv_ENUM">
            <enumItem name="Boot_ack_is_not_received" number="0x0"/>
            <enumItem name="Boot_ack_is_received" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Card_Interrupt_ENUM">
            <enumItem name="No_Card_Interrupt" number="0x0"/>
            <enumItem name="Generate_Card_Interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Card_Removal_ENUM">
            <enumItem name="Card_State_Stable_or_Debouncing" number="0x0"/>
            <enumItem name="Card_Removed" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Card_Insertion_ENUM">
            <enumItem name="Card_State_Stable_or_Debouncing" number="0x0"/>
            <enumItem name="Card_Inserted" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Buffer_Read_Ready_ENUM">
            <enumItem name="Not_Ready_to_read_Buffer" number="0x0"/>
            <enumItem name="Ready_to_read_Buffer" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Buffer_Write_Ready_ENUM">
            <enumItem name="Not_Ready_to_Write_Buffer" number="0x0"/>
            <enumItem name="Ready_to_Write_Buffer" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_DMA_Interrupt_ENUM">
            <enumItem name="No_DMA_Interrupt" number="0x0"/>
            <enumItem name="DMA_Interrupt_is_Generated" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Block_Gap_Event_ENUM">
            <enumItem name="No_Block_Gap_Event" number="0x0"/>
            <enumItem name="Transaction_stopped_at_Block" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Transfer_Complete_ENUM">
            <enumItem name="No_Data_Transfer_Complete" number="0x0"/>
            <enumItem name="Data_Transfer_Complete" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_Error_interrupt_status_Command_Complete_ENUM">
            <enumItem name="No_Command_Complete" number="0x0"/>
            <enumItem name="Command_Complete" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Ceata_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Target_Response_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_ADMA_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Auto_CMD12_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Current_Limit_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_End_Bit_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_CRC_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_Timeout_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Index_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_End_Bit_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_CRC_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Timeout_Error_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_terminate_Interrupt_enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_ack_rcv_enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Interrupt_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Removal_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Insertion_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Read_Ready_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Write_Ready_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_DMA_Interrupt_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Block_Gap_Event_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Transfer_Complete_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Complete_Status_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Ceata_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Target_Response_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_ADMA_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Auto_CMD12_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Current_Limit_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_End_Bit_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_CRC_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_Timeout_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Index_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_End_Bit_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_CRC_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Timeout_Error_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_terminate_Interrupt_signal_enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_ack_rcv_signal_enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Interrupt_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Removal_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Insertion_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Read_Ready_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Write_Ready_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_DMA_Interrupt_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Block_Gap_Event_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Transfer_Complete_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Complete_Signal_Enable_ENUM">
            <enumItem name="Masked" number="0x0"/>
            <enumItem name="Enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Command_Not_Issued_By_Auto_CMD12_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Not_Issued" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Auto_CMD12_Index_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Auto_CMD12_End_Bit_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="End_Bit_Error_Generated" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Auto_CMD12_CRC_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="CRC_Error_Generated" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Auto_CMD12_Timeout_Error_ENUM">
            <enumItem name="No_Error" number="0x0"/>
            <enumItem name="Timeout" number="0x1"/>
        </enumeration>
        <enumeration name="Auto_CMD12_error_status_Auto_CMD12_not_Executed_ENUM">
            <enumItem name="Executed" number="0x0"/>
            <enumItem name="Not_Executed" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Spi_block_mode_ENUM">
            <enumItem name="Not_Supported" number="0x0"/>
            <enumItem name="Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Spi_mode_ENUM">
            <enumItem name="Not_Supported" number="0x0"/>
            <enumItem name="Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_n64_bit_System_Bus_Support_ENUM">
            <enumItem name="Does_not_support_64_bit_system" number="0x0"/>
            <enumItem name="supports_64_bit_system_address" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Interrupt_mode_ENUM">
            <enumItem name="Not_Supported" number="0x0"/>
            <enumItem name="Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Voltage_Support_1_8_V_ENUM">
            <enumItem name="_18_V_Not_Supported" number="0x0"/>
            <enumItem name="_18_V_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Voltage_Support_3_0_V_ENUM">
            <enumItem name="_30_V_Not_Supported" number="0x0"/>
            <enumItem name="_30_V_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Voltage_Support_3_3_V_ENUM">
            <enumItem name="_33_V_Not_Supported" number="0x0"/>
            <enumItem name="_33_V_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Suspend_Resume_Support_ENUM">
            <enumItem name="Not_Supported" number="0x0"/>
            <enumItem name="Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_SDMA_Support_ENUM">
            <enumItem name="SDMA_Not_Supported" number="0x0"/>
            <enumItem name="SDMA_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_High_Speed_Support_ENUM">
            <enumItem name="High_Speed_Not_Supported" number="0x0"/>
            <enumItem name="High_Speed_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_ADMA2_Support_ENUM">
            <enumItem name="ADMA2_not_support" number="0x0"/>
            <enumItem name="ADMA2_support" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Extended_Media_Bus_Support_ENUM">
            <enumItem name="Extended_Media_Bus_not_Supported" number="0x0"/>
            <enumItem name="Extended_Media_Bus_Supported" number="0x1"/>
        </enumeration>
        <enumeration name="Capabilities_Max_Block_Length_ENUM">
            <enumItem name="_512_byte" number="0x0"/>
            <enumItem name="_1024_byte" number="0x1"/>
            <enumItem name="_2048_byte" number="0x2"/>
            <enumItem name="_4096_byte" number="0x3"/>
        </enumeration>
        <enumeration name="Capabilities_Base_Clock_Frequency_for_SD_Clock_ENUM">
            <enumItem name="Get_information_via_another_method" number="0x0"/>
        </enumeration>
        <enumeration name="Capabilities_Timeout_Clock_Unit_ENUM">
            <enumItem name="Khz" number="0x0"/>
            <enumItem name="Mhz" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Vendor_Specific_Error_Status_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Ceata_error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_event_for_Target_Response_error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_ADMA_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Current_Limit_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_End_Bit_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_CRC_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data__Timeout_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Index_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_End_Bit_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_CRC_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Timeout_Error_ENUM">
            <enumItem name="No_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_command_not_issued_by_Auto_CMD12_Error_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Index_Error_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_End_bit_Error_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_CRC_Error_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_timeout_Error_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_NOT_Executed_ENUM">
            <enumItem name="no_interrupt" number="0x0"/>
            <enumItem name="Interrupt_is_generated" number="0x1"/>
        </enumeration>
        <enumeration name="ADMA_error_status_ADMA_Length_Mismatch_Error_ENUM">
            <enumItem name="No_error" number="0x0"/>
            <enumItem name="Error" number="0x1"/>
        </enumeration>
        <enumeration name="ADMA_error_status_ADMA_Error_State_ENUM">
            <enumItem name="ST_STOP_Stop_DMA_Points_next_of_the_error" number="0x0"/>
            <enumItem name="ST_FDS_Fetch_Descriptor_Points_the_error" number="0x1"/>
            <enumItem name="Never_set_this_state_Not_used" number="0x2"/>
            <enumItem name="ST_TFR_Transfer_Data_Points_the_next_of_the" number="0x3"/>
        </enumeration>
        <enumeration name="Debug_Selection_Debug_sel_ENUM">
            <enumItem name="receiver_module_and_fifo_ctrl_module" number="0x0"/>
        </enumeration>
        <enumeration name="Slot_interrupt_status_Host_controller_version_Specification_Version_Number_ENUM">
            <enumItem name="SD_Host_Specification_version_200_including_only_the_feature_of_theTest_Register" number="0x1"/>
        </enumeration>
        <enumeration name="SCL_LOCK_ENUM">
            <enumItem name="locked_all_writes_to_Secure_configuration_registers_are_disabled_and_cannot_be_enabled_until_power_on_reset_is_asserted" number="0x1"/>
        </enumeration>
        <enumeration name="SLCR_LOCKSTA_LOCK_STATUS_ENUM">
            <enumItem name="Registers_are_writeable" number="0x0"/>
            <enumItem name="Registers_are_not_writeable_Any_attempted_writes_are_ignored_but_reads_will_complete_as_normal" number="0x1"/>
        </enumeration>
        <enumeration name="IO_PLL_CTRL_PLL_BYPASS_FORCE_ENUM">
            <enumItem name="PLL_forced_to_be_bypassed" number="0x1"/>
        </enumeration>
        <enumeration name="PLL_BG_CTRL_BG_PWRDWN_ENUM">
            <enumItem name="PLL_BandGap_powered_up" number="0x0"/>
            <enumItem name="PLL_BandGap_powered_down" number="0x1"/>
        </enumeration>
        <enumeration name="USB0_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL_top_level_USB0_MIO_ULPI_clock_is_an_output" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL_top_level_USB0_MIO_ULPI_clock_is_an_output" number="0x3"/>
        </enumeration>
        <enumeration name="USB1_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL_top_level_USB0_MIO_ULPI_clock_is_an_output" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL_top_level_USB0_MIO_ULPI_clock_is_an_output" number="0x3"/>
        </enumeration>
        <enumeration name="GEM0_RCLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_GEM_0_MIO_RX_clock" number="0x0"/>
            <enumItem name="Source_for_generated_clock_is_GEM_0_FMIO_RX_clock" number="0x1"/>
        </enumeration>
        <enumeration name="GEM1_RCLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_GEM_0_MIO_RX_clock" number="0x0"/>
            <enumItem name="Source_for_generated_clock_is_GEM_0_FMIO_RX_clock" number="0x1"/>
        </enumeration>
        <enumeration name="SDIO_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="UART_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="SPI_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="CAN_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="FPGA0_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="FPGA0_THR_CTRL_SYNC_ENUM">
            <enumItem name="fpga_stop_is_asynchronous_to_FPGA_clock" number="0x0"/>
            <enumItem name="fpga_stop_is_synchronous_to_FPGA_clock" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA0_THR_CTRL_EDGE_ENUM">
            <enumItem name="debug_level_stop_mode" number="0x0"/>
            <enumItem name="debug_edge_stop_mode" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA0_THR_CTRL_CNT_RST_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Causes_counter_to_be_reset_once_HALT_state_is_entered" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA0_THR_CTRL_CPU_START_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Start_count_or_restart_count_if_previous_value_was_0" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA0_THR_STA_RUNNING_ENUM">
            <enumItem name="Clock_is_stopped_or_in_normal_mode_OK_to_change_config" number="0x0"/>
            <enumItem name="Clock_is_runnnig_in_debug_mode_Keep_config_static" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA1_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="FPGA1_THR_CTRL_SYNC_ENUM">
            <enumItem name="fpga_stop_is_asynchronous_to_FPGA_clock" number="0x0"/>
            <enumItem name="fpga_stop_is_synchronous_to_FPGA_clock" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA1_THR_CTRL_EDGE_ENUM">
            <enumItem name="debug_level_stop_mode" number="0x0"/>
            <enumItem name="debug_edge_stop_mode" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA1_THR_CTRL_CNT_RST_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Causes_counter_to_be_reset_once_HALT_state_is_entered" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA1_THR_CTRL_CPU_START_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Start_count_or_restart_count_if_previous_value_was_0" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA1_THR_STA_RUNNING_ENUM">
            <enumItem name="Clock_is_stopped_or_in_normal_mode_OK_to_change_config" number="0x0"/>
            <enumItem name="Clock_is_runnnig_in_debug_mode_Keep_config_static" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA2_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="FPGA2_THR_CTRL_SYNC_ENUM">
            <enumItem name="fpga_stop_is_asynchronous_to_FPGA_clock" number="0x0"/>
            <enumItem name="fpga_stop_is_synchronous_to_FPGA_clock" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA2_THR_CTRL_EDGE_ENUM">
            <enumItem name="debug_level_stop_mode" number="0x0"/>
            <enumItem name="debug_edge_stop_mode" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA2_THR_CTRL_CNT_RST_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Causes_counter_to_be_reset_once_HALT_state_is_entered" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA2_THR_CTRL_CPU_START_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Start_count_or_restart_count_if_previous_value_was_0" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA2_THR_STA_RUNNING_ENUM">
            <enumItem name="Clock_is_stopped_or_in_normal_mode_OK_to_change_config" number="0x0"/>
            <enumItem name="Clock_is_runnnig_in_debug_mode_Keep_config_static" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA3_CLK_CTRL_SRCSEL_ENUM">
            <enumItem name="Source_for_generated_clock_is_ARM_PLL" number="0x2"/>
            <enumItem name="Source_for_generated_clock_is_DDR_PLL" number="0x3"/>
        </enumeration>
        <enumeration name="FPGA3_THR_CTRL_SYNC_ENUM">
            <enumItem name="fpga_stop_is_asynchronous_to_FPGA_clock" number="0x0"/>
            <enumItem name="fpga_stop_is_synchronous_to_FPGA_clock" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA3_THR_CTRL_EDGE_ENUM">
            <enumItem name="debug_level_stop_mode" number="0x0"/>
            <enumItem name="debug_edge_stop_mode" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA3_THR_CTRL_CNT_RST_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Causes_counter_to_be_reset_once_HALT_state_is_entered" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA3_THR_CTRL_CPU_START_ENUM">
            <enumItem name="No_effect" number="0x0"/>
            <enumItem name="Start_count_or_restart_count_if_previous_value_was_0" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA3_THR_STA_RUNNING_ENUM">
            <enumItem name="Clock_is_stopped_or_in_normal_mode_OK_to_change_config" number="0x0"/>
            <enumItem name="Clock_is_runnnig_in_debug_mode_Keep_config_static" number="0x1"/>
        </enumeration>
        <enumeration name="SYNC_CTRL_APU_DDR_1TO1_ENUM">
            <enumItem name="asynchronous_mode" number="0x0"/>
            <enumItem name="CPU_and_DDR_at_1_to_1_clock_ratio" number="0x1"/>
        </enumeration>
        <enumeration name="CLK_621_TRUE_CLK_621_TRUE_ENUM">
            <enumItem name="for_4_2_2_1" number="0x0"/>
            <enumItem name="for_6_3_2_1" number="0x1"/>
        </enumeration>
        <enumeration name="PICTURE_DBG_CLOCK_SEL_ENUM">
            <enumItem name="IO_PLL_clock" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="PICTURE_DBG_TRIGGER_SEL_ENUM">
            <enumItem name="SLCR_default" number="0x0"/>
            <enumItem name="Fabric_Not_implemented" number="0x1"/>
            <enumItem name="Address_match_AXIM_not_implemented" number="0x2"/>
        </enumeration>
        <enumeration name="PSS_RST_CTRL_SOFT_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="PSS_software_reset_initiated" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_RST_CTRL_DDR_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="DDR_subsystem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="DMAC_RST_CTRL_DMAC_RST_ENUM">
            <enumItem name="DMAC_not_in_reset_DMAC_TrustZone_register_is_read_only" number="0x0"/>
            <enumItem name="DMAC_held_in_reset_DMAC_TrustZone_register_is_now_programmable" number="0x1"/>
        </enumeration>
        <enumeration name="USB_RST_CTRL_USB1_ULPI_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="ULPI_clock_portion_of_USB_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="USB_RST_CTRL_USB0_ULPI_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="ULPI_clock_portion_of_USB_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="USB_RST_CTRL_USB1_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="master_and_slave_AMBA_clock_portion_of_USB_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="USB_RST_CTRL_USB0_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="master_and_slave_AMBA_clock_portion_of_USB_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM1_REF_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="Reference_clock_portion_of_GEM_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM0_REF_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="Reference_clock_portion_of_GEM_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM1_RX_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="RX_clock_portion_of_GEM_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM0_RX_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="RX_clock_portion_of_GEM_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM1_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="Gigabit_Ethernet_MAC_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="GEM_RST_CTRL_GEM0_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="Gigabit_Ethernet_MAC_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="SDIO_RST_CTRL_SDIO1_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="master_and_slave_AMBA_clock_portion_of_SDIO_1_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="SDIO_RST_CTRL_SDIO0_CPU1X_RST_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="master_and_slave_AMBA_clock_portion_of_SDIO_0_subsytem_held_in_reset" number="0x1"/>
        </enumeration>
        <enumeration name="FPGA_RST_CTRL_FPGA_ACP_RST_ENUM">
            <enumItem name="No_reset_1" number="0x0"/>
        </enumeration>
        <enumeration name="A9_CPU_RST_CTRL_A9_RST1_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="reset_A9_core_1" number="0x1"/>
        </enumeration>
        <enumeration name="A9_CPU_RST_CTRL_A9_RST0_ENUM">
            <enumItem name="No_reset" number="0x0"/>
            <enumItem name="reset_A9_core_0" number="0x1"/>
        </enumeration>
        <enumeration name="RS_AWDT_CTRL_CTRL0_ENUM">
            <enumItem name="reset_Pele" number="0x0"/>
            <enumItem name="reset_ARM_core" number="0x1"/>
        </enumeration>
        <enumeration name="BOOT_MODE_PLL_BYPASS_ENUM">
            <enumItem name="All_PLL_outputs_are_by_default_routed_to_clock_distribution" number="0x0"/>
            <enumItem name="All_PLL_outputs_are_bypassed_and_reference_clock_input_will_feed_clock_distribution" number="0x1"/>
        </enumeration>
        <enumeration name="BOOT_MODE_BOOT_MODE_ENUM">
            <enumItem name="PSS_boots_from_JTAG_on_FPGA_side" number="0x4"/>
            <enumItem name="DFT_mode_special_mode_to_enable_FPGA_immediately_with_security_shut_down" number="0x7"/>
        </enumeration>
        <enumeration name="WDT_CLK_SEL_SEL_ENUM">
            <enumItem name="cpu_1xclk" number="0x0"/>
            <enumItem name="wdt_clk_in_from_FPGA" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DDR_RAM_TZ31_ENUM">
            <enumItem name="Secure_reset_value" number="0x0"/>
            <enumItem name="Non_secure" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DDR_RAM_TZ2_ENUM">
            <enumItem name="Secure_reset_value" number="0x0"/>
            <enumItem name="Non_secure" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DDR_RAM_TZ1_ENUM">
            <enumItem name="Secure_reset_value" number="0x0"/>
            <enumItem name="Non_secure" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DDR_RAM_TZ0_ENUM">
            <enumItem name="Secure_reset_value" number="0x0"/>
            <enumItem name="Non_secure" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DMA_NS_DMAC_NS_ENUM">
            <enumItem name="secure_DMAC_operates_in_the_secure_state" number="0x0"/>
            <enumItem name="non_secure_DMAC_operates_in_the_non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DMA_IRQ_NS_DMA_IRQ_NS_ENUM">
            <enumItem name="secure_DMAC_operates_in_the_secure_state" number="0x0"/>
            <enumItem name="non_secure_DMAC_interrupt_event_bit_is_in_the_non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="TZ_DMA_PERIPH_NS_DMAC_PERIPH_NS_ENUM">
            <enumItem name="secure_DMAC_operates_in_the_secure_state" number="0x0"/>
            <enumItem name="non_secure_reset_value__DMAC_peripheral_i_f_is_in_the_non_secure_state" number="0x1"/>
        </enumeration>
        <enumeration name="DBG_CTRL_SRST_B_TRI_B_ENUM">
            <enumItem name="SRST_B_pad_is_an_input_for_soft_reset_signal" number="0x0"/>
            <enumItem name="SRST_B_pad_is_an_output_dirven_by_UART0_TX" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_URGENT_S0_ARURGENT_ENUM">
            <enumItem name="DDRs_AXI_port_S0_read_not_requesting_urgent_prioritization" number="0x0"/>
            <enumItem name="DDRs_AXI_port_S0_read_is_requesting_urgent_prioritization" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_URGENT_S0_AWURGENT_ENUM">
            <enumItem name="DDRs_AXI_port_S0_write_not_requesting_urgent_prioritization" number="0x0"/>
            <enumItem name="DDRs_AXI_port_S0_write_is_requesting_urgent_prioritization" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_CAL_START_START_CAL_DLL_ENUM">
            <enumItem name="Do_nothing" number="0x0"/>
            <enumItem name="Start_DLL_calibration_command" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_CAL_START_START_CAL_SHORT_ENUM">
            <enumItem name="Do_nothing" number="0x0"/>
            <enumItem name="Start_ZQ_calibration_short_command" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_REF_START_START_REF_ENUM">
            <enumItem name="Do_nothing" number="0x0"/>
            <enumItem name="Start_refresh" number="0x1"/>
        </enumeration>
        <enumeration name="DDR_CMD_STA_CMD_Q_NEMPTY_ENUM">
            <enumItem name="indicates_DDRC_command_store_is_empty" number="0x0"/>
            <enumItem name="indicates_there_are_commands_pending_in_DDRC_command_store" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="smc_cs0_Output_smc_sram_cs_n_0__SRAM_CS0" number="0x1"/>
            <enumItem name="nand_cs_Output_smc_nand_cs_n__NAND_chip_select" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_00_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="qspi_sel_Output_qspi_n_ss_out_upper__QSPI_Upper_select" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="smc_a25_Output_smc_sram_add_25__SRAM_Address" number="0x1"/>
            <enumItem name="smc_cs1_Output_smc_sram_cs_n_1__SRAM_CS1" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_01_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="qspi_sel_Output_qspi_n_ss_out__QSPI_Select" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_02_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_02_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_02_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_02_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_clk__SRAM_Clock" number="0x1"/>
            <enumItem name="nand_Output_smc_nand_ale__NAND_Address_Latch_Enable" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_02_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_8__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_03_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_03_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_03_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_03_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_0__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Output_smc_nand_we_b__NAND_Write_Enable" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_03_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_9__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_04_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_04_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_04_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_04_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_1__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_2__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_04_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_10__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_05_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_05_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_05_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_05_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_2__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_0__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_05_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_11__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_3__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_1__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_12__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_06_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="qspi_Output_qspi_sclk_out__QSPI_Clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_L3_SEL_ENUM">
            <enumItem name="gpio0_Output_gpio_0_pin_out_7__GPIO_bank_0" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="Not_Used_3" number="0x3"/>
            <enumItem name="Not_Used_4" number="0x4"/>
            <enumItem name="Not_Used_5" number="0x5"/>
            <enumItem name="Not_Used_6" number="0x6"/>
            <enumItem name="Not_Used_7" number="0x7"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_oe_b__SRAM_Output_enable" number="0x1"/>
            <enumItem name="nand_Output_smc_nand_cle__NAND_Command_Latch_Enable" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_13__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_07_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_L3_SEL_ENUM">
            <enumItem name="gpio0_Output_gpio_0_pin_out_8__GPIO_bank_0" number="0x0"/>
            <enumItem name="can1_Output_can1_phy_tx__Can_TX_signal" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="Not_Used_3" number="0x3"/>
            <enumItem name="Not_Used_4" number="0x4"/>
            <enumItem name="Not_Used_5" number="0x5"/>
            <enumItem name="Not_Used_6" number="0x6"/>
            <enumItem name="ua1_Output_ua1_txd__UART_transmitter_serial_output" number="0x7"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_we_b__SRAM_Write_enable" number="0x1"/>
            <enumItem name="nand_Output_smc_nand_re_b__NAND_Read_Enable" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_14__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_08_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="qspi_Output_qspi_clk_for_lpbk__QSPI_Clock_to_be_fed_back" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_6__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_4__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_15__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_09_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="qspi_Output_qspi_sclk_out_upper__QSPI_Upper_Clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_10_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_10_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_10_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_10_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_7__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_5__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_10_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_2__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_11_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_11_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_11_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_11_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_4__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_6__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_11_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_3__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_12_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_12_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_12_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_12_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_wait__SRAM_Wait_State_indicator" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_7__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_12_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_ctl_Output_traceclk__Trace_Port_Clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_13_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_13_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_13_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_13_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_data_in_5__SRAM_Data" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_3__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_13_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_ctl_Output_tracectl__Trace_Port_Control_Signal" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Input_smc_sram_fbclk__SRAM_Feedback_Clock" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_busy__NAND_Busy" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_0__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_14_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_0__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_1__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_15_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_1__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_8__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_4__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_16_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_tx_clk__TX_RGMII_clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_2__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_9__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_5__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_17_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_txd_0__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_3__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_10__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_6__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_18_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_txd_1__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_4__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_11__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_7__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_19_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_txd_2__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_5__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_12__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_20_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_txd_3__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_6__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_13__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_21_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Output_gem0_rgmii_tx_ctl__TX_RGMII_control" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_7__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_14__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_2__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_22_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rx_clk__RX_RGMII_clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_8__SRAM_Address" number="0x1"/>
            <enumItem name="nand_Input_smc_nand_data_in_15__NAND_Data_Bus" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_3__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_23_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rxd_0__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_9__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_ctl_Output_traceclk__Trace_Port_Clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_24_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rxd_1__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_10__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_ctl_Output_tracectl__Trace_Port_Control_Signal" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_25_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rxd_2__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_11__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_0__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_26_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rxd_3__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_12__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="trace_data_Output_tracedq_1__Trace_Port_Databus" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_27_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem0_Input_gem0_rgmii_rx_ctl__RX_RGMII_control_" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_28_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_28_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_28_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_28_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_13__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_28_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_tx_clk__TX_RGMII_clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_14__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb0_Input_usb0_ulpi_dir__Data_bus_direction_control" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_29_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_txd_0__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_15__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb0_Output_usb0_ulpi_stp__Asserted_to_end_or_interrupt_transfers" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_30_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_txd_1__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_16__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb0_Input_usb0_ulpi_nxt__Data_flow_control_signal_from_the_PHY" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_31_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_txd_2__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_32_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_32_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_32_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_32_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_17__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_32_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_txd_3__TX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_33_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_33_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_33_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_33_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_18__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_33_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Output_gem1_rgmii_tx_ctl__TX_RGMII_control" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_34_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_34_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_34_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_34_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_19__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_34_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rx_clk__RX_RGMII_clock" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_35_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_35_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_35_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_35_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_20__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_35_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rxd_0__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_36_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_36_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_36_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_36_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_21__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_36_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rxd_1__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_37_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_37_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_37_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_37_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_22__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_37_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rxd_2__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_38_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_38_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_38_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_38_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_23__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_38_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rxd_3__RX_RGMII_data" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_39_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_39_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_39_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_39_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="sram_nor_Output_smc_sram_add_24__SRAM_Address" number="0x1"/>
            <enumItem name="Not_Used" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_39_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="gem1_Input_gem1_rgmii_rx_ctl__RX_RGMII_control_" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_40_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_40_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_40_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_40_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_40_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb1_Input_usb1_ulpi_dir__Data_bus_direction_control" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_41_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb1_Output_usb1_ulpi_stp__Asserted_to_end_or_interrupt_transfers" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_42_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="usb1_Input_usb1_ulpi_nxt__Data_flow_control_signal_from_the_PHY" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_43_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_44_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_44_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_44_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_44_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_44_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_45_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_45_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_45_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_45_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_45_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_46_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_46_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_46_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_46_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_46_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_47_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_47_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_47_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_47_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_47_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_48_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_48_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_48_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_48_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_48_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_49_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_49_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_49_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_49_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_49_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_50_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_50_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_50_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_50_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_50_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_51_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_51_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_51_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_51_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_51_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio0_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_52_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_DisableRcvr_ENUM">
            <enumItem name="Receiver_Enabled" number="0x0"/>
            <enumItem name="Receiver_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_PULLUP_ENUM">
            <enumItem name="Pull_up_disabled" number="0x0"/>
            <enumItem name="Pull_up_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_IO_Type_ENUM">
            <enumItem name="LVTTL" number="0x0"/>
            <enumItem name="LVCMOS18" number="0x1"/>
            <enumItem name="LVCMOS25" number="0x2"/>
            <enumItem name="LVCMOS33" number="0x3"/>
            <enumItem name="HSTL" number="0x4"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_L2_SEL_ENUM">
            <enumItem name="Level_3_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
            <enumItem name="Not_Used_2" number="0x2"/>
            <enumItem name="sdio_pow_Output_sdio1_bus_pow__SD_card_bus_power" number="0x3"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_L1_SEL_ENUM">
            <enumItem name="Level_2_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_PIN_53_L0_SEL_ENUM">
            <enumItem name="Level_1_Mux_Output" number="0x0"/>
            <enumItem name="Not_Used" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_LOOPBACK_I2C0_LOOP_I2C1_ENUM">
            <enumItem name="Connect_I2C_inputs_according_to_MIO_mapping" number="0x0"/>
            <enumItem name="Loop_I2C_0_outputs_to_I2C_1_inputs_and_I2C_1_outputs" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_LOOPBACK_CAN0_LOOP_CAN1_ENUM">
            <enumItem name="Connect_CAN_inputs_according_to_MIO_mapping" number="0x0"/>
            <enumItem name="Loop_CAN_0_TX_to_CAN_1_RX_and_CAN_1_TX_to_CAN_0_RX" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_LOOPBACK_UA0_LOOP_UA1_ENUM">
            <enumItem name="Connect_UART_inputs_according_to_MIO_mapping" number="0x0"/>
            <enumItem name="Loop_UART_0_outputs_to_UART_1_inputs_and_UART_1_outputs_to_UART_0_inputs" number="0x1"/>
        </enumeration>
        <enumeration name="MIO_LOOPBACK_SPI0_LOOP_SPI1_ENUM">
            <enumItem name="Connect_SPI_inputs_according_to_MIO_mapping" number="0x0"/>
            <enumItem name="Loop_SPI_0_outputs_to_SPI_1_inputs_and_SPI_1_outputs_to_SPI_0_inputs" number="0x1"/>
        </enumeration>
        <enumeration name="GPIOB_CTRL_VREF_SW_EN_ENUM">
            <enumItem name="internal" number="0x0"/>
            <enumItem name="external" number="0x1"/>
        </enumeration>
        <enumeration name="GPIOB_CTRL_VREF_EXT_ENUM">
            <enumItem name="normal_operation_should_be_sufficient" number="0x0"/>
            <enumItem name="higher_performance_more_power" number="0x1"/>
        </enumeration>
        <enumeration name="GPIOB_CTRL_VREF_SEL_ENUM">
            <enumItem name="VREF___test_mode" number="0x0"/>
            <enumItem name="VREF___test_mode_1" number="0x1"/>
            <enumItem name="VREF___test_mode_2" number="0x2"/>
            <enumItem name="VREF___test_mode_4" number="0x4"/>
            <enumItem name="VREF___test_mode_8" number="0x8"/>
            <enumItem name="VREF___test_mode_16" number="0x10"/>
            <enumItem name="VREF___test_mode_32" number="0x20"/>
        </enumeration>
        <enumeration name="DDRIOB_ADDR0_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_ADDR1_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_DATA0_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_DATA1_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_DIFF0_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_DIFF1_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_CLOCK_INP_TYPE_ENUM">
            <enumItem name="Input_off_reads_0" number="0x0"/>
            <enumItem name="Vref_based_differential_reciever_for_SSTL_HSTL" number="0x1"/>
            <enumItem name="Differential_input_reciever" number="0x2"/>
        </enumeration>
        <enumeration name="DDRIOB_DCI_CTRL_ENABLE_ENUM">
            <enumItem name="if_any_iobs_use_a_terminate_type_or_if_dci_test_block_used" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_Modefail_gen_en_ENUM">
            <enumItem name="disable" number="0x0"/>
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_Man_start_com_ENUM">
            <enumItem name="dont_care" number="0x0"/>
            <enumItem name="start_transmission_of_data" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_Man_start_en_ENUM">
            <enumItem name="auto_mode" number="0x0"/>
            <enumItem name="enables_maual_start" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_Manual_CS_ENUM">
            <enumItem name="auto_mode" number="0x0"/>
            <enumItem name="manual_CS_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_CS_ENUM">
            <enumItem name="slave_3_selected" number="0x7"/>
            <enumItem name="No_slave_selected" number="0xf"/>
        </enumeration>
        <enumeration name="Config_reg0_PERI_SEL_ENUM">
            <enumItem name="only_1_of_4_selects" number="0x0"/>
            <enumItem name="allow_external_4_to_16_decode" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_REF_CLK_ENUM">
            <enumItem name="use_SPI_REFERENCE_CLOCK" number="0x0"/>
            <enumItem name="use_ext_clk" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_FIFO_WIDTH_ENUM">
            <enumItem name="_8bits" number="0x0"/>
            <enumItem name="_16bits" number="0x1"/>
            <enumItem name="_24bits" number="0x2"/>
            <enumItem name="_32bits" number="0x3"/>
        </enumeration>
        <enumeration name="Config_reg0_BAUD_RATE_DIV_ENUM">
            <enumItem name="not_supported" number="0x0"/>
            <enumItem name="divide_by_4" number="0x1"/>
            <enumItem name="divide_by_8" number="0x2"/>
            <enumItem name="divide_by_16" number="0x3"/>
            <enumItem name="divide_by_32" number="0x4"/>
            <enumItem name="divide_by_64" number="0x5"/>
            <enumItem name="divide_by_128" number="0x6"/>
            <enumItem name="divide_by_256" number="0x7"/>
        </enumeration>
        <enumeration name="Config_reg0_CLK_PH_ENUM">
            <enumItem name="the_SPI_clock_is_active_outside_the_word" number="0x0"/>
            <enumItem name="the_SPI_clock_is_inactive_outside_the_word" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_CLK_POL_ENUM">
            <enumItem name="the_SPI_clock_is_quiescent_low" number="0x0"/>
            <enumItem name="the_SPI_clock_is_quiescent_high" number="0x1"/>
        </enumeration>
        <enumeration name="Config_reg0_MODE_SEL_ENUM">
            <enumItem name="the_SPI_is_in_slave_mode" number="0x0"/>
            <enumItem name="the_SPI_is_in_master_mode" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_TX_FIFO_underflow_ENUM">
            <enumItem name="no_underflow_has_been_detected" number="0x0"/>
            <enumItem name="underflow_is_detected" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_RX_FIFO_full_ENUM">
            <enumItem name="FIFO_is_not_full" number="0x0"/>
            <enumItem name="FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_RX_FIFO_not_empty_ENUM">
            <enumItem name="FIFO_has_less_than_RX_THRESHOLD_entries" number="0x0"/>
            <enumItem name="FIFO_has_more_than_or_equal_to_THRESHOLD_entries" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_TX_FIFO_full_ENUM">
            <enumItem name="FIFO_is_not_full" number="0x0"/>
            <enumItem name="FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_TX_FIFO_not_full_ENUM">
            <enumItem name="FIFO_has_more_than_or_equal_toTHRESHOLD_entries" number="0x0"/>
            <enumItem name="FIFO_has_less_than_THRESHOLD_entries" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_MODE_FAIL_ENUM">
            <enumItem name="no_mode_fault_has_been_detected" number="0x0"/>
            <enumItem name="a_mode_fault_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Intr_status_reg0_RX_OVERFLOW_ENUM">
            <enumItem name="no_overflow_occurred" number="0x0"/>
            <enumItem name="overflow_occured" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TX_FIFO_underflow_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_RX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_RX_FIFO_not_empty_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TX_FIFO_not_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_MODE_FAIL_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_RX_OVERFLOW_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="enable_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TX_FIFO_underflow_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_RX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_RX_FIFO_not_empty_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TX_FIFO_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TX_FIFO_not_full_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_MODE_FAIL_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_RX_OVERFLOW_ENUM">
            <enumItem name="no_effect" number="0x0"/>
            <enumItem name="disables_the_interrupt" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TX_FIFO_underflow_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RX_FIFO_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RX_FIFO_not_empty_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TX_FIFO_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TX_FIFO_not_full_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_MODE_FAIL_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RX_OVERFLOW_ENUM">
            <enumItem name="interrupt_is_enabled" number="0x0"/>
            <enumItem name="interrupt_is_disabled" number="0x1"/>
        </enumeration>
        <enumeration name="En_reg0_SPI_EN_ENUM">
            <enumItem name="disable_the_SPI" number="0x0"/>
            <enumItem name="enable_the_SPI" number="0x1"/>
        </enumeration>
        <enumeration name="MODE_EXTLN_ENUM">
            <enumItem name="_2" number="0x0"/>
            <enumItem name="_4" number="0x1"/>
            <enumItem name="_8" number="0x2"/>
            <enumItem name="_16" number="0x3"/>
            <enumItem name="_32" number="0x4"/>
            <enumItem name="_64" number="0x5"/>
            <enumItem name="_128" number="0x6"/>
            <enumItem name="_256" number="0x7"/>
        </enumeration>
        <enumeration name="MODE_IRQLN_ENUM">
            <enumItem name="_4" number="0x0"/>
            <enumItem name="_8" number="0x1"/>
            <enumItem name="_16" number="0x2"/>
            <enumItem name="_32" number="0x3"/>
        </enumeration>
        <enumeration name="MODE_RSTLN_ENUM">
            <enumItem name="_2" number="0x0"/>
            <enumItem name="_4" number="0x1"/>
            <enumItem name="_8" number="0x2"/>
            <enumItem name="_16" number="0x3"/>
            <enumItem name="_32" number="0x4"/>
            <enumItem name="_64" number="0x5"/>
            <enumItem name="_128_111" number="0x6"/>
        </enumeration>
        <enumeration name="CONTROL_CLKSEL_ENUM">
            <enumItem name="pclk_divided_by_8" number="0x0"/>
            <enumItem name="pclk_divided_by_64" number="0x1"/>
            <enumItem name="pclk_divided_by_256" number="0x2"/>
            <enumItem name="pclk_divided_by_4096" number="0x3"/>
        </enumeration>
        <enumeration name="SuppSize_a_ENUM">
            <enumItem name="bit_location_represents_a_single_port_size_that_is" number="0xeac"/>
        </enumeration>
        <enumeration name="Control_reg0_STPBRK_ENUM">
            <enumItem name="stop_transmission_of_the_break" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_STTBRK_ENUM">
            <enumItem name="start_to_transmit_a_break_Can_only_be_set_if" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_RSTTO_ENUM">
            <enumItem name="receiver_timeout_counter_is_restarted" number="0x1"/>
        </enumeration>
        <enumeration name="Control_reg0_RXDIS_ENUM">
            <enumItem name="receiver_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="mode_reg0_IRMODE_ENUM">
            <enumItem name="__Default_UART_mode" number="0x0"/>
            <enumItem name="__Enable_IrDA_mode" number="0x1"/>
        </enumeration>
        <enumeration name="mode_reg0_UCLKEN_ENUM">
            <enumItem name="__APB_clock_pclk" number="0x0"/>
            <enumItem name="__a_user_defined_clock" number="0x1"/>
        </enumeration>
        <enumeration name="mode_reg0_CHMODE_ENUM">
            <enumItem name="normal" number="0x0"/>
            <enumItem name="automatic_cho" number="0x1"/>
            <enumItem name="local_loopback" number="0x2"/>
            <enumItem name="remote_loopback" number="0x3"/>
        </enumeration>
        <enumeration name="mode_reg0_NBSTOP_ENUM">
            <enumItem name="_1_stop_bit" number="0x0"/>
            <enumItem name="_15_stop_bits" number="0x1"/>
            <enumItem name="_2_stop_bits" number="0x2"/>
            <enumItem name="reserved" number="0x3"/>
        </enumeration>
        <enumeration name="mode_reg0_PAR_ENUM">
            <enumItem name="even_parity" number="0x0"/>
            <enumItem name="odd_parity" number="0x1"/>
            <enumItem name="forced_to_0_parity_space" number="0x2"/>
            <enumItem name="forced_to_1_parity_mark" number="0x3"/>
        </enumeration>
        <enumeration name="mode_reg0_CHRL_ENUM">
            <enumItem name="__00___8_bits" number="0x1"/>
            <enumItem name="_7_bits" number="0x2"/>
            <enumItem name="_6_bits" number="0x3"/>
        </enumeration>
        <enumeration name="mode_reg0_CLKS_ENUM">
            <enumItem name="clock_source_is_uart_clk" number="0x0"/>
            <enumItem name="clock_source_is_uart_clk_8" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TOVR_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TNFUL_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TTRIG_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_DMSI_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TIMEOUT_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_PARE_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_FRAME_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_ROVR_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TFUL_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_TEMPTY_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_RFUL_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_REMPTY_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_en_reg0_RTRIG_ENUM">
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TOVR_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TNFUL_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TTRIG_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_DMSI_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TIMEOUT_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_PARE_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_FRAME_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_ROVR_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TFUL_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_TEMPTY_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_RFUL_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_REMPTY_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_dis_reg0_RTRIG_ENUM">
            <enumItem name="disable" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TOVR_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TNFUL_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TTRIG_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_DMSI_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TIMEOUT_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_PARE_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_FRAME_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_ROVR_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TFUL_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_TEMPTY_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RFUL_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_REMPTY_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Intrpt_mask_reg0_RTRIG_ENUM">
            <enumItem name="interrupt_is_disabled" number="0x0"/>
            <enumItem name="interrupt_is_enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TOVR_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TNFUL_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TTRIG_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_DMSI_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TIMEOUT_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_PARE_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_FRAME_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_ROVR_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TFUL_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_TEMPTY_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_RFUL_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_REMPTY_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Chnl_int_sts_reg0_RTRIG_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Baud_rate_gen_reg0_CD_ENUM">
            <enumItem name="Disables_baud_sample" number="0x0"/>
            <enumItem name="Clock_divisor_bypass" number="0x1"/>
            <enumItem name="_65535___baud_sample_value" number="0x2"/>
        </enumeration>
        <enumeration name="Rcvr_timeout_reg0_RTO_ENUM">
            <enumItem name="Disables_receiver_timeout_counter" number="0x0"/>
            <enumItem name="_255___Receiver_timeout" number="0x1"/>
        </enumeration>
        <enumeration name="Rcvr_FIFO_trigger_level0_RTRIG_ENUM">
            <enumItem name="Disables_receiver_timeout_counter" number="0x0"/>
            <enumItem name="_63___Receiver_timeout" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_ctrl_reg0_FCM_ENUM">
            <enumItem name="disable" number="0x0"/>
            <enumItem name="enable" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_ctrl_reg0_RTS_ENUM">
            <enumItem name="forced_to_logic_1" number="0x0"/>
            <enumItem name="forced_to_logic_0" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_ctrl_reg0_DTR_ENUM">
            <enumItem name="forced_to_logic_1" number="0x0"/>
            <enumItem name="forced_to_logic_0" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_FCMS_ENUM">
            <enumItem name="disabled" number="0x0"/>
            <enumItem name="enabled" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_DCD_ENUM">
            <enumItem name="ua_ndcd_input_is_high" number="0x0"/>
            <enumItem name="ua_ndcd_input_is_low" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_RI_ENUM">
            <enumItem name="ua_nri_input_is_high" number="0x0"/>
            <enumItem name="ua_nri_input_is_low" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_DSR_ENUM">
            <enumItem name="ua_ndsr_input_is_high" number="0x0"/>
            <enumItem name="ua_ndsr_input_is_low" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_CTS_ENUM">
            <enumItem name="ua_ncts_input_is_high" number="0x0"/>
            <enumItem name="ua_ncts_input_is_low" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_DDCD_ENUM">
            <enumItem name="No_change_has_occurred" number="0x0"/>
            <enumItem name="Change_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_TERI_ENUM">
            <enumItem name="No_trailing_edge_has_occurred" number="0x0"/>
            <enumItem name="Trailing_edge_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_DDSR_ENUM">
            <enumItem name="No_change_has_occurred" number="0x0"/>
            <enumItem name="Change_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Modem_sts_reg0_DCTS_ENUM">
            <enumItem name="No_change_has_occurred" number="0x0"/>
            <enumItem name="Change_has_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TNFUL_ENUM">
            <enumItem name="More_than_one_byte_is_unused_in_the_TX_FIFO" number="0x0"/>
            <enumItem name="Only_one_byte_is_free_in_the_TX_FIFO" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TTRIG_ENUM">
            <enumItem name="TX_FIFO_fill_level_is_less_than_TTRIG" number="0x0"/>
            <enumItem name="TX_FIFO_fill_level_is_greater_than_or_equal_to_TTRIG" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_FDELT_ENUM">
            <enumItem name="RX_FIFO_fill_level_is_less_than_FDEL" number="0x0"/>
            <enumItem name="RX_FIFO_fill_level_is_greater_than_or_equal_to_FDEL" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TACTIVE_ENUM">
            <enumItem name="inactive_state" number="0x0"/>
            <enumItem name="active_state" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_RACTIVE_ENUM">
            <enumItem name="inactive_state" number="0x0"/>
            <enumItem name="active_state" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_DMSI_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TIMEOUT_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_PARE_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_FRAME_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_ROVR_ENUM">
            <enumItem name="no_interrupt_occurred" number="0x0"/>
            <enumItem name="interrupt_occurred" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TFUL_ENUM">
            <enumItem name="TX_FIFO_is_not_full" number="0x0"/>
            <enumItem name="TX_FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_TEMPTY_ENUM">
            <enumItem name="TX_FIFO_is_not_empty" number="0x0"/>
            <enumItem name="TX_FIFO_is_empty" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_RFUL_ENUM">
            <enumItem name="RX_FIFO_is_not_full" number="0x0"/>
            <enumItem name="RX_FIFO_is_full" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_REMPTY_ENUM">
            <enumItem name="__RX_FIFO_is_not_empty" number="0x0"/>
            <enumItem name="__RX_FIFO_is_empty" number="0x1"/>
        </enumeration>
        <enumeration name="Channel_sts_reg0_RTRIG_ENUM">
            <enumItem name="__RX_FIFO_fill_level_is_less_than_RTRIG" number="0x0"/>
            <enumItem name="__RX_FIFO_fill_level_is_greater_than_or_equal_to_RTRIG" number="0x1"/>
        </enumeration>
        <enumeration name="Baud_rate_divider_reg0_BDIV_ENUM">
            <enumItem name="_3__ignored" number="0x0"/>
            <enumItem name="_255__Baud_rate" number="0x4"/>
        </enumeration>
        <enumeration name="Flow_delay_reg0_FDEL_ENUM">
            <enumItem name="_3___disabled" number="0x0"/>
            <enumItem name="to_65535___ua_nrts_is_driven_high_when_RX_FIFO_fill_level_equals_FDEL" number="0x4"/>
        </enumeration>
        <enumeration name="IR_min_rcv_pulse_wdth0_PMN_ENUM">
            <enumItem name="to_65535___minimum_width" number="0x0"/>
        </enumeration>
        <enumeration name="IR_transmitted_pulse_wdth0_PWID_ENUM">
            <enumItem name="_255___width" number="0x0"/>
        </enumeration>
        <enumeration name="Tx_FIFO_trigger_level0_TTRIG_ENUM">
            <enumItem name="Disables_transmitter_FIFO_trigger_level_function" number="0x0"/>
            <enumItem name="_63___Trigger_set_when_transmitter_FIFO_fills_to_TTRIG_bytes" number="0x1"/>
        </enumeration>
        <enumeration name="HWGENERAL_SM_ENUM">
            <enumItem name="No_Serial_Engine__Always_use_parallel_signalling" number="0x0"/>
        </enumeration>
        <enumeration name="HWGENERAL_PHYM_ENUM">
            <enumItem name="ULPI" number="0x2"/>
        </enumeration>
        <enumeration name="HWGENERAL_PHYW_ENUM">
            <enumItem name="_8_bit_wide_data_bus__60MHz_clock_from_the_transciever" number="0x0"/>
        </enumeration>
        <enumeration name="HWGENERAL_CLKC_ENUM">
            <enumItem name="xcvr_clk_0___pe_clk" number="0x1"/>
        </enumeration>
        <enumeration name="HWGENERAL_RT_ENUM">
            <enumItem name="Use_Asynchronous_Resets" number="0x1"/>
        </enumeration>
        <enumeration name="HWTXBUF_TXCHANADD_ENUM">
            <enumItem name="To_address_64_depth_TX_buffer_for_each_end_point" number="0x6"/>
        </enumeration>
        <enumeration name="SBUSCFG_AHBBRST_ENUM">
            <enumItem name="incremental_bursts_of_unspecified_length" number="0x0"/>
            <enumItem name="INCR4_non_multiple_transfers_of_4_are_decomposed_to_singles" number="0x1"/>
            <enumItem name="INCR8_non_multiple_transfers_of_8_are_decomposed_to_INCR4_or_singles" number="0x2"/>
            <enumItem name="INCR16_non_multiple_transfers_of_16_are_decomposed_to_INCR8_INCR4_or_singles" number="0x3"/>
            <enumItem name="Do_not_use_this_value" number="0x4"/>
            <enumItem name="INCR4_non_multiple_transfers_of_4_are_decomposed_to_INCR_of_unspecifed_length" number="0x5"/>
            <enumItem name="INCR8_non_multiple_transfers_of_8_are_decomposed_to_INCR4_or_INCR_of_unspecifed_length" number="0x6"/>
            <enumItem name="INCR16_non_multiple_transfers_of_16_are_decomposed_to_INCR8_INCR4_or_INCR_of_unspecifed_length" number="0x7"/>
        </enumeration>
        <enumeration name="HCSPARAMS_PPC_ENUM">
            <enumItem name="indicates_the_ports_do_not_have_port_power_switches" number="0x0"/>
            <enumItem name="_indicates_the_ports_have_port_power_switches" number="0x1"/>
        </enumeration>
        <enumeration name="DCCPARAMS_HC_ENUM">
            <enumItem name="The_controller_is_USB_20_host_controller_capable" number="0x1"/>
        </enumeration>
        <enumeration name="DCCPARAMS_DC_ENUM">
            <enumItem name="The_controller_is_USB_20_device_capable" number="0x1"/>
        </enumeration>
        <enumeration name="USBCMD_ITC_ENUM">
            <enumItem name="Immediate_no_threshold" number="0x0"/>
            <enumItem name="_1_micro_frame" number="0x1"/>
            <enumItem name="_2_micro_frames" number="0x2"/>
            <enumItem name="_4_micro_frames" number="0x4"/>
            <enumItem name="_8_micro_frames" number="0x8"/>
            <enumItem name="_16_micro_frames" number="0x10"/>
            <enumItem name="_32_micro_frames" number="0x20"/>
            <enumItem name="_64_micro_frames" number="0x40"/>
        </enumeration>
        <enumeration name="USBCMD_PSE_ENUM">
            <enumItem name="__Do_not_process_the_Periodic_Schedule" number="0x0"/>
            <enumItem name="__Use_the_PERIODICLISTBASE_register_to_access_the_Periodic_Schedule" number="0x1"/>
        </enumeration>
        <enumeration name="USBCMD_FS0_ENUM">
            <enumItem name="__1024_elements_4096_bytes" number="0x0"/>
            <enumItem name="__512_elements_2048_bytes" number="0x1"/>
            <enumItem name="__256_elements_1024_bytes" number="0x2"/>
            <enumItem name="__128_elements_512_bytes" number="0x3"/>
            <enumItem name="__64_elements_256_bytes" number="0x4"/>
            <enumItem name="__32_elements_128_bytes" number="0x5"/>
            <enumItem name="_16_elements_64_bytes" number="0x6"/>
            <enumItem name="__8_elements_32_bytes" number="0x7"/>
        </enumeration>
        <enumeration name="FRINDEX_FRINDEX_ENUM">
            <enumItem name="_1024" number="0x0"/>
            <enumItem name="_512" number="0x1"/>
            <enumItem name="_256__10" number="0x2"/>
            <enumItem name="_128" number="0x3"/>
            <enumItem name="_64" number="0x4"/>
            <enumItem name="_32" number="0x5"/>
            <enumItem name="_16" number="0x6"/>
            <enumItem name="_8" number="0x7"/>
        </enumeration>
        <enumeration name="IC_USB_IC_VDD1_ENUM">
            <enumItem name="No_voltage" number="0x0"/>
            <enumItem name="_10V" number="0x1"/>
            <enumItem name="_12V" number="0x2"/>
            <enumItem name="_15V" number="0x3"/>
            <enumItem name="_18V" number="0x4"/>
            <enumItem name="_30V" number="0x5"/>
            <enumItem name="Reserved" number="0x6"/>
            <enumItem name="Reserved_7" number="0x7"/>
        </enumeration>
        <enumeration name="ENDPTNAK_EPTN_ENUM">
            <enumItem name="TX_endpoint_has_1_bit_in_this_field_The_bit_is_set_when_the_Controller_sends_a_NAK_handshake_on_a_received_IN_token_for_the_corresponding_endpoint" number="0xeac"/>
        </enumeration>
        <enumeration name="ENDPTNAK_EPRN_ENUM">
            <enumItem name="RX_endpoint_has_1_bit_in_this_field_The_bit_is_set_when_the_Controller_sends_a_NAK_handshake_on_a_received_OUT_or_PING_token_for_the_corresponding_endpoint" number="0xeac"/>
        </enumeration>
        <enumeration name="ENDPTNAKEN_EPTNE_ENUM">
            <enumItem name="bit_is_an_enable_bit_for_the_corresponding_TX_Endpoint_NAK_bit_If_this_bit_is_set_and_the_corresponding_TX_Endpoint_NAK_bit_is_set_the_NAK_Interrupt_bit_is_set" number="0xeac"/>
        </enumeration>
        <enumeration name="ENDPTNAKEN_EPRNE_ENUM">
            <enumItem name="bit_is_an_enable_bit_for_the_corresponding_RX_Endpoint_NAK_bit_If_this_bit_is_set_and_the_corresponding_RX_Endpoint_NAK_bit_is_set_the_NAK_Interrupt_bit_is_set" number="0xeac"/>
        </enumeration>
        <enumeration name="PORTSC1_PTC_ENUM">
            <enumItem name="__TEST_MODE_DISABLE" number="0x0"/>
            <enumItem name="__J__STATE" number="0x1"/>
            <enumItem name="__K_STATE" number="0x2"/>
            <enumItem name="__SE0_host___NAK_device" number="0x3"/>
            <enumItem name="__Packet" number="0x4"/>
            <enumItem name="__FORCE_ENABLE_HS" number="0x5"/>
            <enumItem name="__FORCE_ENABLE_FS" number="0x6"/>
            <enumItem name="__FORCE_ENABLE_LS" number="0x7"/>
            <enumItem name="__Reserved" number="0x8"/>
        </enumeration>
        <enumeration name="PORTSC1_PIC_ENUM">
            <enumItem name="__Port_indicators_are_off" number="0x0"/>
            <enumItem name="__Amber" number="0x1"/>
            <enumItem name="__Green" number="0x2"/>
            <enumItem name="__Undefined" number="0x3"/>
        </enumeration>
        <enumeration name="PORTSC1_PP_ENUM">
            <enumItem name="__0b" number="0x0"/>
            <enumItem name="__1b_0b" number="0x1"/>
        </enumeration>
        <enumeration name="PORTSC1_LS_ENUM">
            <enumItem name="__SE0" number="0x0"/>
            <enumItem name="__K_state" number="0x1"/>
            <enumItem name="__J_state" number="0x2"/>
            <enumItem name="__Undefined" number="0x3"/>
        </enumeration>
        <enumeration name="PORTSC1_SUSP_ENUM">
            <enumItem name="Enable" number="0x2"/>
            <enumItem name="Suspend" number="0x3"/>
        </enumeration>
        <enumeration name="PORTSC1_FPR_ENUM">
            <enumItem name="Resume_detected_driven_on_port" number="0x1"/>
        </enumeration>
        <enumeration name="PORTSC1_PE_ENUM">
            <enumItem name="__Enable" number="0x1"/>
        </enumeration>
        <enumeration name="OTGSC_n1msE_ENUM">
            <enumItem name="millisecond_timer_Interrupt_Enable" number="0x1"/>
        </enumeration>
        <enumeration name="OTGSC_n1msS_ENUM">
            <enumItem name="millisecond_timer_Interrupt_Status" number="0x1"/>
        </enumeration>
        <enumeration name="OTGSC_n1msT_ENUM">
            <enumItem name="millisecond_timer_toggle" number="0x1"/>
        </enumeration>
        <enumeration name="ENDPTCOMPLETE_ETCE_ENUM">
            <enumItem name="bit_indicates_a_transmit_event_IN_INTERRUPT_occurred_and_software_should_read_the_corresponding_endpoint_queue_to_determine_the_endpoint_status_If_the" number="0xeac"/>
        </enumeration>
        <enumeration name="ENDPTCOMPLETE_ERCE_ENUM">
            <enumItem name="bit_indicates_a_received_event_OUT_occurred_and_software_should_read_the_corresponding_endpoint_queue_to_determine_the_transfer_status_If_the_corresponding_IOC_bit_is_set_in_the_Transfer_Descriptor_then_this_bit_will_be_set_simultaneously_with_the_USBINT_Writing_a_1_will_clear_the_corresponding_bit_in_this_register" number="0xeac"/>
        </enumeration>
        <enumeration name="ENDPTCTRL1_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL1_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL2_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL2_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL3_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL3_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL4_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL4_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL5_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL5_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL6_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL6_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL7_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL7_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL8_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL8_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL9_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL9_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL10_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL10_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL11_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL11_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL12_TXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
        <enumeration name="ENDPTCTRL12_RXD_ENUM">
            <enumItem name="Dual_Port_Memory_Buffer_DMA_Engine" number="0x0"/>
        </enumeration>
    </board>
</boards>
