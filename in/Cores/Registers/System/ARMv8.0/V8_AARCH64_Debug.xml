<?xml version="1.0" encoding="UTF-8"?>
<register_list name="System" xmlns="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd">
  <!--PLEASE DO NOT EDIT THIS FILE - Generated from SysReg_xml-00bet19-->
  <register_group name="Debug">
    <gui_name language="en">Debug</gui_name>
    <description language="en">Debug</description>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgauthstatus_el1.html" name="DBGAUTHSTATUS_EL1" size="4">
      <gui_name language="en">Debug Authentication Status register</gui_name>
      <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug.</description>
      <bitField enumerationId="DBGAUTHSTATUS_EL1_SNID" name="SNID">
        <gui_name language="en">SNID</gui_name>
        <description language="en">Secure non-invasive debug.</description>
        <definition>[7:6]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_EL1_SID" name="SID">
        <gui_name language="en">SID</gui_name>
        <description language="en">Secure invasive debug.</description>
        <definition>[5:4]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_EL1_NSNID" name="NSNID">
        <gui_name language="en">NSNID</gui_name>
        <description language="en">Non-secure non-invasive debug.</description>
        <definition>[3:2]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_EL1_NSID" name="NSID">
        <gui_name language="en">NSID</gui_name>
        <description language="en">Non-secure invasive debug.</description>
        <definition>[1:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR0_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR1_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR2_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR3_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR4_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR5_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR6_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR7_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR8_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR9_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR10_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR11_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR12_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR13_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR14_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbcrn_el1.html" name="DBGBCR15_EL1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGBCR_n_EL1_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state. In an AArch64-only implementation, this field is reserved, RES1.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;_EL1.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;_EL1.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR0_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR1_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR2_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR3_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR4_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR5_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR6_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR7_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR8_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR9_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR10_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR11_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR12_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR13_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR14_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgbvrn_el1.html" name="DBGBVR15_EL1" size="8">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register DBGBCR&lt;n&gt;_EL1.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgclaimclr_el1.html" name="DBGCLAIMCLR_EL1" size="4">
      <gui_name language="en">Debug Claim Tag Clear register</gui_name>
      <description language="en">Used by software to read the values of the CLAIM tag bits, and to clear these bits to 0...</description>
      <bitField name="CLAIM">
        <gui_name language="en">CLAIM</gui_name>
        <description language="en">Read or clear CLAIM tag bits. Reading this field returns the current value of the CLAIM tag bits.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgclaimset_el1.html" name="DBGCLAIMSET_EL1" size="4">
      <gui_name language="en">Debug Claim Tag Set register</gui_name>
      <description language="en">Used by software to set the CLAIM tag bits to 1...</description>
      <bitField name="CLAIM">
        <gui_name language="en">CLAIM</gui_name>
        <description language="en">Set CLAIM tag bits. RAO.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgprcr_el1.html" name="DBGPRCR_EL1" size="4">
      <gui_name language="en">Debug Power Control Register</gui_name>
      <description language="en">Controls behavior of the PE on powerdown request.</description>
      <bitField enumerationId="DBGPRCR_EL1_CORENPDRQ" name="CORENPDRQ">
        <gui_name language="en">CORENPDRQ</gui_name>
        <description language="en">Core no powerdown request. Requests emulation of powerdown.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgvcr32_el2.html" name="DBGVCR32_EL2" size="4">
      <gui_name language="en">Debug Vector Catch Register</gui_name>
      <description language="en">Allows access to the AArch32 register DBGVCR from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR0_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR1_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR2_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR3_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR4_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR5_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR6_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR7_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR8_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR9_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR10_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR11_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR12_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR13_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR14_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwcrn_el1.html" name="DBGWCR15_EL1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;_EL1.</description>
      <bitField enumerationId="DBGWCR_n_EL1_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt;_EL1 is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_EL1_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR0_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR1_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR2_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR3_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR4_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR5_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR6_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR7_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR8_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR9_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR10_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR11_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR12_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR13_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR14_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-dbgwvrn_el1.html" name="DBGWVR15_EL1" size="8">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;_EL1.</description>
      <bitField name="RESS">
        <gui_name language="en">RESS</gui_name>
        <description language="en">Reserved, Sign extended. Hardware and software must treat this field as RES0 if the most significant bit of VA is 0 or RES0, and as RES1 if the most significant bit of VA is 1.</description>
        <definition>[63:49]</definition>
      </bitField>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[48:2] of the address value for comparison.</description>
        <definition>[48:2]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdccint_el1.html" name="MDCCINT_EL1" size="4">
      <gui_name language="en">Monitor DCC Interrupt Enable Register</gui_name>
      <description language="en">Enables interrupt requests to be signaled based on the DCC status flags.</description>
      <bitField enumerationId="MDCCINT_EL1_RX" name="RX">
        <gui_name language="en">RX</gui_name>
        <description language="en">DCC interrupt request enable control for DTRRX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField enumerationId="MDCCINT_EL1_TX" name="TX">
        <gui_name language="en">TX</gui_name>
        <description language="en">DCC interrupt request enable control for DTRTX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
        <definition>[29]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdccsr_el0.html" name="MDCCSR_EL0" size="4">
      <gui_name language="en">Monitor DCC Status Register</gui_name>
      <description language="en">Main control register for the debug implementation, containing flow-control flags for the DCC. This is an internal, read-only view.</description>
      <bitField name="RXfull">
        <gui_name language="en">RXfull</gui_name>
        <description language="en">DTRRX full. Read-only view of the equivalent bit in the EDSCR.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="TXfull">
        <gui_name language="en">TXfull</gui_name>
        <description language="en">DTRTX full. Read-only view of the equivalent bit in the EDSCR.</description>
        <definition>[29]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el2.html" name="MDCR_EL2" size="4">
      <gui_name language="en">Monitor Debug Configuration Register (EL2)</gui_name>
      <description language="en">Provides EL2 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
      <bitField enumerationId="MDCR_EL2_TDRA" name="TDRA">
        <gui_name language="en">TDRA</gui_name>
        <description language="en">Trap Debug ROM Address register access. Traps Non-secure System register accesses to the Debug ROM registers to EL2.</description>
        <definition>[11]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_TDOSA" name="TDOSA">
        <gui_name language="en">TDOSA</gui_name>
        <description language="en">Trap debug OS-related register access.</description>
        <definition>[10]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_TDA" name="TDA">
        <gui_name language="en">TDA</gui_name>
        <description language="en">Trap Debug Access.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_TDE" name="TDE">
        <gui_name language="en">TDE</gui_name>
        <description language="en">Trap Debug exceptions.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_HPME" name="HPME">
        <gui_name language="en">HPME</gui_name>
        <description language="en">Hypervisor Performance Monitors Enable.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_TPM" name="TPM">
        <gui_name language="en">TPM</gui_name>
        <description language="en">Trap Performance Monitors accesses.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL2_TPMCR" name="TPMCR">
        <gui_name language="en">TPMCR</gui_name>
        <description language="en">Trap PMCR_EL0 or PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR_EL0 or PMCR to EL2.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField name="HPMN">
        <gui_name language="en">HPMN</gui_name>
        <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL0 and EL1 modes.</description>
        <definition>[4:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdcr_el3.html" name="MDCR_EL3" size="4">
      <gui_name language="en">Monitor Debug Configuration Register (EL3)</gui_name>
      <description language="en">Provides EL3 configuration options for self-hosted debug and the Performance Monitors Extension.</description>
      <bitField enumerationId="MDCR_EL3_EPMAD" name="EPMAD">
        <gui_name language="en">EPMAD</gui_name>
        <description language="en">External debug interface Performance Monitors registers disable.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_EDAD" name="EDAD">
        <gui_name language="en">EDAD</gui_name>
        <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_SPME" name="SPME">
        <gui_name language="en">SPME</gui_name>
        <description language="en">Secure Performance Monitors enable.</description>
        <definition>[17]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_SDD" name="SDD">
        <gui_name language="en">SDD</gui_name>
        <description language="en">AArch64 Secure self-hosted invasive debug disable. Disables Software debug exceptions in Secure state, other than Breakpoint Instruction exceptions.</description>
        <definition>[16]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_SPD32" name="SPD32">
        <gui_name language="en">SPD32</gui_name>
        <description language="en">AArch32 Secure self-hosted privileged invasive debug control. Enables or disables debug exceptions from Secure EL1 using AArch32, other than Breakpoint Instruction exceptions.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_TDOSA" name="TDOSA">
        <gui_name language="en">TDOSA</gui_name>
        <description language="en">Trap debug OS-related register access.</description>
        <definition>[10]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_TDA" name="TDA">
        <gui_name language="en">TDA</gui_name>
        <description language="en">Trap Debug Access. Traps EL2, EL1, and EL0 System register accesses to those debug System registers that cannot be trapped using the MDCR_EL3.TDOSA field. When MDCR_EL3.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="MDCR_EL3_TPM" name="TPM">
        <gui_name language="en">TPM</gui_name>
        <description language="en">Trap Performance Monitors accesses. Traps EL2, EL1, and EL0 accesses to all Performance Monitors registers to EL3, from both Security states and both Execution states.</description>
        <definition>[6]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdrar_el1.html" name="MDRAR_EL1" size="8">
      <gui_name language="en">Monitor Debug ROM Address Register</gui_name>
      <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
      <bitField name="ROMADDR_47_12">
        <gui_name language="en">ROMADDR_47_12</gui_name>
        <description language="en">Bits[47:12] of the ROM table physical address.</description>
        <definition>[47:12]</definition>
      </bitField>
      <bitField enumerationId="MDRAR_EL1_Valid" name="Valid">
        <gui_name language="en">Valid</gui_name>
        <description language="en">This field indicates whether the ROM Table address is valid.</description>
        <definition>[1:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-mdscr_el1.html" name="MDSCR_EL1" size="4">
      <gui_name language="en">Monitor Debug System Control Register</gui_name>
      <description language="en">Main control register for the debug implementation.</description>
      <bitField name="RXfull">
        <gui_name language="en">RXfull</gui_name>
        <description language="en">Used for save/restore of EDSCR.RXfull.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="TXfull">
        <gui_name language="en">TXfull</gui_name>
        <description language="en">Used for save/restore of EDSCR.TXfull.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="RXO">
        <gui_name language="en">RXO</gui_name>
        <description language="en">Used for save/restore of EDSCR.RXO.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="TXU">
        <gui_name language="en">TXU</gui_name>
        <description language="en">Used for save/restore of EDSCR.TXU.</description>
        <definition>[26]</definition>
      </bitField>
      <bitField name="INTdis">
        <gui_name language="en">INTdis</gui_name>
        <description language="en">Used for save/restore of EDSCR.INTdis.</description>
        <definition>[23:22]</definition>
      </bitField>
      <bitField name="TDA">
        <gui_name language="en">TDA</gui_name>
        <description language="en">Used for save/restore of EDSCR.TDA.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField enumerationId="MDSCR_EL1_MDE" name="MDE">
        <gui_name language="en">MDE</gui_name>
        <description language="en">Monitor debug events. Enable Breakpoint, Watchpoint, and Vector Catch exceptions.</description>
        <definition>[15]</definition>
      </bitField>
      <bitField name="HDE">
        <gui_name language="en">HDE</gui_name>
        <description language="en">Used for save/restore of EDSCR.HDE.</description>
        <definition>[14]</definition>
      </bitField>
      <bitField enumerationId="MDSCR_EL1_KDE" name="KDE">
        <gui_name language="en">KDE</gui_name>
        <description language="en">Local (kernel) debug enable. If ELD is using AArch64, enable debug exceptions within ELD.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField enumerationId="MDSCR_EL1_TDCC" name="TDCC">
        <gui_name language="en">TDCC</gui_name>
        <description language="en">Traps EL0 accesses to the DCC registers to EL1, from both Execution states:</description>
        <definition>[12]</definition>
      </bitField>
      <bitField name="ERR">
        <gui_name language="en">ERR</gui_name>
        <description language="en">Used for save/restore of EDSCR.ERR.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="MDSCR_EL1_SS" name="SS">
        <gui_name language="en">SS</gui_name>
        <description language="en">Software step control bit. If ELD is using AArch64, enable Software step.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdlr_el1.html" name="OSDLR_EL1" size="4">
      <gui_name language="en">OS Double Lock Register</gui_name>
      <description language="en">Used to control the OS Double Lock.</description>
      <bitField enumerationId="OSDLR_EL1_DLK" name="DLK">
        <gui_name language="en">DLK</gui_name>
        <description language="en">OS Double Lock control bit.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdtrrx_el1.html" name="OSDTRRX_EL1" size="4">
      <gui_name language="en">OS Lock Data Transfer Register, Receive</gui_name>
      <description language="en">Used for save/restore of DBGDTRRX_EL0. It is a component of the Debug Communications Channel.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-osdtrtx_el1.html" name="OSDTRTX_EL1" size="4">
      <gui_name language="en">OS Lock Data Transfer Register, Transmit</gui_name>
      <description language="en">Used for save/restore of DBGDTRTX_EL0. It is a component of the Debug Communications Channel.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oseccr_el1.html" name="OSECCR_EL1" size="4">
      <gui_name language="en">OS Lock Exception Catch Control Register</gui_name>
      <description language="en">Provides a mechanism for an operating system to access the contents of EDECCR that are otherwise invisible to software, so it can save/restore the contents of EDECCR over powerdown on behalf of the external debugger.</description>
      <bitField name="EDECCR">
        <gui_name language="en">EDECCR</gui_name>
        <description language="en">Used for save/restore to EDECCR over powerdown.</description>
        <definition>[31:0]</definition>
      </bitField>
    </register>
    <register access="WO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oslar_el1.html" name="OSLAR_EL1" size="4">
      <gui_name language="en">OS Lock Access Register</gui_name>
      <description language="en">Used to lock or unlock the OS lock.</description>
      <bitField name="OSLK">
        <gui_name language="en">OSLK</gui_name>
        <description language="en">On writes to OSLAR_EL1, bit[0] is copied to the OS lock.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-oslsr_el1.html" name="OSLSR_EL1" size="4">
      <gui_name language="en">OS Lock Status Register</gui_name>
      <description language="en">Provides the status of the OS lock.</description>
      <bitField name="OSLM_1">
        <gui_name language="en">OSLM_1</gui_name>
        <description language="en">See below for description of the OSLM field.</description>
        <definition>[3]</definition>
      </bitField>
      <bitField name="nTT">
        <gui_name language="en">nTT</gui_name>
        <description language="en">Not 32-bit access. This bit is always RAZ. It indicates that a 32-bit access is needed to write the key to the OS Lock Access Register.</description>
        <definition>[2]</definition>
      </bitField>
      <bitField enumerationId="OSLSR_EL1_OSLK" name="OSLK">
        <gui_name language="en">OSLK</gui_name>
        <description language="en">OS Lock Status.</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="OSLSR_EL1_OSLM_0" name="OSLM_0">
        <gui_name language="en">OSLM_0</gui_name>
        <description language="en">OS lock model implemented. Identifies the form of OS save and restore mechanism implemented.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sder32_el3.html" name="SDER32_EL3" size="4">
      <gui_name language="en">AArch32 Secure Debug Enable Register</gui_name>
      <description language="en">Allows access to the AArch32 register SDER from AArch64 state only. Its value has no effect on execution in AArch64 state.</description>
      <bitField enumerationId="SDER32_EL3_SUNIDEN" name="SUNIDEN">
        <gui_name language="en">SUNIDEN</gui_name>
        <description language="en">Secure User Non-Invasive Debug Enable:</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="SDER32_EL3_SUIDEN" name="SUIDEN">
        <gui_name language="en">SUIDEN</gui_name>
        <description language="en">Secure User Invasive Debug Enable:</description>
        <definition>[0]</definition>
      </bitField>
    </register>
  </register_group>
  <tcf:enumeration name="DBGAUTHSTATUS_EL1_SNID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Non-secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalSecureNoninvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalSecureNoninvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_EL1_SID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Non-secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalSecureInvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalSecureInvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_EL1_NSNID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalNoninvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalNoninvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_EL1_NSID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalInvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalInvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGBCR_n_EL1_BT">
    <tcf:enumItem description="Unlinked instruction address match." name="Unlinked_instruction_address_match" number="0"/>
    <tcf:enumItem description="Linked instruction address match." name="Linked_instruction_address_match" number="1"/>
    <tcf:enumItem description="Unlinked context ID match." name="Unlinked_context_ID_match" number="2"/>
    <tcf:enumItem description="Linked context ID match" name="Linked_context_ID_match" number="3"/>
    <tcf:enumItem description="Unlinked VMID match." name="Unlinked_VMID_match" number="8"/>
    <tcf:enumItem description="Linked VMID match." name="Linked_VMID_match" number="9"/>
    <tcf:enumItem description="Unlinked VMID and context ID match." name="Unlinked_VMID_and_context_ID_match" number="10"/>
    <tcf:enumItem description="Linked VMID and context ID match." name="Linked_VMID_and_context_ID_match" number="11"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGBCR_n_EL1_E">
    <tcf:enumItem description="Breakpoint disabled." name="Breakpoint_disabled" number="0"/>
    <tcf:enumItem description="Breakpoint enabled." name="Breakpoint_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGPRCR_EL1_CORENPDRQ">
    <tcf:enumItem description="If the system responds to a powerdown request, it powers down Core power domain." name="If_the_system_responds_to_a_powerdown_request_it_powers_down_Core_power_domain" number="0"/>
    <tcf:enumItem description="If the system responds to a powerdown request, it does not powerdown the Core power domain, but instead emulates a powerdown of that domain." name="If_the_system_responds_to_a_powerdown_request_it_does_not_powerdown_the_Core_power_domain_but_instead_emulates_a_powerdown_of_that_domain" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_EL1_MASK">
    <tcf:enumItem description="No mask." name="No_mask" number="0"/>
    <tcf:enumItem description="Reserved." name="_0" number="1"/>
    <tcf:enumItem description="Reserved." name="_1" number="2"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_EL1_WT">
    <tcf:enumItem description="Unlinked data address match." name="Unlinked_data_address_match" number="0"/>
    <tcf:enumItem description="Linked data address match." name="Linked_data_address_match" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_EL1_LSC">
    <tcf:enumItem description="Match instructions that load from a watchpointed address." name="Match_instructions_that_load_from_a_watchpointed_address" number="1"/>
    <tcf:enumItem description="Match instructions that store to a watchpointed address." name="Match_instructions_that_store_to_a_watchpointed_address" number="2"/>
    <tcf:enumItem description="Match instructions that load from or store to a watchpointed address." name="Match_instructions_that_load_from_or_store_to_a_watchpointed_address" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_EL1_E">
    <tcf:enumItem description="Watchpoint disabled." name="Watchpoint_disabled" number="0"/>
    <tcf:enumItem description="Watchpoint enabled." name="Watchpoint_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCCINT_EL1_RX">
    <tcf:enumItem description="No interrupt request generated by DTRRX." name="No_interrupt_request_generated_by_DTRRX" number="0"/>
    <tcf:enumItem description="Interrupt request will be generated on RXfull == 1." name="Interrupt_request_will_be_generated_on_RXfull_1" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCCINT_EL1_TX">
    <tcf:enumItem description="No interrupt request generated by DTRTX." name="No_interrupt_request_generated_by_DTRTX" number="0"/>
    <tcf:enumItem description="Interrupt request will be generated on TXfull == 0." name="Interrupt_request_will_be_generated_on_TXfull_0" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TDRA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 System register accesses to the Debug ROM registers are trapped to EL2, unless it is trapped by DBGDSCRext.UDCCdis or MDSCR_EL1.TDCC." name="Non_secure_EL0_and_EL1_System_register_accesses_to_the_Debug_ROM_registers_are_trapped_to_EL2_unless_it_is_trapped_by_DBGDSCRext" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TDOSA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL1 System register accesses to the powerdown debug registers are trapped to EL2." name="Non_secure_EL1_System_register_accesses_to_the_powerdown_debug_registers_are_trapped_to_EL2" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TDA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 or EL1 System register accesses to the debug registers, other than the registers trapped by MDCR_EL2.TDRA and MDCR_EL2.TDOSA, are trapped to EL2, from both Execution states, unless it is trapped by DBGDSCRext.UDCCdis or MDSCR_EL1.TDCC." name="Non_secure_EL0_or_EL1_System_register_accesses_to_the_debug_registers_other_than_the_registers_trapped_by_MDCR_EL2" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TDE">
    <tcf:enumItem description="This control has no effect on the routing of debug exceptions, and has no effect on Non-secure accesses to debug registers." name="This_control_has_no_effect_on_the_routing_of_debug_exceptions_and_has_no_effect_on_Non_secure_accesses_to_debug_registers" number="0"/>
    <tcf:enumItem description="In Non-secure state..." name="In_Non_secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_HPME">
    <tcf:enumItem description="EL2 Performance Monitors disabled." name="EL2_Performance_Monitors_disabled" number="0"/>
    <tcf:enumItem description="EL2 Performance Monitors enabled." name="EL2_Performance_Monitors_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TPM">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 accesses to all Performance Monitors registers are trapped to EL2." name="Non_secure_EL0_and_EL1_accesses_to_all_Performance_Monitors_registers_are_trapped_to_EL2" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL2_TPMCR">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 accesses to the PMCR_EL0 or PMCR are trapped to EL2, unless it is trapped by PMUSERENR.EN or PMUSERENR_EL0.EN." name="Non_secure_EL0_and_EL1_accesses_to_the_PMCR_EL0_or_PMCR_are_trapped_to_EL2_unless_it_is_trapped_by_PMUSERENR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_EPMAD">
    <tcf:enumItem description="Access to Performance Monitors registers from external debugger is permitted." name="Access_to_Performance_Monitors_registers_from_external_debugger_is_permitted" number="0"/>
    <tcf:enumItem description="Access to Performance Monitors registers from external debugger is disabled, unless overridden by the IMPLEMENTATION DEFINED authentication interface." name="Access_to_Performance_Monitors_registers_from_external_debugger_is_disabled_unless_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_EDAD">
    <tcf:enumItem description="Access to breakpoint and watchpoint registers from external debugger is permitted." name="Access_to_breakpoint_and_watchpoint_registers_from_external_debugger_is_permitted" number="0"/>
    <tcf:enumItem description="Access to breakpoint and watchpoint registers from external debugger is disabled, unless overridden by the IMPLEMENTATION DEFINED authentication interface." name="Access_to_breakpoint_and_watchpoint_registers_from_external_debugger_is_disabled_unless_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_SPME">
    <tcf:enumItem description="Event counting prohibited in Secure state, unless ExternalSecureNoninvasiveDebugEnabled() is TRUE, meaning this control is overridden by the IMPLEMENTATION DEFINED authentication interface." name="Event_counting_prohibited_in_Secure_state_unless_ExternalSecureNoninvasiveDebugEnabled_is_TRUE_meaning_this_control_is_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="0"/>
    <tcf:enumItem description="Event counting allowed in Secure state." name="Event_counting_allowed_in_Secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_SDD">
    <tcf:enumItem description="Debug exceptions from Secure EL0 are enabled, and debug exceptions from Secure EL1 are enabled if the value of MDSCR_EL1.KDE is 1 and the value of PSTATE.D is 0." name="Debug_exceptions_from_Secure_EL0_are_enabled_and_debug_exceptions_from_Secure_EL1_are_enabled_if_the_value_of_MDSCR_EL1" number="0"/>
    <tcf:enumItem description="Debug exceptions, other than Breakpoint Instruction exceptions, are disabled from all Exception levels in Secure state." name="Debug_exceptions_other_than_Breakpoint_Instruction_exceptions_are_disabled_from_all_Exception_levels_in_Secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_SPD32">
    <tcf:enumItem description="Legacy mode. Debug exceptions from Secure EL1 are enabled by the IMPLEMENTATION DEFINED authentication interface." name="Legacy_mode" number="0"/>
    <tcf:enumItem description="Secure privileged debug disabled. Debug exceptions from Secure EL1 are disabled." name="Secure_privileged_debug_disabled" number="2"/>
    <tcf:enumItem description="Secure privileged debug enabled. Debug exceptions from Secure EL1 are enabled." name="Secure_privileged_debug_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_TDOSA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="EL2 and EL1 System register accesses to the powerdown debug registers are trapped to EL3, unless it is trapped by HDCR.TDOSA or MDCR_EL2.TDOSA." name="EL2_and_EL1_System_register_accesses_to_the_powerdown_debug_registers_are_trapped_to_EL3_unless_it_is_trapped_by_HDCR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_TDA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="EL0, EL1, and EL2 accesses to the debug registers, other than the registers that can be trapped by MDCR_EL3.TDOSA, are trapped to EL3, from both Security states and both Execution states, unless it is trapped by DBGDSCRext.UDCCdis, MDSCR_EL1.TDCC, HDCR.TDA or MDCR_EL2.TDA." name="EL0_EL1_and_EL2_accesses_to_the_debug_registers_other_than_the_registers_that_can_be_trapped_by_MDCR_EL3" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDCR_EL3_TPM">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="EL2, EL1, and EL0 System register accesses to all Performance Monitors registers are trapped to EL3, unless it is trapped by HDCR.TPM or MDCR_EL2.TPM." name="EL2_EL1_and_EL0_System_register_accesses_to_all_Performance_Monitors_registers_are_trapped_to_EL3_unless_it_is_trapped_by_HDCR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDRAR_EL1_Valid">
    <tcf:enumItem description="ROM Table address is not valid. Software must ignore ROMADDR." name="ROM_Table_address_is_not_valid" number="0"/>
    <tcf:enumItem description="ROM Table address is valid." name="ROM_Table_address_is_valid" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDSCR_EL1_MDE">
    <tcf:enumItem description="Breakpoint, Watchpoint, and Vector Catch exceptions disabled." name="Breakpoint_Watchpoint_and_Vector_Catch_exceptions_disabled" number="0"/>
    <tcf:enumItem description="Breakpoint, Watchpoint, and Vector Catch exceptions enabled." name="Breakpoint_Watchpoint_and_Vector_Catch_exceptions_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDSCR_EL1_KDE">
    <tcf:enumItem description="Debug exceptions, other than Breakpoint Instruction exceptions, disabled within ELD." name="Debug_exceptions_other_than_Breakpoint_Instruction_exceptions_disabled_within_ELD" number="0"/>
    <tcf:enumItem description="All debug exceptions enabled within ELD." name="All_debug_exceptions_enabled_within_ELD" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDSCR_EL1_TDCC">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="EL0 using AArch64: EL0 accesses to the MDCCSR_EL0, DBGDTR_EL0, DBGDTRTX_EL0, and DBGDTRRX_EL0 registers are trapped to EL1..." name="EL0_using_AArch64_EL0_accesses_to_the_MDCCSR_EL0_DBGDTR_EL0_DBGDTRTX_EL0_and_DBGDTRRX_EL0_registers_are_trapped_to_EL1" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MDSCR_EL1_SS">
    <tcf:enumItem description="Software step disabled" name="Software_step_disabled" number="0"/>
    <tcf:enumItem description="Software step enabled." name="Software_step_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="OSDLR_EL1_DLK">
    <tcf:enumItem description="OS Double Lock unlocked." name="OS_Double_Lock_unlocked" number="0"/>
    <tcf:enumItem description="OS Double Lock locked, if DBGPRCR_EL1.CORENPDRQ (Core no powerdown request) bit is set to 0 and the PE is in Non-debug state." name="OS_Double_Lock_locked_if_DBGPRCR_EL1" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="OSLSR_EL1_OSLK">
    <tcf:enumItem description="OS lock unlocked." name="OS_lock_unlocked" number="0"/>
    <tcf:enumItem description="OS lock locked." name="OS_lock_locked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="OSLSR_EL1_OSLM_0">
    <tcf:enumItem description="OS lock implemented. DBGOSSRR not implemented." name="OS_lock_implemented" number="2"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDER32_EL3_SUNIDEN">
    <tcf:enumItem description="Performance Monitors event counting prohibited in Secure EL0 unless allowed by MDCR_EL3.SPME or the IMPLEMENTATION DEFINED authentication interface ExternalSecureNoninvasiveDebugEnabled()." name="Performance_Monitors_event_counting_prohibited_in_Secure_EL0_unless_allowed_by_MDCR_EL3" number="0"/>
    <tcf:enumItem description="Performance Monitors event counting allowed in Secure EL0." name="Performance_Monitors_event_counting_allowed_in_Secure_EL0" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDER32_EL3_SUIDEN">
    <tcf:enumItem description="Debug exceptions other than Breakpoint Instruction exceptions from Secure EL0 are disabled, unless enabled by MDCR_EL3.SPD32." name="Debug_exceptions_other_than_Breakpoint_Instruction_exceptions_from_Secure_EL0_are_disabled_unless_enabled_by_MDCR_EL3" number="0"/>
    <tcf:enumItem description="Debug exceptions from Secure EL0 are enabled." name="Debug_exceptions_from_Secure_EL0_are_enabled" number="1"/>
  </tcf:enumeration>
</register_list>
