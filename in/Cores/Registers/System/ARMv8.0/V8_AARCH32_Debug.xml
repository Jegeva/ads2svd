<?xml version="1.0" encoding="UTF-8"?>
<register_list name="System" xmlns="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd">
  <!--PLEASE DO NOT EDIT THIS FILE - Generated from SysReg_xml-00bet19-->
  <register_group name="Debug">
    <gui_name language="en">Debug</gui_name>
    <description language="en">Debug</description>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgauthstatus.html" name="DBGAUTHSTATUS" size="4">
      <gui_name language="en">Debug Authentication Status register</gui_name>
      <description language="en">Provides information about the state of the IMPLEMENTATION DEFINED authentication interface for debug.</description>
      <bitField enumerationId="DBGAUTHSTATUS_SNID" name="SNID">
        <gui_name language="en">SNID</gui_name>
        <description language="en">Secure non-invasive debug.</description>
        <definition>[7:6]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_SID" name="SID">
        <gui_name language="en">SID</gui_name>
        <description language="en">Secure invasive debug.</description>
        <definition>[5:4]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_NSNID" name="NSNID">
        <gui_name language="en">NSNID</gui_name>
        <description language="en">Non-secure non-invasive debug.</description>
        <definition>[3:2]</definition>
      </bitField>
      <bitField enumerationId="DBGAUTHSTATUS_NSID" name="NSID">
        <gui_name language="en">NSID</gui_name>
        <description language="en">Non-secure invasive debug.</description>
        <definition>[1:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR0" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR1" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR2" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR3" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR4" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR5" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR6" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR7" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR8" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR9" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR10" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR11" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR12" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR13" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR14" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbcrn.html" name="DBGBCR15" size="4">
      <gui_name language="en">Debug Breakpoint Control Registers</gui_name>
      <description language="en">Holds control information for a breakpoint. Forms breakpoint n together with value register DBGBVR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
      <bitField enumerationId="DBGBCR_n_BT" name="BT">
        <gui_name language="en">BT</gui_name>
        <description language="en">Breakpoint Type.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked address matching breakpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the HMC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information, including the effect of programming the fields to a reserved set of values, see .</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and PMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the SSC, bits [15:14] description.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Defines which half-words an address-matching breakpoint matches, regardless of the instruction set and Execution state.</description>
        <definition>[8:5]</definition>
      </bitField>
      <bitField name="PMC">
        <gui_name language="en">PMC</gui_name>
        <description language="en">Privilege mode control. Determines the Exception level or levels at which a Breakpoint debug event for breakpoint n is generated. This field must be interpreted along with the SSC and HMC fields, and there are constraints on the permitted values of the {HMC, SSC, PMC} fields. For more information see the DBGBCR&lt;n&gt;.SSC description.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGBCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable breakpoint DBGBVR&lt;n&gt;.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR0" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR1" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR2" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR3" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR4" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR5" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR6" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR7" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR8" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR9" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR10" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR11" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR12" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR13" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR14" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbvrn.html" name="DBGBVR15" size="4">
      <gui_name language="en">Debug Breakpoint Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, either the virtual address of an instruction or a context ID. Forms breakpoint n together with control register DBGBCR&lt;n&gt;. If EL2 is implemented and this breakpoint supports Context matching, DBGBVR&lt;n&gt; can be associated with a Breakpoint Extended Value Register DBGBXVR&lt;n&gt; for VMID matching.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR0" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR1" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR2" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR3" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR4" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR5" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR6" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR7" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR8" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR9" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR10" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR11" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR12" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR13" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR14" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgbxvrn.html" name="DBGBXVR15" size="4">
      <gui_name language="en">Debug Breakpoint Extended Value Registers</gui_name>
      <description language="en">Holds a value for use in breakpoint matching, to support VMID matching. Used in conjunction with a control register DBGBCR&lt;n&gt; and a value register DBGBVR&lt;n&gt;, where EL2 is implemented and breakpoint n supports Context matching.</description>
      <bitField name="VMID">
        <gui_name language="en">VMID</gui_name>
        <description language="en">VMID value for comparison.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgclaimclr.html" name="DBGCLAIMCLR" size="4">
      <gui_name language="en">Debug Claim Tag Clear register</gui_name>
      <description language="en">Used by software to read the values of the CLAIM tag bits, and to clear these bits to 0...</description>
      <bitField name="CLAIM">
        <gui_name language="en">CLAIM</gui_name>
        <description language="en">Read or clear CLAIM tag bits. Reading this field returns the current value of the CLAIM tag bits.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgclaimset.html" name="DBGCLAIMSET" size="4">
      <gui_name language="en">Debug Claim Tag Set register</gui_name>
      <description language="en">Used by software to set the CLAIM tag bits to 1...</description>
      <bitField name="CLAIM">
        <gui_name language="en">CLAIM</gui_name>
        <description language="en">Set CLAIM tag bits. RAO.</description>
        <definition>[7:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdccint.html" name="DBGDCCINT" size="4">
      <gui_name language="en">DCC Interrupt Enable Register</gui_name>
      <description language="en">Enables interrupt requests to be signaled based on the DCC status flags.</description>
      <bitField enumerationId="DBGDCCINT_RX" name="RX">
        <gui_name language="en">RX</gui_name>
        <description language="en">DCC interrupt request enable control for DTRRX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField enumerationId="DBGDCCINT_TX" name="TX">
        <gui_name language="en">TX</gui_name>
        <description language="en">DCC interrupt request enable control for DTRTX. Enables a common COMMIRQ interrupt request to be signaled based on the DCC status flags.</description>
        <definition>[29]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid.html" name="DBGDEVID" size="4">
      <gui_name language="en">Debug Device ID register 0</gui_name>
      <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
      <bitField enumerationId="DBGDEVID_CIDMask" name="CIDMask">
        <gui_name language="en">CIDMask</gui_name>
        <description language="en">Indicates the level of support for the Context ID matching breakpoint masking capability.</description>
        <definition>[31:28]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_AuxRegs" name="AuxRegs">
        <gui_name language="en">AuxRegs</gui_name>
        <description language="en">Indicates support for Auxiliary registers.</description>
        <definition>[27:24]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_DoubleLock" name="DoubleLock">
        <gui_name language="en">DoubleLock</gui_name>
        <description language="en">Indicates the presence of the DBGOSDLR, OS Double Lock Register.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_VirtExtns" name="VirtExtns">
        <gui_name language="en">VirtExtns</gui_name>
        <description language="en">Indicates whether EL2 is implemented.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_VectorCatch" name="VectorCatch">
        <gui_name language="en">VectorCatch</gui_name>
        <description language="en">Defines the form of Vector Catch exception implemented.</description>
        <definition>[15:12]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_BPAddrMask" name="BPAddrMask">
        <gui_name language="en">BPAddrMask</gui_name>
        <description language="en">Indicates the level of support for the instruction address matching breakpoint masking capability.</description>
        <definition>[11:8]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_WPAddrMask" name="WPAddrMask">
        <gui_name language="en">WPAddrMask</gui_name>
        <description language="en">Indicates the level of support for the data address matching watchpoint masking capability.</description>
        <definition>[7:4]</definition>
      </bitField>
      <bitField enumerationId="DBGDEVID_PCSample" name="PCSample">
        <gui_name language="en">PCSample</gui_name>
        <description language="en">Indicates the level of PC Sample-based Profiling support using external debug registers.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid1.html" name="DBGDEVID1" size="4">
      <gui_name language="en">Debug Device ID register 1</gui_name>
      <description language="en">Adds to the information given by the DBGDIDR by describing other features of the debug implementation.</description>
      <bitField enumerationId="DBGDEVID1_PCSROffset" name="PCSROffset">
        <gui_name language="en">PCSROffset</gui_name>
        <description language="en">This field indicates the offset applied to PC samples returned by reads of EDPCSR.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdevid2.html" name="DBGDEVID2" size="4">
      <gui_name language="en">Debug Device ID register 2</gui_name>
      <description language="en">Reserved for future descriptions of features of the debug implementation.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdidr.html" name="DBGDIDR" size="4">
      <gui_name language="en">Debug ID Register</gui_name>
      <description language="en">Specifies which version of the Debug architecture is implemented, and some features of the debug implementation.</description>
      <bitField name="WRPs">
        <gui_name language="en">WRPs</gui_name>
        <description language="en">The number of watchpoints implemented, minus 1.</description>
        <definition>[31:28]</definition>
      </bitField>
      <bitField name="BRPs">
        <gui_name language="en">BRPs</gui_name>
        <description language="en">The number of breakpoints implemented, minus 1.</description>
        <definition>[27:24]</definition>
      </bitField>
      <bitField name="CTX_CMPs">
        <gui_name language="en">CTX_CMPs</gui_name>
        <description language="en">The number of breakpoints that can be used for Context matching, minus 1.</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField enumerationId="DBGDIDR_Version" name="Version">
        <gui_name language="en">Version</gui_name>
        <description language="en">The Debug architecture version.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="nSUHD_imp">
        <gui_name language="en">nSUHD_imp</gui_name>
        <description language="en">In ARMv7-A, was Secure User Halting Debug not implemented.</description>
        <definition>[14]</definition>
      </bitField>
      <bitField enumerationId="DBGDIDR_SE_imp" name="SE_imp">
        <gui_name language="en">SE_imp</gui_name>
        <description language="en">EL3 implemented.</description>
        <definition>[12]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdrar.html" name="DBGDRAR" size="4">
      <gui_name language="en">Debug ROM Address Register</gui_name>
      <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
      <bitField name="ROMADDR_31_12">
        <gui_name language="en">ROMADDR_31_12</gui_name>
        <description language="en">Bits[31:12] of the ROM table physical address. Bits [11:0] of the address are zero.</description>
        <definition>[31:12]</definition>
      </bitField>
      <bitField enumerationId="DBGDRAR_Valid" name="Valid">
        <gui_name language="en">Valid</gui_name>
        <description language="en">This field indicates whether the ROM Table address is valid.</description>
        <definition>[1:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdrar.html" name="DBGDRAR_64" size="8">
      <gui_name language="en">Debug ROM Address Register</gui_name>
      <description language="en">Defines the base physical address of a 4KB-aligned memory-mapped debug component, usually a ROM table that locates and describes the memory-mapped debug components in the system. ARMv8 deprecates any use of this register.</description>
      <bitField name="ROMADDR_47_12">
        <gui_name language="en">ROMADDR_47_12</gui_name>
        <description language="en">Bits[47:12] of the ROM table physical address.</description>
        <definition>[47:12]</definition>
      </bitField>
      <bitField enumerationId="DBGDRAR_Valid" name="Valid">
        <gui_name language="en">Valid</gui_name>
        <description language="en">This field indicates whether the ROM Table address is valid.</description>
        <definition>[1:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdsar.html" name="DBGDSAR" size="4">
      <gui_name language="en">Debug Self Address Register</gui_name>
      <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
      <bitField name="Offset">
        <gui_name language="en">Offset</gui_name>
        <description language="en">This register value is RAZ.</description>
        <definition>[31:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdsar.html" name="DBGDSAR_64" size="8">
      <gui_name language="en">Debug Self Address Register</gui_name>
      <description language="en">In earlier versions of the ARM Architecture, this register defines the offset from the base address defined in DBGDRAR of the physical base address of the debug registers for the PE. ARMv8 deprecates any use of this register.</description>
      <bitField name="Offset">
        <gui_name language="en">Offset</gui_name>
        <description language="en">This register value is RAZ.</description>
        <definition>[63:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdscrext.html" name="DBGDSCRext" size="4">
      <gui_name language="en">Debug Status and Control Register, External View</gui_name>
      <description language="en">Main control register for the debug implementation.</description>
      <bitField name="RXfull">
        <gui_name language="en">RXfull</gui_name>
        <description language="en">DTRRX full. Used for save/restore of EDSCR.RXfull.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="TXfull">
        <gui_name language="en">TXfull</gui_name>
        <description language="en">DTRTX full. Used for save/restore of EDSCR.TXfull.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="RXO">
        <gui_name language="en">RXO</gui_name>
        <description language="en">Used for save/restore of EDSCR.RXO.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="TXU">
        <gui_name language="en">TXU</gui_name>
        <description language="en">Used for save/restore of EDSCR.TXU.</description>
        <definition>[26]</definition>
      </bitField>
      <bitField name="INTdis">
        <gui_name language="en">INTdis</gui_name>
        <description language="en">Used for save/restore of EDSCR.INTdis.</description>
        <definition>[23:22]</definition>
      </bitField>
      <bitField name="TDA">
        <gui_name language="en">TDA</gui_name>
        <description language="en">Used for save/restore of EDSCR.TDA.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField name="NS">
        <gui_name language="en">NS</gui_name>
        <description language="en">Non-secure status. Returns the inverse of IsSecure(). This bit is RO.</description>
        <definition>[18]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRext_SPNIDdis" name="SPNIDdis">
        <gui_name language="en">SPNIDdis</gui_name>
        <description language="en">Secure privileged profiling disabled status bit. This bit is RO.</description>
        <definition>[17]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRext_SPIDdis" name="SPIDdis">
        <gui_name language="en">SPIDdis</gui_name>
        <description language="en">Secure privileged AArch32 invasive self-hosted debug disabled status bit. This bit is RO and depends on the value of SDCR.SPD and the pseudocode function AArch32.SelfHostedSecurePrivilegedInvasiveDebugEnabled().</description>
        <definition>[16]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRext_MDBGen" name="MDBGen">
        <gui_name language="en">MDBGen</gui_name>
        <description language="en">Monitor debug events enable. Enable Breakpoint, Watchpoint, and Vector Catch exceptions.</description>
        <definition>[15]</definition>
      </bitField>
      <bitField name="HDE">
        <gui_name language="en">HDE</gui_name>
        <description language="en">Used for save/restore of EDSCR.HDE.</description>
        <definition>[14]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRext_UDCCdis" name="UDCCdis">
        <gui_name language="en">UDCCdis</gui_name>
        <description language="en">Traps EL0 accesses to the DCC registers to Undefined mode.</description>
        <definition>[12]</definition>
      </bitField>
      <bitField name="ERR">
        <gui_name language="en">ERR</gui_name>
        <description language="en">Used for save/restore of EDSCR.ERR.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRext_MOE" name="MOE">
        <gui_name language="en">MOE</gui_name>
        <description language="en">Method of Entry for debug exception.</description>
        <definition>[5:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgdscrint.html" name="DBGDSCRint" size="4">
      <gui_name language="en">Debug Status and Control Register, Internal View</gui_name>
      <description language="en">Main control register for the debug implementation. This is an internal, read-only view.</description>
      <bitField name="RXfull">
        <gui_name language="en">RXfull</gui_name>
        <description language="en">DTRRX full. Read-only view of the equivalent bit in the EDSCR.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="TXfull">
        <gui_name language="en">TXfull</gui_name>
        <description language="en">DTRTX full. Read-only view of the equivalent bit in the EDSCR.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="NS">
        <gui_name language="en">NS</gui_name>
        <description language="en">Non-secure status.</description>
        <definition>[18]</definition>
      </bitField>
      <bitField name="SPNIDdis">
        <gui_name language="en">SPNIDdis</gui_name>
        <description language="en">Secure privileged non-invasive debug disable.</description>
        <definition>[17]</definition>
      </bitField>
      <bitField name="SPIDdis">
        <gui_name language="en">SPIDdis</gui_name>
        <description language="en">Secure privileged invasive debug disable.</description>
        <definition>[16]</definition>
      </bitField>
      <bitField name="MDBGen">
        <gui_name language="en">MDBGen</gui_name>
        <description language="en">Monitor debug events enable.</description>
        <definition>[15]</definition>
      </bitField>
      <bitField name="UDCCdis">
        <gui_name language="en">UDCCdis</gui_name>
        <description language="en">User mode access to Debug Communications Channel disable.</description>
        <definition>[12]</definition>
      </bitField>
      <bitField enumerationId="DBGDSCRint_MOE" name="MOE">
        <gui_name language="en">MOE</gui_name>
        <description language="en">Method of Entry for debug exception.</description>
        <definition>[5:2]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgosdlr.html" name="DBGOSDLR" size="4">
      <gui_name language="en">Debug OS Double Lock Register</gui_name>
      <description language="en">Locks out the external debug interface.</description>
      <bitField enumerationId="DBGOSDLR_DLK" name="DLK">
        <gui_name language="en">DLK</gui_name>
        <description language="en">OS Double Lock control bit.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoseccr.html" name="DBGOSECCR" size="4">
      <gui_name language="en">Debug OS Lock Exception Catch Control Register</gui_name>
      <description language="en">Provides a mechanism for an operating system to access the contents of EDECCR that are otherwise invisible to software, so it can save/restore the contents of EDECCR over powerdown on behalf of the external debugger.</description>
      <bitField name="EDECCR">
        <gui_name language="en">EDECCR</gui_name>
        <description language="en">Used for save/restore to EDECCR over powerdown.</description>
        <definition>[31:0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoslar.html" name="DBGOSLAR" size="4">
      <gui_name language="en">Debug OS Lock Access Register</gui_name>
      <description language="en">Provides a lock for the debug registers. The OS lock also disables some Software debug events.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgoslsr.html" name="DBGOSLSR" size="4">
      <gui_name language="en">Debug OS Lock Status Register</gui_name>
      <description language="en">Provides status information for the OS lock.</description>
      <bitField name="OSLM_1">
        <gui_name language="en">OSLM_1</gui_name>
        <description language="en">See below for description of the OSLM field.</description>
        <definition>[3]</definition>
      </bitField>
      <bitField name="nTT">
        <gui_name language="en">nTT</gui_name>
        <description language="en">Not 32-bit access. This bit is always RAZ. It indicates that a 32-bit access is needed to write the key to the OS Lock Access Register.</description>
        <definition>[2]</definition>
      </bitField>
      <bitField enumerationId="DBGOSLSR_OSLK" name="OSLK">
        <gui_name language="en">OSLK</gui_name>
        <description language="en">OS Lock Status.</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="DBGOSLSR_OSLM_0" name="OSLM_0">
        <gui_name language="en">OSLM_0</gui_name>
        <description language="en">OS lock model implemented. Identifies the form of OS save and restore mechanism implemented.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgprcr.html" name="DBGPRCR" size="4">
      <gui_name language="en">Debug Power Control Register</gui_name>
      <description language="en">Controls behavior of the PE on powerdown request.</description>
      <bitField enumerationId="DBGPRCR_CORENPDRQ" name="CORENPDRQ">
        <gui_name language="en">CORENPDRQ</gui_name>
        <description language="en">Core no powerdown request. Requests emulation of powerdown.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgvcr.html" name="DBGVCR" size="4">
      <gui_name language="en">Debug Vector Catch Register</gui_name>
      <description language="en">Controls Vector Catch debug events.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR0" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR1" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR2" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR3" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR4" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR5" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR6" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR7" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR8" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR9" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR10" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR11" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR12" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR13" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR14" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwcrn.html" name="DBGWCR15" size="4">
      <gui_name language="en">Debug Watchpoint Control Registers</gui_name>
      <description language="en">Holds control information for a watchpoint. Forms watchpoint n together with value register DBGWVR&lt;n&gt;.</description>
      <bitField enumerationId="DBGWCR_n_MASK" name="MASK">
        <gui_name language="en">MASK</gui_name>
        <description language="en">Address mask. Only objects up to 2GB can be watched using a single mask.</description>
        <definition>[28:24]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_WT" name="WT">
        <gui_name language="en">WT</gui_name>
        <description language="en">Watchpoint type.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="LBN">
        <gui_name language="en">LBN</gui_name>
        <description language="en">Linked breakpoint number. For Linked data address watchpoints, this specifies the index of the Context-matching breakpoint linked to.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="SSC">
        <gui_name language="en">SSC</gui_name>
        <description language="en">Security state control. Determines the Security states under which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the HMC and PAC fields.</description>
        <definition>[15:14]</definition>
      </bitField>
      <bitField name="HMC">
        <gui_name language="en">HMC</gui_name>
        <description language="en">Higher mode control. Determines the debug perspective for deciding when a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and PAC fields.</description>
        <definition>[13]</definition>
      </bitField>
      <bitField name="BAS">
        <gui_name language="en">BAS</gui_name>
        <description language="en">Byte address select. Each bit of this field selects whether a byte from within the word or double-word addressed by DBGWVR&lt;n&gt; is being watched.</description>
        <definition>[12:5]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_LSC" name="LSC">
        <gui_name language="en">LSC</gui_name>
        <description language="en">Load/store control. This field enables watchpoint matching on the type of access being made.</description>
        <definition>[4:3]</definition>
      </bitField>
      <bitField name="PAC">
        <gui_name language="en">PAC</gui_name>
        <description language="en">Privilege of access control. Determines the Exception level or levels at which a Watchpoint debug event for watchpoint n is generated. This field must be interpreted along with the SSC and HMC fields.</description>
        <definition>[2:1]</definition>
      </bitField>
      <bitField enumerationId="DBGWCR_n_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Enable watchpoint n.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwfar.html" name="DBGWFAR" size="4">
      <gui_name language="en">Debug Watchpoint Fault Address Register</gui_name>
      <description language="en">Previously returned information about the address of the instruction that accessed a watchpointed address. Is now deprecated and RES0.</description>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR0" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR1" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR2" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR3" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR4" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR5" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR6" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR7" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR8" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR9" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR10" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR11" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR12" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR13" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR14" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-dbgwvrn.html" name="DBGWVR15" size="4">
      <gui_name language="en">Debug Watchpoint Value Registers</gui_name>
      <description language="en">Holds a data address value for use in watchpoint matching. Forms watchpoint n together with control register DBGWCR&lt;n&gt;.</description>
      <bitField name="VA">
        <gui_name language="en">VA</gui_name>
        <description language="en">Bits[31:2] of the address value for comparison.</description>
        <definition>[31:2]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hdcr.html" name="HDCR" size="4">
      <gui_name language="en">Hyp Debug Control Register</gui_name>
      <description language="en">Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</description>
      <bitField enumerationId="HDCR_TDRA" name="TDRA">
        <gui_name language="en">TDRA</gui_name>
        <description language="en">Trap Debug ROM Address register access. Traps Non-secure EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</description>
        <definition>[11]</definition>
      </bitField>
      <bitField enumerationId="HDCR_TDOSA" name="TDOSA">
        <gui_name language="en">TDOSA</gui_name>
        <description language="en">Trap debug OS-related register access. Traps Non-secure EL1 System register accesses to the powerdown debug registers to Hyp mode.</description>
        <definition>[10]</definition>
      </bitField>
      <bitField enumerationId="HDCR_TDA" name="TDA">
        <gui_name language="en">TDA</gui_name>
        <description language="en">Trap debug access.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="HDCR_TDE" name="TDE">
        <gui_name language="en">TDE</gui_name>
        <description language="en">Trap Debug exceptions.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="HDCR_HPME" name="HPME">
        <gui_name language="en">HPME</gui_name>
        <description language="en">Hypervisor Performance Monitors Enable.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="HDCR_TPM" name="TPM">
        <gui_name language="en">TPM</gui_name>
        <description language="en">Trap Performance Monitors accesses. Traps Non-secure EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="HDCR_TPMCR" name="TPMCR">
        <gui_name language="en">TPMCR</gui_name>
        <description language="en">Trap PMCR accesses. Traps Non-secure EL0 and EL1 accesses to the PMCR to Hyp mode.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField name="HPMN">
        <gui_name language="en">HPMN</gui_name>
        <description language="en">Defines the number of Performance Monitors counters that are accessible from Non-secure EL1 modes, and from Non-secure EL0 modes if unprivileged access is enabled.</description>
        <definition>[4:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sdcr-s.html" name="SDCR" size="4">
      <gui_name language="en">Secure Debug Control Register</gui_name>
      <description language="en">When EL3 is implemented and can use AArch32, controls debug and performance monitors functionality in Secure state.</description>
      <bitField enumerationId="SDCR_EPMAD" name="EPMAD">
        <gui_name language="en">EPMAD</gui_name>
        <description language="en">External debug interface Performance Monitors registers disable.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField enumerationId="SDCR_EDAD" name="EDAD">
        <gui_name language="en">EDAD</gui_name>
        <description language="en">External debug interface breakpoint and watchpoint register access disable.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField enumerationId="SDCR_SPME" name="SPME">
        <gui_name language="en">SPME</gui_name>
        <description language="en">Secure Performance Monitors enable.</description>
        <definition>[17]</definition>
      </bitField>
      <bitField enumerationId="SDCR_SPD" name="SPD">
        <gui_name language="en">SPD</gui_name>
        <description language="en">AArch32 Secure privileged debug. Enables or disables debug exceptions from Secure state, other than Breakpoint Instruction exceptions.</description>
        <definition>[15:14]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-sder-s.html" name="SDER" size="4">
      <gui_name language="en">Secure Debug Enable Register</gui_name>
      <description language="en">Controls invasive and non-invasive debug in the Secure EL0 mode.</description>
      <bitField enumerationId="SDER_SUNIDEN" name="SUNIDEN">
        <gui_name language="en">SUNIDEN</gui_name>
        <description language="en">Secure User Non-Invasive Debug Enable:</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="SDER_SUIDEN" name="SUIDEN">
        <gui_name language="en">SUIDEN</gui_name>
        <description language="en">Secure User Invasive Debug Enable:</description>
        <definition>[0]</definition>
      </bitField>
    </register>
  </register_group>
  <tcf:enumeration name="DBGAUTHSTATUS_SNID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Non-secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalSecureNoninvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalSecureNoninvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_SID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Non-secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalSecureInvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalSecureInvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_NSNID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalNoninvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalNoninvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGAUTHSTATUS_NSID">
    <tcf:enumItem description="Not implemented. EL3 is not implemented and the implemented Security state is Secure state." name="Not_implemented" number="0"/>
    <tcf:enumItem description="Implemented and disabled. ExternalInvasiveDebugEnabled() == FALSE." name="Implemented_and_disabled" number="2"/>
    <tcf:enumItem description="Implemented and enabled. ExternalInvasiveDebugEnabled() == TRUE." name="Implemented_and_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGBCR_n_BT">
    <tcf:enumItem description="Unlinked instruction address match." name="Unlinked_instruction_address_match" number="0"/>
    <tcf:enumItem description="Linked instruction address match." name="Linked_instruction_address_match" number="1"/>
    <tcf:enumItem description="Unlinked context ID match." name="Unlinked_context_ID_match" number="2"/>
    <tcf:enumItem description="Linked context ID match" name="Linked_context_ID_match" number="3"/>
    <tcf:enumItem description="Unlinked instruction address mismatch." name="Unlinked_instruction_address_mismatch" number="4"/>
    <tcf:enumItem description="Linked instruction address mismatch." name="Linked_instruction_address_mismatch" number="5"/>
    <tcf:enumItem description="Unlinked VMID match." name="Unlinked_VMID_match" number="8"/>
    <tcf:enumItem description="Linked VMID match." name="Linked_VMID_match" number="9"/>
    <tcf:enumItem description="Unlinked VMID and context ID match." name="Unlinked_VMID_and_context_ID_match" number="10"/>
    <tcf:enumItem description="Linked VMID and context ID match." name="Linked_VMID_and_context_ID_match" number="11"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGBCR_n_E">
    <tcf:enumItem description="Breakpoint disabled." name="Breakpoint_disabled" number="0"/>
    <tcf:enumItem description="Breakpoint enabled." name="Breakpoint_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDCCINT_RX">
    <tcf:enumItem description="No interrupt request generated by DTRRX." name="No_interrupt_request_generated_by_DTRRX" number="0"/>
    <tcf:enumItem description="Interrupt request will be generated on RXfull == 1." name="Interrupt_request_will_be_generated_on_RXfull_1" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDCCINT_TX">
    <tcf:enumItem description="No interrupt request generated by DTRTX." name="No_interrupt_request_generated_by_DTRTX" number="0"/>
    <tcf:enumItem description="Interrupt request will be generated on TXfull == 0." name="Interrupt_request_will_be_generated_on_TXfull_0" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_CIDMask">
    <tcf:enumItem description="Context ID masking is not implemented." name="Context_ID_masking_is_not_implemented" number="0"/>
    <tcf:enumItem description="Context ID masking is implemented." name="Context_ID_masking_is_implemented" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_AuxRegs">
    <tcf:enumItem description="None supported." name="None_supported" number="0"/>
    <tcf:enumItem description="Support for External Debug Auxiliary Control Register, EDACR." name="Support_for_External_Debug_Auxiliary_Control_Register_EDACR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_DoubleLock">
    <tcf:enumItem description="The DBGOSDLR is not present." name="The_DBGOSDLR_is_not_present" number="0"/>
    <tcf:enumItem description="The DBGOSDLR is present." name="The_DBGOSDLR_is_present" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_VirtExtns">
    <tcf:enumItem description="EL2 is not implemented." name="EL2_is_not_implemented" number="0"/>
    <tcf:enumItem description="EL2 is implemented." name="EL2_is_implemented" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_VectorCatch">
    <tcf:enumItem description="Address matching Vector Catch exception implemented." name="Address_matching_Vector_Catch_exception_implemented" number="0"/>
    <tcf:enumItem description="Exception matching Vector Catch exception implemented." name="Exception_matching_Vector_Catch_exception_implemented" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_BPAddrMask">
    <tcf:enumItem description="Breakpoint address masking might be implemented. If not implemented, DBGBCR&lt;n&gt;[28:24] is RAZ/WI." name="Breakpoint_address_masking_might_be_implemented" number="0"/>
    <tcf:enumItem description="Breakpoint address masking is implemented." name="Breakpoint_address_masking_is_implemented" number="1"/>
    <tcf:enumItem description="Breakpoint address masking is not implemented. DBGBCR&lt;n&gt;[28:24] is RES0." name="Breakpoint_address_masking_is_not_implemented" number="15"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_WPAddrMask">
    <tcf:enumItem description="Watchpoint address masking might be implemented. If not implemented, DBGWCR&lt;n&gt;.MASK (Address mask) is RAZ/WI." name="Watchpoint_address_masking_might_be_implemented" number="0"/>
    <tcf:enumItem description="Watchpoint address masking is implemented." name="Watchpoint_address_masking_is_implemented" number="1"/>
    <tcf:enumItem description="Watchpoint address masking is not implemented. DBGWCR&lt;n&gt;.MASK (Address mask) is RES0." name="Watchpoint_address_masking_is_not_implemented" number="15"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID_PCSample">
    <tcf:enumItem description="Architecture-defined form of PC Sample-based Profiling not implemented using external debug registers." name="Architecture_defined_form_of_PC_Sample_based_Profiling_not_implemented_using_external_debug_registers" number="0"/>
    <tcf:enumItem description="Only EDPCSR and EDCIDSR are implemented. This option is only permitted if EL3 and EL2 are not implemented." name="Only_EDPCSR_and_EDCIDSR_are_implemented" number="2"/>
    <tcf:enumItem description="EDPCSR, EDCIDSR, and EDVIDSR are implemented." name="EDPCSR_EDCIDSR_and_EDVIDSR_are_implemented" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDEVID1_PCSROffset">
    <tcf:enumItem description="EDPCSR not implemented." name="EDPCSR_not_implemented" number="0"/>
    <tcf:enumItem description="EDPCSR implemented. Samples have no offset applied and do not sample the instruction set state in AArch32 state." name="EDPCSR_implemented" number="2"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDIDR_Version">
    <tcf:enumItem description="ARMv6, v6 Debug architecture." name="ARMv6_v6_Debug_architecture" number="1"/>
    <tcf:enumItem description="ARMv6, v6.1 Debug architecture." name="ARMv6_v6" number="2"/>
    <tcf:enumItem description="ARMv7, v7 Debug architecture, with baseline System registers in the (coproc==1110) encoding space implemented." name="ARMv7_v7_Debug_architecture_with_baseline_System_registers_in_the_coproc_1110_encoding_space_implemented" number="3"/>
    <tcf:enumItem description="ARMv7, v7 Debug architecture, with all System registers in the (coproc==1110) encoding space implemented." name="ARMv7_v7_Debug_architecture_with_all_System_registers_in_the_coproc_1110_encoding_space_implemented" number="4"/>
    <tcf:enumItem description="ARMv7, v7.1 Debug architecture." name="ARMv7_v7" number="5"/>
    <tcf:enumItem description="ARMv8, v8 Debug architecture." name="ARMv8_v8_Debug_architecture" number="6"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDIDR_SE_imp">
    <tcf:enumItem description="EL3 not implemented." name="EL3_not_implemented" number="0"/>
    <tcf:enumItem description="EL3 implemented." name="EL3_implemented" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDRAR_Valid">
    <tcf:enumItem description="ROM Table address is not valid. Software must ignore ROMADDR." name="ROM_Table_address_is_not_valid" number="0"/>
    <tcf:enumItem description="ROM Table address is valid." name="ROM_Table_address_is_valid" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRext_SPNIDdis">
    <tcf:enumItem description="If EL3 is implemented, profiling allowed in Secure privileged modes." name="If_EL3_is_implemented_profiling_allowed_in_Secure_privileged_modes" number="0"/>
    <tcf:enumItem description="If EL3 is implemented, profiling prohibited in Secure privileged modes." name="If_EL3_is_implemented_profiling_prohibited_in_Secure_privileged_modes" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRext_SPIDdis">
    <tcf:enumItem description="Self-hosted debug enabled in Secure privileged AArch32 modes." name="Self_hosted_debug_enabled_in_Secure_privileged_AArch32_modes" number="0"/>
    <tcf:enumItem description="Self-hosted debug disabled in Secure privileged AArch32 modes." name="Self_hosted_debug_disabled_in_Secure_privileged_AArch32_modes" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRext_MDBGen">
    <tcf:enumItem description="Breakpoint, Watchpoint, and Vector Catch exceptions disabled." name="Breakpoint_Watchpoint_and_Vector_Catch_exceptions_disabled" number="0"/>
    <tcf:enumItem description="Breakpoint, Watchpoint, and Vector Catch exceptions enabled." name="Breakpoint_Watchpoint_and_Vector_Catch_exceptions_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRext_UDCCdis">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="EL0 accesses to the DBGDSCRint, DBGDTRRXint, DBGDTRTXint, DBGDIDR, DBGDSAR, and DBGDRAR are trapped to Undefined mode." name="EL0_accesses_to_the_DBGDSCRint_DBGDTRRXint_DBGDTRTXint_DBGDIDR_DBGDSAR_and_DBGDRAR_are_trapped_to_Undefined_mode" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRext_MOE">
    <tcf:enumItem description="Breakpoint" name="Breakpoint" number="1"/>
    <tcf:enumItem description="Software breakpoint (BKPT) instruction" name="Software_breakpoint_BKPT_instruction" number="3"/>
    <tcf:enumItem description="Vector catch" name="Vector_catch" number="5"/>
    <tcf:enumItem description="Watchpoint" name="Watchpoint" number="10"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGDSCRint_MOE">
    <tcf:enumItem description="Breakpoint" name="Breakpoint" number="1"/>
    <tcf:enumItem description="Software breakpoint (BKPT) instruction" name="Software_breakpoint_BKPT_instruction" number="3"/>
    <tcf:enumItem description="Vector catch" name="Vector_catch" number="5"/>
    <tcf:enumItem description="Watchpoint" name="Watchpoint" number="10"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGOSDLR_DLK">
    <tcf:enumItem description="OS Double Lock unlocked." name="OS_Double_Lock_unlocked" number="0"/>
    <tcf:enumItem description="OS Double Lock locked, if DBGPRCR.CORENPDRQ (Core no powerdown request) bit is set to 0 and the PE is in Non-debug state." name="OS_Double_Lock_locked_if_DBGPRCR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGOSLSR_OSLK">
    <tcf:enumItem description="OS lock unlocked." name="OS_lock_unlocked" number="0"/>
    <tcf:enumItem description="OS lock locked." name="OS_lock_locked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGOSLSR_OSLM_0">
    <tcf:enumItem description="OS lock implemented. DBGOSSRR not implemented." name="OS_lock_implemented" number="2"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGPRCR_CORENPDRQ">
    <tcf:enumItem description="If the system responds to a powerdown request, it powers down Core power domain." name="If_the_system_responds_to_a_powerdown_request_it_powers_down_Core_power_domain" number="0"/>
    <tcf:enumItem description="If the system responds to a powerdown request, it does not powerdown the Core power domain, but instead emulates a powerdown of that domain." name="If_the_system_responds_to_a_powerdown_request_it_does_not_powerdown_the_Core_power_domain_but_instead_emulates_a_powerdown_of_that_domain" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_MASK">
    <tcf:enumItem description="No mask." name="No_mask" number="0"/>
    <tcf:enumItem description="Reserved." name="_0" number="1"/>
    <tcf:enumItem description="Reserved." name="_1" number="2"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_WT">
    <tcf:enumItem description="Unlinked data address match." name="Unlinked_data_address_match" number="0"/>
    <tcf:enumItem description="Linked data address match." name="Linked_data_address_match" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_LSC">
    <tcf:enumItem description="Match instructions that load from a watchpointed address." name="Match_instructions_that_load_from_a_watchpointed_address" number="1"/>
    <tcf:enumItem description="Match instructions that store to a watchpointed address." name="Match_instructions_that_store_to_a_watchpointed_address" number="2"/>
    <tcf:enumItem description="Match instructions that load from or store to a watchpointed address." name="Match_instructions_that_load_from_or_store_to_a_watchpointed_address" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="DBGWCR_n_E">
    <tcf:enumItem description="Watchpoint disabled." name="Watchpoint_disabled" number="0"/>
    <tcf:enumItem description="Watchpoint enabled." name="Watchpoint_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TDRA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 System register accesses to the DBGDRAR or DBGDSAR are trapped to Hyp mode, unless it is trapped by DBGDSCRext.UDCCdis." name="Non_secure_EL0_and_EL1_System_register_accesses_to_the_DBGDRAR_or_DBGDSAR_are_trapped_to_Hyp_mode_unless_it_is_trapped_by_DBGDSCRext" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TDOSA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL1 System register accesses to the powerdown debug registers are trapped to Hyp mode." name="Non_secure_EL1_System_register_accesses_to_the_powerdown_debug_registers_are_trapped_to_Hyp_mode" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TDA">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 or EL1 System register accesses to the debug registers, other than the registers trapped by HDCR.TDRA and HDCR.TDOSA, are trapped to Hyp mode, unless it is trapped by DBGDSCRext.UDCCdis." name="Non_secure_EL0_or_EL1_System_register_accesses_to_the_debug_registers_other_than_the_registers_trapped_by_HDCR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TDE">
    <tcf:enumItem description="This control has no effect on the routing of debug exceptions, and has no effect on Non-secure accesses to debug registers." name="This_control_has_no_effect_on_the_routing_of_debug_exceptions_and_has_no_effect_on_Non_secure_accesses_to_debug_registers" number="0"/>
    <tcf:enumItem description="In Non-secure state..." name="In_Non_secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_HPME">
    <tcf:enumItem description="Hyp mode Performance Monitors disabled." name="Hyp_mode_Performance_Monitors_disabled" number="0"/>
    <tcf:enumItem description="Hyp mode Performance Monitors enabled." name="Hyp_mode_Performance_Monitors_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TPM">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 accesses to all Performance Monitors registers are trapped to Hyp mode." name="Non_secure_EL0_and_EL1_accesses_to_all_Performance_Monitors_registers_are_trapped_to_Hyp_mode" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="HDCR_TPMCR">
    <tcf:enumItem description="This control does not cause any instructions to be trapped." name="This_control_does_not_cause_any_instructions_to_be_trapped" number="0"/>
    <tcf:enumItem description="Non-secure EL0 and EL1 accesses to the PMCR are trapped to Hyp mode, unless it is trapped by PMUSERENR.EN." name="Non_secure_EL0_and_EL1_accesses_to_the_PMCR_are_trapped_to_Hyp_mode_unless_it_is_trapped_by_PMUSERENR" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDCR_EPMAD">
    <tcf:enumItem description="Access to Performance Monitors registers from external debugger is permitted." name="Access_to_Performance_Monitors_registers_from_external_debugger_is_permitted" number="0"/>
    <tcf:enumItem description="Access to Performance Monitors registers from external debugger is disabled, unless overridden by the IMPLEMENTATION DEFINED authentication interface." name="Access_to_Performance_Monitors_registers_from_external_debugger_is_disabled_unless_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDCR_EDAD">
    <tcf:enumItem description="Access to breakpoint and watchpoint registers from external debugger is permitted." name="Access_to_breakpoint_and_watchpoint_registers_from_external_debugger_is_permitted" number="0"/>
    <tcf:enumItem description="Access to breakpoint and watchpoint registers from external debugger is disabled, unless overridden by the IMPLEMENTATION DEFINED authentication interface." name="Access_to_breakpoint_and_watchpoint_registers_from_external_debugger_is_disabled_unless_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDCR_SPME">
    <tcf:enumItem description="Event counting prohibited in Secure state, unless ExternalSecureNoninvasiveDebugEnabled() is TRUE, meaning this control is overridden by the IMPLEMENTATION DEFINED authentication interface." name="Event_counting_prohibited_in_Secure_state_unless_ExternalSecureNoninvasiveDebugEnabled_is_TRUE_meaning_this_control_is_overridden_by_the_IMPLEMENTATION_DEFINED_authentication_interface" number="0"/>
    <tcf:enumItem description="Event counting allowed in Secure state." name="Event_counting_allowed_in_Secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDCR_SPD">
    <tcf:enumItem description="Legacy mode. Debug exceptions from Secure EL1 are enabled by the authentication interface." name="Legacy_mode" number="0"/>
    <tcf:enumItem description="Secure privileged debug disabled. Debug exceptions from Secure EL1 are disabled." name="Secure_privileged_debug_disabled" number="2"/>
    <tcf:enumItem description="Secure privileged debug enabled. Debug exceptions from Secure EL1 are enabled." name="Secure_privileged_debug_enabled" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDER_SUNIDEN">
    <tcf:enumItem description="Performance Monitors event counting prohibited in Secure EL0 unless allowed by MDCR_EL3.SPME, SDCR.SPME, or the IMPLEMENTATION DEFINED authentication interface ExternalSecureNoninvasiveDebugEnabled()." name="Performance_Monitors_event_counting_prohibited_in_Secure_EL0_unless_allowed_by_MDCR_EL3" number="0"/>
    <tcf:enumItem description="Performance Monitors event counting allowed in Secure EL0." name="Performance_Monitors_event_counting_allowed_in_Secure_EL0" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SDER_SUIDEN">
    <tcf:enumItem description="Debug exceptions other than Breakpoint Instruction exceptions from Secure EL0 are disabled, unless enabled by MDCR_EL3.SPD32 or SDCR.SPD." name="Debug_exceptions_other_than_Breakpoint_Instruction_exceptions_from_Secure_EL0_are_disabled_unless_enabled_by_MDCR_EL3" number="0"/>
    <tcf:enumItem description="Debug exceptions from Secure EL0 are enabled." name="Debug_exceptions_from_Secure_EL0_are_enabled" number="1"/>
  </tcf:enumeration>
</register_list>
