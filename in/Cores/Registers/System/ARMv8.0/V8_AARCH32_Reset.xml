<?xml version="1.0" encoding="UTF-8"?>
<register_list name="System" xmlns="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd">
  <!--PLEASE DO NOT EDIT THIS FILE - Generated from SysReg_xml-00bet19-->
  <register_group name="Reset">
    <gui_name language="en">Reset</gui_name>
    <description language="en">Reset</description>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-hrmr.html" name="HRMR" size="4">
      <gui_name language="en">Hyp Reset Management Register</gui_name>
      <description language="en">If EL2 is the highest implemented Exception level and this register is implemented...</description>
      <bitField name="RR">
        <gui_name language="en">RR</gui_name>
        <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="HRMR_AA64" name="AA64">
        <gui_name language="en">AA64</gui_name>
        <description language="en">When EL2 can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-rmr.html" name="RMR" size="4">
      <gui_name language="en">Reset Management Register</gui_name>
      <description language="en">If EL1 or EL3 is the highest implemented Exception level and this register is implemented...</description>
      <bitField name="RR">
        <gui_name language="en">RR</gui_name>
        <description language="en">Reset Request. Setting this bit to 1 requests a Warm reset.</description>
        <definition>[1]</definition>
      </bitField>
      <bitField enumerationId="RMR_AA64" name="AA64">
        <gui_name language="en">AA64</gui_name>
        <description language="en">When the highest implemented Exception level can use AArch64, determines which Execution state the PE boots into after a Warm reset:</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RO" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch32-rvbar.html" name="RVBAR" size="4">
      <gui_name language="en">Reset Vector Base Address Register</gui_name>
      <description language="en">If EL3 is not implemented, contains the IMPLEMENTATION DEFINED address that execution starts from after reset when executing in AArch32 state.</description>
    </register>
  </register_group>
  <tcf:enumeration name="HRMR_AA64">
    <tcf:enumItem description="AArch32." name="AArch32" number="0"/>
    <tcf:enumItem description="AArch64." name="AArch64" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="RMR_AA64">
    <tcf:enumItem description="AArch32." name="AArch32" number="0"/>
    <tcf:enumItem description="AArch64." name="AArch64" number="1"/>
  </tcf:enumeration>
</register_list>
