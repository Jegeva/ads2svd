<?xml version="1.0" encoding="UTF-8"?>
<register_list name="System" xmlns="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd">
  <!--PLEASE DO NOT EDIT THIS FILE - Generated from SysReg_xml-00bet19-->
  <register_group name="Special">
    <gui_name language="en">Special</gui_name>
    <description language="en">Special</description>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el1.html" name="ELR_EL1" size="8">
      <gui_name language="en">Exception Link Register (EL1)</gui_name>
      <description language="en">When taking an exception to EL1, holds the address to return to.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el2.html" name="ELR_EL2" size="8">
      <gui_name language="en">Exception Link Register (EL2)</gui_name>
      <description language="en">When taking an exception to EL2, holds the address to return to.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-elr_el3.html" name="ELR_EL3" size="8">
      <gui_name language="en">Exception Link Register (EL3)</gui_name>
      <description language="en">When taking an exception to EL3, holds the address to return to.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpcr.html" name="FPCR" size="4">
      <gui_name language="en">Floating-point Control Register</gui_name>
      <description language="en">Controls floating-point behavior.</description>
      <bitField enumerationId="FPCR_AHP" name="AHP">
        <gui_name language="en">AHP</gui_name>
        <description language="en">Alternative half-precision control bit:</description>
        <definition>[26]</definition>
      </bitField>
      <bitField enumerationId="FPCR_DN" name="DN">
        <gui_name language="en">DN</gui_name>
        <description language="en">Default NaN mode control bit:</description>
        <definition>[25]</definition>
      </bitField>
      <bitField enumerationId="FPCR_FZ" name="FZ">
        <gui_name language="en">FZ</gui_name>
        <description language="en">Flush-to-zero mode control bit:</description>
        <definition>[24]</definition>
      </bitField>
      <bitField enumerationId="FPCR_RMode" name="RMode">
        <gui_name language="en">RMode</gui_name>
        <description language="en">Rounding Mode control field.</description>
        <definition>[23:22]</definition>
      </bitField>
      <bitField name="Stride">
        <gui_name language="en">Stride</gui_name>
        <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Stride field.</description>
        <definition>[21:20]</definition>
      </bitField>
      <bitField name="Len">
        <gui_name language="en">Len</gui_name>
        <description language="en">This field has no function in AArch64 state, and non-zero values are ignored during execution in AArch64  state. It is included only for context saving and restoration of the AArch32 FPSCR.Len field.</description>
        <definition>[18:16]</definition>
      </bitField>
      <bitField enumerationId="FPCR_IDE" name="IDE">
        <gui_name language="en">IDE</gui_name>
        <description language="en">Input Denormal floating-point exception trap enable.</description>
        <definition>[15]</definition>
      </bitField>
      <bitField enumerationId="FPCR_IXE" name="IXE">
        <gui_name language="en">IXE</gui_name>
        <description language="en">Inexact floating-point exception trap enable.</description>
        <definition>[12]</definition>
      </bitField>
      <bitField enumerationId="FPCR_UFE" name="UFE">
        <gui_name language="en">UFE</gui_name>
        <description language="en">Underflow floating-point exception trap enable.</description>
        <definition>[11]</definition>
      </bitField>
      <bitField enumerationId="FPCR_OFE" name="OFE">
        <gui_name language="en">OFE</gui_name>
        <description language="en">Overflow floating-point exception trap enable.</description>
        <definition>[10]</definition>
      </bitField>
      <bitField enumerationId="FPCR_DZE" name="DZE">
        <gui_name language="en">DZE</gui_name>
        <description language="en">Divide by Zero floating-point exception trap enable.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="FPCR_IOE" name="IOE">
        <gui_name language="en">IOE</gui_name>
        <description language="en">Invalid Operation floating-point exception trap enable.</description>
        <definition>[8]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-fpsr.html" name="FPSR" size="4">
      <gui_name language="en">Floating-point Status Register</gui_name>
      <description language="en">Provides floating-point system status information.</description>
      <bitField name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Negative condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.N flag instead.</description>
        <definition>[31]</definition>
      </bitField>
      <bitField name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Zero condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.Z flag instead.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Carry condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.C flag instead.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Overflow condition flag for AArch32 floating-point comparison operations. AArch64 floating-point comparisons set the PSTATE.V flag instead.</description>
        <definition>[28]</definition>
      </bitField>
      <bitField name="QC">
        <gui_name language="en">QC</gui_name>
        <description language="en">Cumulative saturation bit, Advanced SIMD only. This bit is set to 1 to indicate that an Advanced SIMD integer operation has saturated since 0 was last written to this bit.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="IDC">
        <gui_name language="en">IDC</gui_name>
        <description language="en">Input Denormal cumulative floating-point exception bit. This bit is set to 1 to indicate that the Input Denormal floating-point exception has occurred since 0 was last written to this bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField name="IXC">
        <gui_name language="en">IXC</gui_name>
        <description language="en">Inexact cumulative floating-point exception bit. This bit is set to 1 to indicate that the Inexact exception floating-point has occurred since 0 was last written to this bit.</description>
        <definition>[4]</definition>
      </bitField>
      <bitField name="UFC">
        <gui_name language="en">UFC</gui_name>
        <description language="en">Underflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Underflow floating-point exception has occurred since 0 was last written to this bit.</description>
        <definition>[3]</definition>
      </bitField>
      <bitField name="OFC">
        <gui_name language="en">OFC</gui_name>
        <description language="en">Overflow cumulative floating-point exception bit. This bit is set to 1 to indicate that the Overflow floating-point exception has occurred since 0 was last written to this bit.</description>
        <definition>[2]</definition>
      </bitField>
      <bitField name="DZC">
        <gui_name language="en">DZC</gui_name>
        <description language="en">Divide by Zero cumulative floating-point exception bit. This bit is set to 1 to indicate that the Divide by Zero floating-point exception has occurred since 0 was last written to this bit.</description>
        <definition>[1]</definition>
      </bitField>
      <bitField name="IOC">
        <gui_name language="en">IOC</gui_name>
        <description language="en">Invalid Operation cumulative floating-point exception bit. This bit is set to 1 to indicate that the Invalid Operation floating-point exception has occurred since 0 was last written to this bit.</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el1.html" name="SPSR_EL1" size="4">
      <gui_name language="en">Saved Program Status Register (EL1)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to EL1.</description>
      <bitField name="SS">
        <gui_name language="en">SS</gui_name>
        <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL1_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL1_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL1_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el2.html" name="SPSR_EL2" size="4">
      <gui_name language="en">Saved Program Status Register (EL2)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to EL2.</description>
      <bitField name="SS">
        <gui_name language="en">SS</gui_name>
        <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL2_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL2_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL2_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_el3.html" name="SPSR_EL3" size="4">
      <gui_name language="en">Saved Program Status Register (EL3)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to EL3.</description>
      <bitField name="SS">
        <gui_name language="en">SS</gui_name>
        <description language="en">Software step. Shows the value of PSTATE.SS immediately before the exception was taken.</description>
        <definition>[21]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL3_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL3_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_EL3_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_abt.html" name="SPSR_abt" size="4">
      <gui_name language="en">Saved Program Status Register (Abort mode)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to Abort mode.</description>
      <bitField name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Set to the value of CPSR.N on taking an exception to Abort mode, and copied to CPSR.N on executing an exception return operation in Abort mode.</description>
        <definition>[31]</definition>
      </bitField>
      <bitField name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Set to the value of CPSR.Z on taking an exception to Abort mode, and copied to CPSR.Z on executing an exception return operation in Abort mode.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Set to the value of CPSR.C on taking an exception to Abort mode, and copied to CPSR.C on executing an exception return operation in Abort mode.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Set to the value of CPSR.V on taking an exception to Abort mode, and copied to CPSR.V on executing an exception return operation in Abort mode.</description>
        <definition>[28]</definition>
      </bitField>
      <bitField name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="IT_1_0">
        <gui_name language="en">IT_1_0</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField name="J">
        <gui_name language="en">J</gui_name>
        <description language="en">RES0.</description>
        <definition>[24]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="IT_7_2">
        <gui_name language="en">IT_7_2</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Endianness state bit.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_T" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField enumerationId="SPSR_abt_M_4" name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
      <bitField name="M_3_0">
        <gui_name language="en">M_3_0</gui_name>
        <description language="en">AArch32 mode that an exception was taken from.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_fiq.html" name="SPSR_fiq" size="4">
      <gui_name language="en">Saved Program Status Register (FIQ mode)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to FIQ mode.</description>
      <bitField name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Set to the value of CPSR.N on taking an exception to FIQ mode, and copied to CPSR.N on executing an exception return operation in FIQ mode.</description>
        <definition>[31]</definition>
      </bitField>
      <bitField name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Set to the value of CPSR.Z on taking an exception to FIQ mode, and copied to CPSR.Z on executing an exception return operation in FIQ mode.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Set to the value of CPSR.C on taking an exception to FIQ mode, and copied to CPSR.C on executing an exception return operation in FIQ mode.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Set to the value of CPSR.V on taking an exception to FIQ mode, and copied to CPSR.V on executing an exception return operation in FIQ mode.</description>
        <definition>[28]</definition>
      </bitField>
      <bitField name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="IT_1_0">
        <gui_name language="en">IT_1_0</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField name="J">
        <gui_name language="en">J</gui_name>
        <description language="en">RES0.</description>
        <definition>[24]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="IT_7_2">
        <gui_name language="en">IT_7_2</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Endianness state bit.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_T" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField enumerationId="SPSR_fiq_M_4" name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
      <bitField name="M_3_0">
        <gui_name language="en">M_3_0</gui_name>
        <description language="en">AArch32 mode that an exception was taken from.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_irq.html" name="SPSR_irq" size="4">
      <gui_name language="en">Saved Program Status Register (IRQ mode)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to IRQ mode.</description>
      <bitField name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Set to the value of CPSR.N on taking an exception to IRQ mode, and copied to CPSR.N on executing an exception return operation in IRQ mode.</description>
        <definition>[31]</definition>
      </bitField>
      <bitField name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Set to the value of CPSR.Z on taking an exception to IRQ mode, and copied to CPSR.Z on executing an exception return operation in IRQ mode.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Set to the value of CPSR.C on taking an exception to IRQ mode, and copied to CPSR.C on executing an exception return operation in IRQ mode.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Set to the value of CPSR.V on taking an exception to IRQ mode, and copied to CPSR.V on executing an exception return operation in IRQ mode.</description>
        <definition>[28]</definition>
      </bitField>
      <bitField name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="IT_1_0">
        <gui_name language="en">IT_1_0</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField name="J">
        <gui_name language="en">J</gui_name>
        <description language="en">RES0.</description>
        <definition>[24]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="IT_7_2">
        <gui_name language="en">IT_7_2</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Endianness state bit.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_T" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField enumerationId="SPSR_irq_M_4" name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
      <bitField name="M_3_0">
        <gui_name language="en">M_3_0</gui_name>
        <description language="en">AArch32 mode that an exception was taken from.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-spsr_und.html" name="SPSR_und" size="4">
      <gui_name language="en">Saved Program Status Register (Undefined mode)</gui_name>
      <description language="en">Holds the saved process state when an exception is taken to Undefined mode.</description>
      <bitField name="N">
        <gui_name language="en">N</gui_name>
        <description language="en">Set to the value of CPSR.N on taking an exception to Undefined mode, and copied to CPSR.N on executing an exception return operation in Undefined mode.</description>
        <definition>[31]</definition>
      </bitField>
      <bitField name="Z">
        <gui_name language="en">Z</gui_name>
        <description language="en">Set to the value of CPSR.Z on taking an exception to Undefined mode, and copied to CPSR.Z on executing an exception return operation in Undefined mode.</description>
        <definition>[30]</definition>
      </bitField>
      <bitField name="C">
        <gui_name language="en">C</gui_name>
        <description language="en">Set to the value of CPSR.C on taking an exception to Undefined mode, and copied to CPSR.C on executing an exception return operation in Undefined mode.</description>
        <definition>[29]</definition>
      </bitField>
      <bitField name="V">
        <gui_name language="en">V</gui_name>
        <description language="en">Set to the value of CPSR.V on taking an exception to Undefined mode, and copied to CPSR.V on executing an exception return operation in Undefined mode.</description>
        <definition>[28]</definition>
      </bitField>
      <bitField name="Q">
        <gui_name language="en">Q</gui_name>
        <description language="en">Cumulative saturation bit. Set to 1 to indicate that overflow or saturation occurred in some instructions.</description>
        <definition>[27]</definition>
      </bitField>
      <bitField name="IT_1_0">
        <gui_name language="en">IT_1_0</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. See IT[7:2] for explanation of this field.</description>
        <definition>[26:25]</definition>
      </bitField>
      <bitField name="J">
        <gui_name language="en">J</gui_name>
        <description language="en">RES0.</description>
        <definition>[24]</definition>
      </bitField>
      <bitField name="IL">
        <gui_name language="en">IL</gui_name>
        <description language="en">Illegal Execution state bit. Shows the value of PSTATE.IL immediately before the exception was taken.</description>
        <definition>[20]</definition>
      </bitField>
      <bitField name="GE">
        <gui_name language="en">GE</gui_name>
        <description language="en">Greater than or Equal flags, for parallel addition and subtraction.</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField name="IT_7_2">
        <gui_name language="en">IT_7_2</gui_name>
        <description language="en">IT block state bits for the T32 IT (If-Then) instruction. This field must be interpreted in two parts.</description>
        <definition>[15:10]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_E" name="E">
        <gui_name language="en">E</gui_name>
        <description language="en">Endianness state bit.</description>
        <definition>[9]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_A" name="A">
        <gui_name language="en">A</gui_name>
        <description language="en">SError interrupt mask bit.</description>
        <definition>[8]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_I" name="I">
        <gui_name language="en">I</gui_name>
        <description language="en">IRQ mask bit.</description>
        <definition>[7]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_F" name="F">
        <gui_name language="en">F</gui_name>
        <description language="en">FIQ mask bit.</description>
        <definition>[6]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_T" name="T">
        <gui_name language="en">T</gui_name>
        <description language="en">T32 Instruction set state bit. Determines the AArch32 instruction set state that the exception was taken from.</description>
        <definition>[5]</definition>
      </bitField>
      <bitField enumerationId="SPSR_und_M_4" name="M_4">
        <gui_name language="en">M_4</gui_name>
        <description language="en">Execution state that the exception was taken from.</description>
        <definition>[4]</definition>
      </bitField>
      <bitField name="M_3_0">
        <gui_name language="en">M_3_0</gui_name>
        <description language="en">AArch32 mode that an exception was taken from.</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el0.html" name="SP_EL0" size="8">
      <gui_name language="en">Stack Pointer (EL0)</gui_name>
      <description language="en">Holds the stack pointer associated with EL0. At higher Exception levels, this is used as the current stack pointer when the value of SPSel.SP is 0.</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el1.html" name="SP_EL1" size="8">
      <gui_name language="en">Stack Pointer (EL1)</gui_name>
      <description language="en">Holds the stack pointer associated with EL1. When executing at EL1, the value of SPSel.SP determines the current stack pointer...</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el2.html" name="SP_EL2" size="8">
      <gui_name language="en">Stack Pointer (EL2)</gui_name>
      <description language="en">Holds the stack pointer associated with EL2. When executing at EL2, the value of SPSel.SP determines the current stack pointer...</description>
    </register>
    <register access="RW" doclink="CDB://../../../Docs/SysReg_xml-00bet19/xhtml/AArch64-sp_el3.html" name="SP_EL3" size="8">
      <gui_name language="en">Stack Pointer (EL3)</gui_name>
      <description language="en">Holds the stack pointer associated with EL3. When executing at EL3, the value of SPSel.SP determines the current stack pointer...</description>
    </register>
  </register_group>
  <tcf:enumeration name="FPCR_AHP">
    <tcf:enumItem description="IEEE half-precision format selected." name="IEEE_half_precision_format_selected" number="0"/>
    <tcf:enumItem description="Alternative half-precision format selected." name="Alternative_half_precision_format_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_DN">
    <tcf:enumItem description="NaN operands propagate through to the output of a floating-point operation." name="NaN_operands_propagate_through_to_the_output_of_a_floating_point_operation" number="0"/>
    <tcf:enumItem description="Any operation involving one or more NaNs returns the Default NaN." name="Any_operation_involving_one_or_more_NaNs_returns_the_Default_NaN" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_FZ">
    <tcf:enumItem description="Flush-to-zero mode disabled. Behavior of the floating-point system is fully compliant with the IEEE 754 standard." name="Flush_to_zero_mode_disabled" number="0"/>
    <tcf:enumItem description="Flush-to-zero mode enabled." name="Flush_to_zero_mode_enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_RMode">
    <tcf:enumItem description="Round to Nearest (RN) mode" name="Round_to_Nearest_RN_mode" number="0"/>
    <tcf:enumItem description="Round towards Plus Infinity (RP) mode" name="Round_towards_Plus_Infinity_RP_mode" number="1"/>
    <tcf:enumItem description="Round towards Minus Infinity (RM) mode" name="Round_towards_Minus_Infinity_RM_mode" number="2"/>
    <tcf:enumItem description="Round towards Zero (RZ) mode." name="Round_towards_Zero_RZ_mode" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_IDE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.IDC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.IDC bit. The trap handling software can decide whether to set the FPSR.IDC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_IXE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.IXC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.IXC bit. The trap handling software can decide whether to set the FPSR.IXC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_UFE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.UFC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.UFC bit. The trap handling software can decide whether to set the FPSR.UFC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_OFE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.OFC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.OFC bit. The trap handling software can decide whether to set the FPSR.OFC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_DZE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.DZC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.DZC bit. The trap handling software can decide whether to set the FPSR.DZC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCR_IOE">
    <tcf:enumItem description="Untrapped exception handling selected. If the floating-point exception occurs then the FPSR.IOC bit is set to 1." name="Untrapped_exception_handling_selected" number="0"/>
    <tcf:enumItem description="Trapped exception handling selected. If the floating-point exception occurs, the PE does not update the FPSR.IOC bit. The trap handling software can decide whether to set the FPSR.IOC bit to 1." name="Trapped_exception_handling_selected" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL1_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL1_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL1_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL2_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL2_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL2_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL3_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL3_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_EL3_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_E">
    <tcf:enumItem description="Little-endian operation" name="Little_endian_operation" number="0"/>
    <tcf:enumItem description="Big-endian operation." name="Big_endian_operation" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_T">
    <tcf:enumItem description="Taken from A32 state." name="Taken_from_A32_state" number="0"/>
    <tcf:enumItem description="Taken from T32 state." name="Taken_from_T32_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_abt_M_4">
    <tcf:enumItem description="Exception taken from AArch32." name="Exception_taken_from_AArch32" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_E">
    <tcf:enumItem description="Little-endian operation" name="Little_endian_operation" number="0"/>
    <tcf:enumItem description="Big-endian operation." name="Big_endian_operation" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_T">
    <tcf:enumItem description="Taken from A32 state." name="Taken_from_A32_state" number="0"/>
    <tcf:enumItem description="Taken from T32 state." name="Taken_from_T32_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_fiq_M_4">
    <tcf:enumItem description="Exception taken from AArch32." name="Exception_taken_from_AArch32" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_E">
    <tcf:enumItem description="Little-endian operation" name="Little_endian_operation" number="0"/>
    <tcf:enumItem description="Big-endian operation." name="Big_endian_operation" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_T">
    <tcf:enumItem description="Taken from A32 state." name="Taken_from_A32_state" number="0"/>
    <tcf:enumItem description="Taken from T32 state." name="Taken_from_T32_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_irq_M_4">
    <tcf:enumItem description="Exception taken from AArch32." name="Exception_taken_from_AArch32" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_E">
    <tcf:enumItem description="Little-endian operation" name="Little_endian_operation" number="0"/>
    <tcf:enumItem description="Big-endian operation." name="Big_endian_operation" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_A">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_I">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_F">
    <tcf:enumItem description="Exception not masked." name="Exception_not_masked" number="0"/>
    <tcf:enumItem description="Exception masked." name="Exception_masked" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_T">
    <tcf:enumItem description="Taken from A32 state." name="Taken_from_A32_state" number="0"/>
    <tcf:enumItem description="Taken from T32 state." name="Taken_from_T32_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="SPSR_und_M_4">
    <tcf:enumItem description="Exception taken from AArch32." name="Exception_taken_from_AArch32" number="1"/>
  </tcf:enumeration>
</register_list>
