<?xml version="1.0" encoding="UTF-8"?>
<register_list name="System" xmlns="http://www.arm.com/core_reg" xmlns:tcf="http://com.arm.targetconfigurationeditor" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd">
  <!--PLEASE DO NOT EDIT THIS FILE - Generated from JSON register descriptions-->
  <register_group name="FPE">
    <gui_name language="en">FPE</gui_name>
    <description language="en">Floating Point Control Registers</description>
    <register access="RW" name="FPCAR_S" offset="0xE000EF38" size="4">
      <gui_name language="en">Floating-Point Context Address Register</gui_name>
      <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
      <bitField conditional="false" name="ADDRESS">
        <gui_name language="en">ADDRESS</gui_name>
        <description language="en">Address</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPCAR_NS" offset="0xE000EF38" size="4">
      <gui_name language="en">Floating-Point Context Address Register</gui_name>
      <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
      <bitField conditional="false" name="ADDRESS">
        <gui_name language="en">ADDRESS</gui_name>
        <description language="en">Address</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPCAR" offset="0xE000EF38" size="4">
      <gui_name language="en">Floating-Point Context Address Register</gui_name>
      <description language="en">Holds the location of the unpopulated floating-point register space allocated on an exception stack frame</description>
      <bitField conditional="false" name="ADDRESS">
        <gui_name language="en">ADDRESS</gui_name>
        <description language="en">Address</description>
        <definition>[31:3]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPCCR_S" offset="0xE000EF34" size="4">
      <gui_name language="en">Floating-Point Context Control Register</gui_name>
      <description language="en">Holds control data for the Floating Point Unit</description>
      <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
        <gui_name language="en">ASPEN</gui_name>
        <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
        <gui_name language="en">LSPEN</gui_name>
        <description language="en">Enables lazy context save of FP state</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
        <gui_name language="en">LSPENS</gui_name>
        <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
        <gui_name language="en">CLRONRET</gui_name>
        <description language="en">Clear floating point caller saved registers on exception return</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
        <gui_name language="en">CLRONRETS</gui_name>
        <description language="en">CLRONRET Secure only</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
        <gui_name language="en">TS</gui_name>
        <description language="en">Treat FP registers as Secure enable</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
        <gui_name language="en">UFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
        <definition>[10]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
        <gui_name language="en">SPLIMVIOL</gui_name>
        <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
        <definition>[9]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
        <gui_name language="en">MONRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
        <definition>[8]</definition>
      </bitField>
      <bitField conditional="false" name="SFRDY">
        <gui_name language="en">SFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[7]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
        <gui_name language="en">BFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
        <definition>[6]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
        <gui_name language="en">MMRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
        <definition>[5]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
        <gui_name language="en">HFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
        <definition>[4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
        <gui_name language="en">THREAD</gui_name>
        <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
        <gui_name language="en">USER</gui_name>
        <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
        <gui_name language="en">LSPACT</gui_name>
        <description language="en">Indicates whether lazy preservation of the FP state is active</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPCCR_NS" offset="0xE000EF34" size="4">
      <gui_name language="en">Floating-Point Context Control Register</gui_name>
      <description language="en">Holds control data for the Floating Point Unit</description>
      <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
        <gui_name language="en">ASPEN</gui_name>
        <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
        <gui_name language="en">LSPEN</gui_name>
        <description language="en">Enables lazy context save of FP state</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
        <gui_name language="en">LSPENS</gui_name>
        <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
        <gui_name language="en">CLRONRET</gui_name>
        <description language="en">Clear floating point caller saved registers on exception return</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
        <gui_name language="en">CLRONRETS</gui_name>
        <description language="en">CLRONRET Secure only</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
        <gui_name language="en">TS</gui_name>
        <description language="en">Treat FP registers as Secure enable</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
        <gui_name language="en">UFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
        <definition>[10]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
        <gui_name language="en">SPLIMVIOL</gui_name>
        <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
        <definition>[9]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
        <gui_name language="en">MONRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
        <definition>[8]</definition>
      </bitField>
      <bitField conditional="false" name="SFRDY">
        <gui_name language="en">SFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[7]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
        <gui_name language="en">BFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
        <definition>[6]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
        <gui_name language="en">MMRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
        <definition>[5]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
        <gui_name language="en">HFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
        <definition>[4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
        <gui_name language="en">THREAD</gui_name>
        <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
        <gui_name language="en">USER</gui_name>
        <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
        <gui_name language="en">LSPACT</gui_name>
        <description language="en">Indicates whether lazy preservation of the FP state is active</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPCCR" offset="0xE000EF34" size="4">
      <gui_name language="en">Floating-Point Context Control Register</gui_name>
      <description language="en">Holds control data for the Floating Point Unit</description>
      <bitField conditional="false" enumerationId="FPCCR_ASPEN" name="ASPEN">
        <gui_name language="en">ASPEN</gui_name>
        <description language="en">When this bit is set to 1, execution of a floating-point instruction sets the CONTROL.FPCA bit to 1</description>
        <definition>[31]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPEN" name="LSPEN">
        <gui_name language="en">LSPEN</gui_name>
        <description language="en">Enables lazy context save of FP state</description>
        <definition>[30]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPENS" name="LSPENS">
        <gui_name language="en">LSPENS</gui_name>
        <description language="en">This bit controls whether the LSPEN bit is writeable from the Non-secure state. This behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[29]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRET" name="CLRONRET">
        <gui_name language="en">CLRONRET</gui_name>
        <description language="en">Clear floating point caller saved registers on exception return</description>
        <definition>[28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_CLRONRETS" name="CLRONRETS">
        <gui_name language="en">CLRONRETS</gui_name>
        <description language="en">CLRONRET Secure only</description>
        <definition>[27]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_TS" name="TS">
        <gui_name language="en">TS</gui_name>
        <description language="en">Treat FP registers as Secure enable</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_UFRDY" name="UFRDY">
        <gui_name language="en">UFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the UsageFault exception to pending</description>
        <definition>[10]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_SPLIMVIOL" name="SPLIMVIOL">
        <gui_name language="en">SPLIMVIOL</gui_name>
        <description language="en">This bit is banked between the Security states and indicates whether the FP context violates the stack pointer limit that was active when lazy state preservation was activated. SPLIMVIOL modifies the lazy FP state preservation behaviour</description>
        <definition>[9]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MONRDY" name="MONRDY">
        <gui_name language="en">MONRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the DebugMonitor exception to pending</description>
        <definition>[8]</definition>
      </bitField>
      <bitField conditional="false" name="SFRDY">
        <gui_name language="en">SFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the SecureFault exception to pending. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state</description>
        <definition>[7]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_BFRDY" name="BFRDY">
        <gui_name language="en">BFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the BusFault exception to pending</description>
        <definition>[6]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_MMRDY" name="MMRDY">
        <gui_name language="en">MMRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the MemManage exception to pending</description>
        <definition>[5]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_HFRDY" name="HFRDY">
        <gui_name language="en">HFRDY</gui_name>
        <description language="en">Indicates whether the software executing when the processor allocated the FP stack frame was able to set the HardFault exception to pending</description>
        <definition>[4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_THREAD" name="THREAD">
        <gui_name language="en">THREAD</gui_name>
        <description language="en">Indicates the processor mode when it allocated the FP stack frame</description>
        <definition>[3]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_S" name="S">
        <gui_name language="en">S</gui_name>
        <description language="en">Security status of the FP context. This bit is only present in the Secure version of the register, and behaves as RAZ/WI when accessed from the Non-secure state. This bit is updated whenever lazy state preservation is activated, or when a floating point instruction is executed</description>
        <definition>[2]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_USER" name="USER">
        <gui_name language="en">USER</gui_name>
        <description language="en">Indicates the privilege level of the software executing when the processor allocated the FP stack frame</description>
        <definition>[1]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="FPCCR_LSPACT" name="LSPACT">
        <gui_name language="en">LSPACT</gui_name>
        <description language="en">Indicates whether lazy preservation of the FP state is active</description>
        <definition>[0]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPDSCR_S" offset="0xE000EF3C" size="4">
      <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
      <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
      <bitField conditional="false" name="AHP">
        <gui_name language="en">AHP</gui_name>
        <description language="en">Alternative half-precision</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" name="DN">
        <gui_name language="en">DN</gui_name>
        <description language="en">Default NaN</description>
        <definition>[25]</definition>
      </bitField>
      <bitField conditional="false" name="FZ">
        <gui_name language="en">FZ</gui_name>
        <description language="en">Flush-to-zero</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="RMode">
        <gui_name language="en">RMode</gui_name>
        <description language="en">Rounding mode</description>
        <definition>[23:22]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPDSCR_NS" offset="0xE000EF3C" size="4">
      <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
      <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
      <bitField conditional="false" name="AHP">
        <gui_name language="en">AHP</gui_name>
        <description language="en">Alternative half-precision</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" name="DN">
        <gui_name language="en">DN</gui_name>
        <description language="en">Default NaN</description>
        <definition>[25]</definition>
      </bitField>
      <bitField conditional="false" name="FZ">
        <gui_name language="en">FZ</gui_name>
        <description language="en">Flush-to-zero</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="RMode">
        <gui_name language="en">RMode</gui_name>
        <description language="en">Rounding mode</description>
        <definition>[23:22]</definition>
      </bitField>
    </register>
    <register access="RW" name="FPDSCR" offset="0xE000EF3C" size="4">
      <gui_name language="en">Floating-Point Default Status Control Register</gui_name>
      <description language="en">Holds the default values for the floating-point status control data that the PE assigns to the FPSCR when it creates a new floating-point context</description>
      <bitField conditional="false" name="AHP">
        <gui_name language="en">AHP</gui_name>
        <description language="en">Alternative half-precision</description>
        <definition>[26]</definition>
      </bitField>
      <bitField conditional="false" name="DN">
        <gui_name language="en">DN</gui_name>
        <description language="en">Default NaN</description>
        <definition>[25]</definition>
      </bitField>
      <bitField conditional="false" name="FZ">
        <gui_name language="en">FZ</gui_name>
        <description language="en">Flush-to-zero</description>
        <definition>[24]</definition>
      </bitField>
      <bitField conditional="false" name="RMode">
        <gui_name language="en">RMode</gui_name>
        <description language="en">Rounding mode</description>
        <definition>[23:22]</definition>
      </bitField>
    </register>
    <register access="RO" name="MVFR0" offset="0xE000EF40" size="4">
      <gui_name language="en">Media and VFP Feature Register 0</gui_name>
      <description language="en">Describes the features provided by the Floating-point Extension</description>
      <bitField conditional="false" enumerationId="MVFR0_FPRound" name="FPRound">
        <gui_name language="en">FPRound</gui_name>
        <description language="en">Floating-point rounding modes</description>
        <definition>[31:28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR0_FPSqrt" name="FPSqrt">
        <gui_name language="en">FPSqrt</gui_name>
        <description language="en">Floating-point square root</description>
        <definition>[23:20]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR0_FPDivide" name="FPDivide">
        <gui_name language="en">FPDivide</gui_name>
        <description language="en">Floating-point divide</description>
        <definition>[19:16]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR0_FPDP" name="FPDP">
        <gui_name language="en">FPDP</gui_name>
        <description language="en">Floating-point double-precision</description>
        <definition>[11:8]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR0_FPSP" name="FPSP">
        <gui_name language="en">FPSP</gui_name>
        <description language="en">Floating-point single-precision</description>
        <definition>[7:4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR0_SIMDReg" name="SIMDReg">
        <gui_name language="en">SIMDReg</gui_name>
        <description language="en">SIMD registers</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RO" name="MVFR1" offset="0xE000EF44" size="4">
      <gui_name language="en">Media and VFP Feature Register 1</gui_name>
      <description language="en">Describes the features provided by the Floating-point Extension</description>
      <bitField conditional="false" enumerationId="MVFR1_FMAC" name="FMAC">
        <gui_name language="en">FMAC</gui_name>
        <description language="en">Fused multiply accumulate</description>
        <definition>[31:28]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR1_FPHP" name="FPHP">
        <gui_name language="en">FPHP</gui_name>
        <description language="en">Floating-point half-precision</description>
        <definition>[27:24]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR1_FPDNaN" name="FPDNaN">
        <gui_name language="en">FPDNaN</gui_name>
        <description language="en">Floating-point default NaN</description>
        <definition>[7:4]</definition>
      </bitField>
      <bitField conditional="false" enumerationId="MVFR1_FPFtZ" name="FPFtZ">
        <gui_name language="en">FPFtZ</gui_name>
        <description language="en">Floating-point flush-to-zero</description>
        <definition>[3:0]</definition>
      </bitField>
    </register>
    <register access="RO" name="MVFR2" offset="0xE000EF48" size="4">
      <gui_name language="en">Media and VFP Feature Register 2</gui_name>
      <description language="en">Describes the features provided by the Floating-point Extension</description>
      <bitField conditional="false" enumerationId="MVFR2_FPMisc" name="FPMisc">
        <gui_name language="en">FPMisc</gui_name>
        <description language="en">Floating-point miscellaneous</description>
        <definition>[7:4]</definition>
      </bitField>
    </register>
  </register_group>
  <tcf:enumeration name="FPCCR_ASPEN">
    <tcf:enumItem description="Executing an FP instruction has no effect on CONTROL.FPCA" name="Executing_an_FP_instruction_has_no_effect_on_CONTROL" number="0"/>
    <tcf:enumItem description="Executing an FP instruction sets CONTROL.FPCA to 1" name="Executing_an_FP_instruction_sets_CONTROL" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_LSPEN">
    <tcf:enumItem description="Disable automatic lazy context save" name="Disable_automatic_lazy_context_save" number="0"/>
    <tcf:enumItem description="Enable automatic lazy context save" name="Enable_automatic_lazy_context_save" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_LSPENS">
    <tcf:enumItem description="LSPEN is readable and writeable from both Security states" name="LSPEN_is_readable_and_writeable_from_both_Security_states" number="0"/>
    <tcf:enumItem description="LSPEN is readable from both Security states, but writes to LSPEN are ignored from the Non-secure state" name="LSPEN_is_readable_from_both_Security_states_but_writes_to_LSPEN_are_ignored_from_the_Non_secure_state" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_CLRONRET">
    <tcf:enumItem description="Disabled" name="Disabled" number="0"/>
    <tcf:enumItem description="Enabled" name="Enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_CLRONRETS">
    <tcf:enumItem description="The CLRONRET field is accessibly from both Security states" name="The_CLRONRET_field_is_accessibly_from_both_Security_states" number="0"/>
    <tcf:enumItem description="The Non-secure view of the CLRONRET field is read only" name="The_Non_secure_view_of_the_CLRONRET_field_is_read_only" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_TS">
    <tcf:enumItem description="Disabled" name="Disabled" number="0"/>
    <tcf:enumItem description="Enabled" name="Enabled" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_UFRDY">
    <tcf:enumItem description="Not able to set the UsageFault exception to pending" name="Not_able_to_set_the_UsageFault_exception_to_pending" number="0"/>
    <tcf:enumItem description="Able to set the UsageFault exception to pending" name="Able_to_set_the_UsageFault_exception_to_pending" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_SPLIMVIOL">
    <tcf:enumItem description="The existing behavior is retained" name="The_existing_behavior_is_retained" number="0"/>
    <tcf:enumItem description="The memory accesses associated with the floating point state preservation are not performed. However if the floating point state is secure and FPCCR.TS is set to 1 the registers are still zeroed and the floating point state is lost" name="The_memory_accesses_associated_with_the_floating_point_state_preservation_are_not_performed" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_MONRDY">
    <tcf:enumItem description="Not able to set the DebugMonitor exception to pending" name="Not_able_to_set_the_DebugMonitor_exception_to_pending" number="0"/>
    <tcf:enumItem description="Able to set the DebugMonitor exception to pending" name="Able_to_set_the_DebugMonitor_exception_to_pending" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_BFRDY">
    <tcf:enumItem description="Not able to set the BusFault exception to pending" name="Not_able_to_set_the_BusFault_exception_to_pending" number="0"/>
    <tcf:enumItem description="Able to set the BusFault exception to pending" name="Able_to_set_the_BusFault_exception_to_pending" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_MMRDY">
    <tcf:enumItem description="Not able to set the MemManage exception to pending" name="Not_able_to_set_the_MemManage_exception_to_pending" number="0"/>
    <tcf:enumItem description="Able to set the MemManage exception to pending" name="Able_to_set_the_MemManage_exception_to_pending" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_HFRDY">
    <tcf:enumItem description="Not able to set the HardFault exception to pending" name="Not_able_to_set_the_HardFault_exception_to_pending" number="0"/>
    <tcf:enumItem description="Able to set the HardFault exception to pending" name="Able_to_set_the_HardFault_exception_to_pending" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_THREAD">
    <tcf:enumItem description="Handler mode" name="Handler_mode" number="0"/>
    <tcf:enumItem description="Thread mode" name="Thread_mode" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_S">
    <tcf:enumItem description="Indicates the FP context belongs to the non-secure state" name="Indicates_the_FP_context_belongs_to_the_non_secure_state" number="0"/>
    <tcf:enumItem description="Indicates the FP context belongs to the secure state" name="Indicates_the_FP_context_belongs_to_the_secure_state" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_USER">
    <tcf:enumItem description="Privileged" name="Privileged" number="0"/>
    <tcf:enumItem description="Unprivileged" name="Unprivileged" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="FPCCR_LSPACT">
    <tcf:enumItem description="Lazy state preservation is not active" name="Lazy_state_preservation_is_not_active" number="0"/>
    <tcf:enumItem description="Lazy state preservation is active" name="Lazy_state_preservation_is_active" number="1"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_FPRound">
    <tcf:enumItem description="All rounding modes supported" name="All_rounding_modes_supported" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_FPSqrt">
    <tcf:enumItem description="Supported" name="Supported" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_FPDivide">
    <tcf:enumItem description="Supported" name="Supported" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_FPDP">
    <tcf:enumItem description="Not supported" name="Not_supported" number="0"/>
    <tcf:enumItem description="Supported" name="Supported" number="2"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="3"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_FPSP">
    <tcf:enumItem description="Supported" name="Supported" number="2"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR0_SIMDReg">
    <tcf:enumItem description="16 × 64-bit registers" name="_16_64_bit_registers" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR1_FMAC">
    <tcf:enumItem description="Implemented" name="Implemented" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR1_FPHP">
    <tcf:enumItem description="Half-precision to single-precision implemented" name="Half_precision_to_single_precision_implemented" number="1"/>
    <tcf:enumItem description="Half-precision to single and double-precision implemented" name="Half_precision_to_single_and_double_precision_implemented" number="2"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR1_FPDNaN">
    <tcf:enumItem description="Propagation of NaN values supported" name="Propagation_of_NaN_values_supported" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR1_FPFtZ">
    <tcf:enumItem description="Full denormalized numbers arithmetic supported" name="Full_denormalized_numbers_arithmetic_supported" number="1"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
  <tcf:enumeration name="MVFR2_FPMisc">
    <tcf:enumItem description="Selection, directed conversion to integer, VMINNM and VMAXNM supported" name="Selection_directed_conversion_to_integer_VMINNM_and_VMAXNM_supported" number="4"/>
    <tcf:enumItem description="Reserved" name="Reserved" number="0"/>
  </tcf:enumeration>
</register_list>