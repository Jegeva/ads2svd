<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<register_list
    name="CP15"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.arm.com/core_reg"
    xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd"
    xmlns:tcf="http://com.arm.targetconfigurationeditor">
    <register_group name="Control">
        <gui_name language="en">Control</gui_name>
        <description language="en">System Control and Configuration</description>
        <register access="RW" name="SCTLR" size="4">
            <gui_name language="en">System Control</gui_name>
            <alias_name>CP15_SCTLR</alias_name>
            <device_name type="rvi">CP15_SCTLR</device_name>
            <device_name type="cadi">SCTLR</device_name>
            <description language="en">Provides control and configuration of:
<!--                                --> - memory alignment and endianness
<!--                                --> - memory protection and fault behavior
<!--                                --> - MPU and cache enables
<!--                                --> - interrupts and behavior of interrupt latency
<!--                                --> - location for exception vectors
<!--                                --> - program flow prediction</description>
            <bitField conditional="false" name="IE" enumerationId="CP15_CONTROL_IE" access="RO">
                <gui_name language="en">IE</gui_name>
                <description language="en">Identifies little or big instruction endianness in use</description>
                <definition>[31]</definition>
            </bitField>
            <bitField conditional="false" name="TE" enumerationId="CP15_CONTROL_TE">
                <gui_name language="en">TE</gui_name>
                <description language="en">Thumb exception enable</description>
                <definition>[30]</definition>
            </bitField>
            <bitField conditional="false" name="NMFI" enumerationId="CP15_CONTROL_NMFI" access="RO">
                <gui_name language="en">NMFI</gui_name>
                <description language="en">NMFI, non-maskable fast interrupt enable.</description>
                <definition>[27]</definition>
            </bitField>
            <bitField conditional="false" name="EE" enumerationId="GENERIC_CLEARED_SET">
                <gui_name language="en">EE</gui_name>
                <description language="en">Determines the state of the CPSR E bit on an exception</description>
                <definition>[25]</definition>
            </bitField>
            <bitField conditional="false" name="FI" enumerationId="CP15_CONTROL_FI">
                <gui_name language="en">FI</gui_name>
                <description language="en">Fast Interrupts configuration enable bit</description>
                <definition>[21]</definition>
            </bitField>
            <bitField conditional="false" name="DZ" enumerationId="CP15_CONTROL_DZ">
                <gui_name language="en">DZ</gui_name>
                <description language="en">Divide by Zero fault enable bit</description>
                <definition>[19]</definition>
            </bitField>
            <bitField conditional="false" name="BR" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">BR</gui_name>
                <description language="en">MPU background region enable</description>
                <definition>[17]</definition>
            </bitField>
            <bitField conditional="false" name="RR" enumerationId="CP15_CONTROL_RR">
                <gui_name language="en">RR</gui_name>
                <description language="en">Selects the replacement strategy for caches and BTAC</description>
                <definition>[14]</definition>
            </bitField>
            <bitField conditional="false" name="V" enumerationId="CP15_CONTROL_V">
                <gui_name language="en">V</gui_name>
                <description language="en">Determines the location of exception vectors</description>
                <definition>[13]</definition>
            </bitField>
            <bitField conditional="false" name="I" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">I</gui_name>
                <description language="en">Enables L1 instruction cache</description>
                <definition>[12]</definition>
            </bitField>
            <bitField conditional="false" name="Z" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">Z</gui_name>
                <description language="en">Enables program flow prediction</description>
                <definition>[11]</definition>
            </bitField>
            <bitField conditional="false" name="SW" enumerationId="CP15_CONTROL_SW">
                <gui_name language="en">SW</gui_name>
                <description language="en">SWP/SWPB enable bit</description>
                <definition>[10]</definition>
            </bitField>
            <bitField conditional="false" name="C" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">C</gui_name>
                <description language="en">Determines if data can be cached at any available cache level</description>
                <definition>[2]</definition>
            </bitField>
            <bitField conditional="false" name="A" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">A</gui_name>
                <description language="en">Enables strict alignment of data to detect alignment faults in data accesses</description>
                <definition>[1]</definition>
            </bitField>
            <bitField conditional="false" name="M" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">M</gui_name>
                <description language="en">Enables the MPU</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="ACTLR" size="4">
            <gui_name language="en">Auxiliary Control</gui_name>
            <alias_name>CP15_ACTLR</alias_name>
            <device_name type="rvi">CP15_ACTLR</device_name>
            <device_name type="cadi">ACTLR</device_name>
            <description language="en">The Auxiliary Control Register controls:
<!--                                --> - Quality of Service (QoS) settings
<!--                                --> - ECC checking, if implemented
<!--                                --> - allocation in one way
<!--                                --> - automatic data cache coherency
<!--                                --> - speculative accesses on AXI
<!--                                --> - broadcast of cache, branch predictor, and maintenance operations
<!--                                --> - enabling of the Memory Reconstruction Port (MRP), if implemented</description>
            <bitField conditional="false" name="QOS" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">QoS</gui_name>
                <description language="en">Quality of Service bit</description>
                <definition>[11]</definition>
            </bitField>
            <bitField conditional="false" name="ECCITCM" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">ECC on ITCM</gui_name>
                <description language="en">Support for ECC on ITCM, if implemented</description>
                <definition>[10]</definition>
            </bitField>
            <bitField conditional="false" name="ECCDTCM" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">ECC on caches and DTCM</gui_name>
                <description language="en">Support for ECC on instruction and data cache and DTCM, if implemented</description>
                <definition>[9]</definition>
            </bitField>
            <bitField conditional="false" name="FDSNS">
                <gui_name language="en">Alloc in one way</gui_name>
                <description language="en">Enable allocation in one cache way only</description>
                <definition>[8]</definition>
            </bitField>
            <bitField conditional="false" name="SMP" enumerationId="CP15_AUXILIARY_CONTROL_SMP">
                <gui_name language="en">SMP</gui_name>
                <description language="en">Signals if the processor is taking part in coherency or not</description>
                <definition>[6]</definition>
            </bitField>
            <bitField conditional="false" name="MRPEN" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">MRP enable</gui_name>
                <description language="en">MRP enable bit</description>
                <definition>[3]</definition>
            </bitField>
            <bitField conditional="false" name="FW" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">FW</gui_name>
                <description language="en">Cache maintenance broadcast</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="CPACR" size="4">
            <gui_name language="en">Coprocessor Access Control</gui_name>
            <alias_name>CP15_CPACR</alias_name>
            <device_name type="rvi">CP15_CPACR</device_name>
            <device_name type="cadi">CPACR</device_name>
            <description language="en">Enables software detection and sets access rights for coprocessors CP0-CP13</description>
            <bitField conditional="false" name="ASEDIS" enumerationId="GENERIC_ENABLED_DISABLED">
                <gui_name language="en">ASEDIS</gui_name>
                <description language="en">Enable Advanced SIMD Extension functionality</description>
                <definition>[31]</definition>
            </bitField>
            <bitField conditional="false" name="D32DIS" enumerationId="GENERIC_ENABLED_DISABLED">
                <gui_name language="en">D32DIS</gui_name>
                <description language="en">Enable use of D16-D31 of the VFP register file</description>
                <definition>[30]</definition>
            </bitField>
            <bitField conditional="false" name="CP11" enumerationId="CP15_COPROCESSOR_ACCESS_CONTROL">
                <gui_name language="en">CP11</gui_name>
                <description language="en">Access permissions for coprocessor 11</description>
                <definition>[23:22]</definition>
            </bitField>
            <bitField conditional="false" name="CP10" enumerationId="CP15_COPROCESSOR_ACCESS_CONTROL">
                <gui_name language="en">CP10</gui_name>
                <description language="en">Access permissions for coprocessor 10</description>
                <definition>[21:20]</definition>
            </bitField>
        </register>
        <register access="RW" name="DFSR" size="4">
            <gui_name language="en">Data Fault Status</gui_name>
            <alias_name>CP15_DFSR</alias_name>
            <device_name type="rvi">CP15_DFSR</device_name>
            <device_name type="cadi">DFSR</device_name>
            <description language="en">The DFSR holds status information about the last data fault</description>
            <bitField conditional="false" name="CM" enumerationId="GENERIC_FALSE_TRUE">
                <gui_name language="en">CM</gui_name>
                <description language="en">Indicates a cache maintenance fault</description>
                <definition>[13]</definition>
            </bitField>
            <bitField conditional="false" name="EXT" enumerationId="GENERIC_FALSE_TRUE">
                <gui_name language="en">ExT</gui_name>
                <description language="en">Indicates an external abort type</description>
                <definition>[12]</definition>
            </bitField>
            <bitField conditional="false" name="WNR" enumerationId="CP15_DFSR_RNW">
                <gui_name language="en">WnR</gui_name>
                <description language="en">Indicates whether a read or write access caused an abort</description>
                <definition>[11]</definition>
            </bitField>
            <bitField conditional="false" name="FS" enumerationId="CP15_DFSR_FS">
                <gui_name language="en">FS</gui_name>
                <description language="en">Fault status bits</description>
                <definition>[3:0][10]</definition>
            </bitField>
            <bitField conditional="false" name="LPAE">
                <gui_name language="en">LPAE</gui_name>
                <description language="en">If LPA Extension is implemented, this bit is cleared to indicate use of Short-descriptor TT formats on Data Aborts</description>
                <definition>[9]</definition>
            </bitField>
            <bitField conditional="false" name="DOMAIN">
                <gui_name language="en">Domain</gui_name>
                <description language="en">The domain of the fault address (deprecated)</description>
                <definition>[7:4]</definition>
            </bitField>
        </register>
        <register access="RW" name="IFSR" size="4">
            <gui_name language="en">Instruction Fault Status</gui_name>
            <alias_name>CP15_IFSR</alias_name>
            <device_name type="rvi">CP15_IFSR</device_name>
            <device_name type="cadi">IFSR</device_name>
            <description language="en">The IFSR holds status information about the last instruction fault</description>
            <bitField conditional="false" name="EXT" enumerationId="GENERIC_FALSE_TRUE">
                <gui_name language="en">ExT</gui_name>
                <description language="en">Indicates an external abort type</description>
                <definition>[12]</definition>
            </bitField>
            <bitField conditional="false" name="FS" enumerationId="CP15_DFSR_FS">
                <gui_name language="en">FS</gui_name>
                <description language="en">Fault status bits</description>
                <definition>[3:0][10]</definition>
            </bitField>
            <bitField conditional="false" name="LPAE">
                <gui_name language="en">LPAE</gui_name>
                <description language="en">If LPA Extension is implemented, this bit is cleared to indicate use of Short-descriptor TT formats on Data Aborts</description>
                <definition>[9]</definition>
            </bitField>
        </register>
        <register access="RW" name="DFAR" size="4">
            <gui_name language="en">Data Fault Address</gui_name>
            <alias_name>CP15_DFAR</alias_name>
            <device_name type="rvi">CP15_DFAR</device_name>
            <device_name type="cadi">DFAR</device_name>
            <description language="en">The DFAR holds the faulting address that caused a synchronous Data Abort exception</description>
        </register>
        <register access="RW" name="IFAR" size="4">
            <gui_name language="en">Instruction Fault Address</gui_name>
            <alias_name>CP15_IFAR</alias_name>
            <device_name type="rvi">CP15_IFAR</device_name>
            <device_name type="cadi">IFAR</device_name>
            <description language="en">The IFAR holds the address of the access that caused a synchronous Prefetch Abort exception</description>
        </register>
        <register access="RW" name="PCR" size="4">
            <gui_name language="en">Power Control</gui_name>
            <alias_name>CP15_PCR</alias_name>
            <device_name type="rvi">CP15_PCR</device_name>
            <device_name type="cadi">PCR</device_name>
            <description language="en">Enables setting of clock latency and dynamic clock gating</description>
            <bitField conditional="false" name="MAXCLKLAT">
                <gui_name language="en">Max clock latency</gui_name>
                <description language="en">Samples the value present on the MAXCLKLATENCY pins on exit from reset</description>
                <definition>[10:8]</definition>
            </bitField>
            <bitField conditional="false" name="DYNCLKGATEN" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">Dynamic clock gating</gui_name>
                <description language="en">Enables or disables dynamic clock gating</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="CTDOR" size="4">
            <gui_name language="en">Cache and TCM Debug Operation</gui_name>
            <alias_name>CP15_CTDOR</alias_name>
            <device_name type="rvi">CP15_CTDOR</device_name>
            <device_name type="cadi">CTDOR</device_name>
            <description language="en">Describes the access operation required for cache and TCM debug</description>
        </register>
        <register access="RW" name="RADRLO" size="4">
            <gui_name language="en">RAM Access Data [31:0]</gui_name>
            <alias_name>CP15_RADRLO</alias_name>
            <device_name type="rvi">CP15_RADRLO</device_name>
            <device_name type="cadi">RADRLO</device_name>
            <description language="en">Reads the data value for the debug operation or sets the value to be written by the direct RAM access operation</description>
        </register>
        <register access="RW" name="RADRHI" size="4">
            <gui_name language="en">RAM Access Data [63:32]</gui_name>
            <alias_name>CP15_RADRHI</alias_name>
            <device_name type="rvi">CP15_RADRHI</device_name>
            <device_name type="cadi">RADRHI</device_name>
            <description language="en">Reads the data value for the debug operation or sets the value to be written by the direct RAM access operation</description>
        </register>
        <register access="RW" name="RAECCR" size="4">
            <gui_name language="en">RAM Access ECC</gui_name>
            <alias_name>CP15_RAECCR</alias_name>
            <device_name type="rvi">CP15_RAECCR</device_name>
            <device_name type="cadi">RAECCR</device_name>
            <description language="en">Reads the ECC chunk selected by the operation or sets the ECC chunk to be written by the direct RAM access operation</description>
        </register>
        <register access="RO" name="CBAR" size="4">
            <gui_name language="en">Configuration Base Address</gui_name>
            <alias_name>CP15_CBAR</alias_name>
            <device_name type="rvi">CP15_CBAR</device_name>
            <device_name type="cadi">CBAR</device_name>
            <description language="en">Holds the physical base address of the memory-mapped Interrupt Controller registers</description>
        </register>
    </register_group>
</register_list>

