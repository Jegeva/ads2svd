<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<register_list
    name="CP15"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.arm.com/core_reg"
    xsi:schemaLocation="http://www.arm.com/core_reg ../../../Schemas/core_register_definition.xsd"
    xmlns:tcf="http://com.arm.targetconfigurationeditor">
    <register_group name="MPU">
        <gui_name language="en">MPU</gui_name>
        <description language="en">Memory Protection Unit</description>
        <register access="RO" name="MPU_TYPE" size="4">
            <gui_name language="en">MPU Type</gui_name>
            <alias_name>CP15_MPU_TYPE</alias_name>
            <device_name type="rvi">CP15_MPU_TYPE</device_name>
            <device_name type="cadi">CP15_MPU_TYPE</device_name>
            <description language="en">Holds the value for the number of instruction and data memory regions implemented in the processor</description>
            <bitField conditional="false" name="Instruction_region">
                <gui_name language="en">Instruction region</gui_name>
                <description language="en">Specifies the number of instruction memory regions</description>
                <definition>[23:16]</definition>
            </bitField>
            <bitField conditional="false" name="Data_region">
                <gui_name language="en">Data region</gui_name>
                <description language="en">Specifies the number of data memory regions</description>
                <definition>[15:8]</definition>
            </bitField>
            <bitField conditional="false" name="S" enumerationId="GENERIC_UNIFIED_HARVARD">
                <gui_name language="en">S</gui_name>
                <description language="en">Specifies the type of MPU regions in the processor</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="DFSR" size="4">
            <gui_name language="en">Data Fault Status</gui_name>
            <alias_name>CP15_DFSR</alias_name>
            <device_name type="rvi">CP15_DFSR</device_name>
            <device_name type="cadi">CP15_DFSR</device_name>
            <description language="en">Holds the source of the last data fault</description>
            <bitField conditional="false" name="RW" enumerationId="CP15_DFSR_RW">
                <gui_name language="en">RW</gui_name>
                <description language="en">Indicates whether a read or write access caused an abort</description>
                <definition>[11]</definition>
            </bitField>
            <bitField conditional="false" name="STATUS" enumerationId="CP15_DFSR_STATUS">
                <gui_name language="en">STATUS</gui_name>
                <description language="en">Indicates the type of fault generated</description>
                <definition>[12][10][3:0]</definition>
            </bitField>
        </register>
        <register access="RW" name="IFSR" size="4">
            <gui_name language="en">Instruction Fault Status</gui_name>
            <alias_name>CP15_IFSR</alias_name>
            <device_name type="rvi">CP15_IFSR</device_name>
            <device_name type="cadi">CP15_IFSR</device_name>
            <description language="en">Holds the source of the last instruction fault</description>
            <bitField conditional="false" name="STATUS" enumerationId="CP15_IFSR_STATUS">
                <gui_name language="en">STATUS</gui_name>
                <description language="en">Indicates the type of fault generated</description>
                <definition>[12][10][3:0]</definition>
            </bitField>
        </register>
        <register access="RW" name="DFAR" size="4">
            <gui_name language="en">Fault Address</gui_name>
            <alias_name>CP15_DFAR</alias_name>
            <device_name type="rvi">CP15_DFAR</device_name>
            <device_name type="cadi">CP15_DFAR</device_name>
            <description language="en">Holds the address of the fault when a precise abort occurs</description>
        </register>
        <register access="RW" name="WFAR" size="4">
            <gui_name language="en">Watchpoint Fault Address</gui_name>
            <alias_name>CP15_WFAR</alias_name>
            <device_name type="rvi">CP15_WFAR</device_name>
            <device_name type="cadi">CP15_WFAR</device_name>
            <description language="en">Hold the address of the instruction that causes the watch-point</description>
        </register>
        <register access="RW" name="IFAR" size="4">
            <gui_name language="en">Instruction Fault Address</gui_name>
            <alias_name>CP15_IFAR</alias_name>
            <device_name type="rvi">CP15_IFAR</device_name>
            <device_name type="cadi">CP15_IFAR</device_name>
            <description language="en">Holds the address of instruction that causes a prefetch abort</description>
        </register>
        <register access="RW" name="MPU_REGION_BASE" size="4">
            <gui_name language="en">Region Base Address</gui_name>
            <alias_name>CP15_MPU_REGION_BASE</alias_name>
            <device_name type="rvi">CP15_MPU_REGION_BASE</device_name>
            <device_name type="cadi">CP15_MPU_REGION_BASE</device_name>
            <description language="en">Describes the base address of a region</description>
            <bitField conditional="false" name="Base_address">
                <gui_name language="en">Base address</gui_name>
                <description language="en">Physical base address</description>
                <definition>[31:5]</definition>
            </bitField>
        </register>
        <register access="RW" name="MPU_REGION_CONFIG" size="4">
            <gui_name language="en">Region Size and Enable</gui_name>
            <alias_name>CP15_MPU_REGION_CONFIG</alias_name>
            <device_name type="rvi">CP15_MPU_REGION_CONFIG</device_name>
            <device_name type="cadi">CP15_MPU_REGION_CONFIG</device_name>
            <description language="en">Enables and holds the size of a region that is defined by the Memory Region Number Register</description>
            <bitField conditional="false" name="Region_size" enumerationId="CP15_MPU_REGION_CONFIG_SIZE">
                <gui_name language="en">Region size</gui_name>
                <description language="en">Defines the region size</description>
                <definition>[5:1]</definition>
            </bitField>
            <bitField conditional="false" name="Enable" enumerationId="GENERIC_DISABLED_ENABLED">
                <gui_name language="en">Enable</gui_name>
                <description language="en">Enables or disables a memory region</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="MPU_REGION_ACCESS" size="4">
            <gui_name language="en">Region Access Control</gui_name>
            <alias_name>CP15_MPU_REGION_ACCESS</alias_name>
            <device_name type="rvi">CP15_MPU_REGION_ACCESS</device_name>
            <device_name type="cadi">CP15_MPU_REGION_ACCESS</device_name>
            <description language="en">Holds the region attributes and access permissions for a given memory region</description>
            <bitField conditional="false" name="XN" enumerationId="CP15_MPU_RAC_XN">
                <gui_name language="en">XN</gui_name>
                <description language="en">Determines if a region of memory is executable</description>
                <definition>[12]</definition>
            </bitField>
            <bitField conditional="false" name="AP" enumerationId="CP15_MPU_RAC_AP">
                <gui_name language="en">AP</gui_name>
                <description language="en">Defines the data access permissions</description>
                <definition>[10:8]</definition>
            </bitField>
            <bitField conditional="false" name="TEX">
                <gui_name language="en">TEX</gui_name>
                <description language="en">Defines the type extension attribute</description>
                <definition>[5:3]</definition>
            </bitField>
            <bitField conditional="false" name="S" enumerationId="CP15_MPU_RAC_S">
                <gui_name language="en">S</gui_name>
                <description language="en">Determines if the memory region is Shared or Non-Shared</description>
                <definition>[2]</definition>
            </bitField>
            <bitField conditional="false" name="C" enumerationId="CP15_MPU_RAC_C">
                <gui_name language="en">C</gui_name>
                <description language="en">Determines if memory region type is Cacheable</description>
                <definition>[1]</definition>
            </bitField>
            <bitField conditional="false" name="B" enumerationId="CP15_MPU_RAC_B">
                <gui_name language="en">B</gui_name>
                <description language="en">Determines if memory region type is Bufferable</description>
                <definition>[0]</definition>
            </bitField>
        </register>
        <register access="RW" name="MPU_REGION_NUMBER" size="4">
            <gui_name language="en">Memory Region Number</gui_name>
            <alias_name>CP15_MPU_REGION_NUMBER</alias_name>
            <device_name type="rvi">CP15_MPU_REGION_NUMBER</device_name>
            <device_name type="cadi">CP15_MPU_REGION_NUMBER</device_name>
            <description language="en">This register determines which of the multiple MPU region registers is accessed</description>
            <bitField conditional="false" name="Region">
                <gui_name language="en">Region</gui_name>
                <description language="en">Defines the group of registers to be accessed</description>
                <definition>[3:0]</definition>
            </bitField>
        </register>
    </register_group>
</register_list>

